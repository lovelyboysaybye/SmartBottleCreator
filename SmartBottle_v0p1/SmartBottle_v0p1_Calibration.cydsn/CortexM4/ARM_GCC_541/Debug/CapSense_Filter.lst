ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"CapSense_Filter.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  21              		.align	2
  22              		.global	CapSense_FtInitialize
  23              		.thumb
  24              		.thumb_func
  25              		.type	CapSense_FtInitialize, %function
  26              	CapSense_FtInitialize:
  27              	.LFB125:
  28              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 2.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v2.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 2


  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  29              		.loc 1 64 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE125:
  37              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  38 0002 00BF     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  39              		.align	2
  40              		.global	CapSense_FtInitializeBaselineChannel
  41              		.thumb
  42              		.thumb_func
  43              		.type	CapSense_FtInitializeBaselineChannel, %function
  44              	CapSense_FtInitializeBaselineChannel:
  45              	.LFB134:
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 3


  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 4


 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 5


 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 6


 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 7


 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 8


 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 9


 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 10


 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 11


 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  46              		.loc 1 555 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  52              		.loc 1 557 0
  53 0000 C9B2     		uxtb	r1, r1
  54              	.LVL1:
  55 0002 0629     		cmp	r1, #6
  56 0004 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  57              		.loc 1 561 0
  58 0006 8318     		adds	r3, r0, r2
  59 0008 0021     		movs	r1, #0
  60 000a 1971     		strb	r1, [r3, #4]
  61              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 12


 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  62              		.loc 1 578 0
  63 000c 30F81210 		ldrh	r1, [r0, r2, lsl #1]
  64 0010 00EB4203 		add	r3, r0, r2, lsl #1
  65 0014 5980     		strh	r1, [r3, #2]	@ movhi
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  66              		.loc 1 585 0
  67 0016 0244     		add	r2, r2, r0
  68              	.LVL2:
  69 0018 0023     		movs	r3, #0
  70 001a 1372     		strb	r3, [r2, #8]
  71 001c 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE134:
  74              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  75 001e 00BF     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_FtInitializeBaseline
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_FtInitializeBaseline, %function
  81              	CapSense_FtInitializeBaseline:
  82              	.LFB133:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  83              		.loc 1 528 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL3:
  88 0000 70B5     		push	{r4, r5, r6, lr}
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 0646     		mov	r6, r0
  95 0004 0D46     		mov	r5, r1
  96              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
  97              		.loc 1 532 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 13


  98 0006 0123     		movs	r3, #1
  99 0008 05E0     		b	.L5
 100              	.LVL5:
 101              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 102              		.loc 1 534 0
 103 000a 2246     		mov	r2, r4
 104 000c 2946     		mov	r1, r5
 105 000e 3046     		mov	r0, r6
 106 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 107              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 108              		.loc 1 532 0
 109 0014 2346     		mov	r3, r4
 110              	.LVL7:
 111              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 112              		.loc 1 532 0 is_stmt 0 discriminator 1
 113 0016 5C1E     		subs	r4, r3, #1
 114              	.LVL8:
 115 0018 002B     		cmp	r3, #0
 116 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 117              		.loc 1 536 0 is_stmt 1
 118 001c 70BD     		pop	{r4, r5, r6, pc}
 119              		.cfi_endproc
 120              	.LFE133:
 121              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 122 001e 00BF     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 123              		.align	2
 124              		.global	CapSense_InitializeSensorBaseline
 125              		.thumb
 126              		.thumb_func
 127              		.type	CapSense_InitializeSensorBaseline, %function
 128              	CapSense_InitializeSensorBaseline:
 129              	.LFB132:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 130              		.loc 1 500 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              	.LVL9:
 135 0000 70B5     		push	{r4, r5, r6, lr}
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 6, -8
 140              		.cfi_offset 14, -4
 141              	.LVL10:
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 142              		.loc 1 506 0
 143 0002 084D     		ldr	r5, .L10
 144 0004 C300     		lsls	r3, r0, #3
 145 0006 1A1A     		subs	r2, r3, r0
 146 0008 9400     		lsls	r4, r2, #2
 147 000a 2246     		mov	r2, r4
 148 000c 2C44     		add	r4, r4, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 14


 149 000e A668     		ldr	r6, [r4, #8]
 150              	.LVL11:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151              		.loc 1 507 0
 152 0010 01EB8101 		add	r1, r1, r1, lsl #2
 153              	.LVL12:
 154 0014 4C00     		lsls	r4, r1, #1
 155              	.LVL13:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 156              		.loc 1 509 0
 157 0016 2A44     		add	r2, r2, r5
 158 0018 917E     		ldrb	r1, [r2, #26]	@ zero_extendqisi2
 159 001a 3019     		adds	r0, r6, r4
 160              	.LVL14:
 161 001c FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 162              	.LVL15:
 163 0020 70BD     		pop	{r4, r5, r6, pc}
 164              	.LVL16:
 165              	.L11:
 166 0022 00BF     		.align	2
 167              	.L10:
 168 0024 00000000 		.word	CapSense_dsFlash
 169              		.cfi_endproc
 170              	.LFE132:
 171              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 172              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 173              		.align	2
 174              		.global	CapSense_InitializeWidgetBaseline
 175              		.thumb
 176              		.thumb_func
 177              		.type	CapSense_InitializeWidgetBaseline, %function
 178              	CapSense_InitializeWidgetBaseline:
 179              	.LFB131:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 180              		.loc 1 456 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL17:
 185 0000 38B5     		push	{r3, r4, r5, lr}
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 3, -16
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 191 0002 0546     		mov	r5, r0
 192              	.LVL18:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 193              		.loc 1 463 0
 194 0004 C0EBC002 		rsb	r2, r0, r0, lsl #3
 195 0008 9300     		lsls	r3, r2, #2
 196 000a 064A     		ldr	r2, .L16
 197 000c 1344     		add	r3, r3, r2
 198 000e 1B8B     		ldrh	r3, [r3, #24]
 199              	.LVL19:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 200              		.loc 1 465 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 15


 201 0010 04E0     		b	.L13
 202              	.LVL20:
 203              	.L14:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 204              		.loc 1 467 0
 205 0012 2146     		mov	r1, r4
 206 0014 2846     		mov	r0, r5
 207 0016 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 208              	.LVL21:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 209              		.loc 1 465 0
 210 001a 2346     		mov	r3, r4
 211              	.LVL22:
 212              	.L13:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 213              		.loc 1 465 0 is_stmt 0 discriminator 1
 214 001c 5C1E     		subs	r4, r3, #1
 215              	.LVL23:
 216 001e 002B     		cmp	r3, #0
 217 0020 F7D1     		bne	.L14
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 218              		.loc 1 469 0 is_stmt 1
 219 0022 38BD     		pop	{r3, r4, r5, pc}
 220              	.LVL24:
 221              	.L17:
 222              		.align	2
 223              	.L16:
 224 0024 00000000 		.word	CapSense_dsFlash
 225              		.cfi_endproc
 226              	.LFE131:
 227              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 228              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 229              		.align	2
 230              		.global	CapSense_InitializeAllBaselines
 231              		.thumb
 232              		.thumb_func
 233              		.type	CapSense_InitializeAllBaselines, %function
 234              	CapSense_InitializeAllBaselines:
 235              	.LFB130:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 236              		.loc 1 420 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
 244              	.LVL25:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 245              		.loc 1 423 0
 246 0002 0A23     		movs	r3, #10
 247 0004 03E0     		b	.L19
 248              	.LVL26:
 249              	.L20:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 250              		.loc 1 425 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 16


 251 0006 2046     		mov	r0, r4
 252 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 253              	.LVL27:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 254              		.loc 1 423 0
 255 000c 2346     		mov	r3, r4
 256              	.LVL28:
 257              	.L19:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 258              		.loc 1 423 0 is_stmt 0 discriminator 1
 259 000e 5C1E     		subs	r4, r3, #1
 260              	.LVL29:
 261 0010 002B     		cmp	r3, #0
 262 0012 F8D1     		bne	.L20
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 263              		.loc 1 427 0 is_stmt 1
 264 0014 10BD     		pop	{r4, pc}
 265              		.cfi_endproc
 266              	.LFE130:
 267              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 268 0016 00BF     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 269              		.align	2
 270              		.global	CapSense_FtIIR1stOrder
 271              		.thumb
 272              		.thumb_func
 273              		.type	CapSense_FtIIR1stOrder, %function
 274              	CapSense_FtIIR1stOrder:
 275              	.LFB135:
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 17


 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 18


 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 19


 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 20


 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 21


 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 22


 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 23


 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 24


1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 25


1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 26


1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 27


1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 28


1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 29


1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 30


1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 31


1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 32


1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 33


1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 34


1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 35


1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 36


1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 276              		.loc 1 1702 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL30:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 282              		.loc 1 1710 0
 283 0000 00FA03F3 		lsl	r3, r0, r3
 284              	.LVL31:
 285 0004 C2F58070 		rsb	r0, r2, #256
 286              	.LVL32:
 287 0008 01FB00F1 		mul	r1, r1, r0
 288              	.LVL33:
 289 000c 02FB0310 		mla	r0, r2, r3, r1
 290              	.LVL34:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
 291              		.loc 1 1714 0
 292 0010 000A     		lsrs	r0, r0, #8
 293              	.LVL35:
 294 0012 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE135:
 297              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 298              		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 299              		.align	2
 300              		.global	CapSense_FtUpdateBaseline
 301              		.thumb
 302              		.thumb_func
 303              		.type	CapSense_FtUpdateBaseline, %function
 304              	CapSense_FtUpdateBaseline:
 305              	.LFB129:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 306              		.loc 1 259 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              	.LVL36:
 311 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 312              		.cfi_def_cfa_offset 24
 313              		.cfi_offset 4, -24
 314              		.cfi_offset 5, -20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 37


 315              		.cfi_offset 6, -16
 316              		.cfi_offset 7, -12
 317              		.cfi_offset 8, -8
 318              		.cfi_offset 14, -4
 319 0004 0746     		mov	r7, r0
 320 0006 0D46     		mov	r5, r1
 321 0008 1646     		mov	r6, r2
 322              	.LVL37:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 323              		.loc 1 271 0
 324 000a 0123     		movs	r3, #1
 325 000c 38E0     		b	.L24
 326              	.LVL38:
 327              	.L30:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 328              		.loc 1 283 0
 329 000e 35F81400 		ldrh	r0, [r5, r4, lsl #1]
 330 0012 05EB4403 		add	r3, r5, r4, lsl #1
 331 0016 5988     		ldrh	r1, [r3, #2]
 332 0018 8842     		cmp	r0, r1
 333 001a 07D3     		bcc	.L25
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 334              		.loc 1 285 0
 335 001c 421A     		subs	r2, r0, r1
 336              	.LVL39:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 337              		.loc 1 287 0
 338 001e 2B19     		adds	r3, r5, r4
 339 0020 4FF0000E 		mov	lr, #0
 340 0024 83F808E0 		strb	lr, [r3, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 341              		.loc 1 286 0
 342 0028 0123     		movs	r3, #1
 343 002a 01E0     		b	.L26
 344              	.LVL40:
 345              	.L25:
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 346              		.loc 1 291 0
 347 002c 0A1A     		subs	r2, r1, r0
 348              	.LVL41:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 349              		.loc 1 292 0
 350 002e 0023     		movs	r3, #0
 351              	.LVL42:
 352              	.L26:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 353              		.loc 1 296 0
 354 0030 8BB9     		cbnz	r3, .L27
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 355              		.loc 1 296 0 is_stmt 0 discriminator 1
 356 0032 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 357              	.LVL43:
 358 0034 9A42     		cmp	r2, r3
 359 0036 0ED9     		bls	.L27
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 360              		.loc 1 298 0 is_stmt 1
 361 0038 2B19     		adds	r3, r5, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 38


 362 003a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 363 003c 3A7A     		ldrb	r2, [r7, #8]	@ zero_extendqisi2
 364              	.LVL44:
 365 003e 9342     		cmp	r3, r2
 366 0040 05D3     		bcc	.L28
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 367              		.loc 1 300 0
 368 0042 2246     		mov	r2, r4
 369 0044 3146     		mov	r1, r6
 370 0046 2846     		mov	r0, r5
 371 0048 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 372              	.LVL45:
 373 004c 17E0     		b	.L29
 374              	.L28:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 375              		.loc 1 304 0
 376 004e 2A19     		adds	r2, r5, r4
 377 0050 0133     		adds	r3, r3, #1
 378 0052 1372     		strb	r3, [r2, #8]
 379 0054 13E0     		b	.L29
 380              	.LVL46:
 381              	.L27:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 382              		.loc 1 318 0
 383 0056 F3B2     		uxtb	r3, r6
 384 0058 062B     		cmp	r3, #6
 385 005a 10D0     		beq	.L29
 386              	.LVL47:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 387              		.loc 1 323 0
 388 005c 05EB0408 		add	r8, r5, r4
 389 0060 98F804E0 		ldrb	lr, [r8, #4]	@ zero_extendqisi2
 390              	.LVL48:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 391              		.loc 1 334 0
 392 0064 0823     		movs	r3, #8
 393 0066 0122     		movs	r2, #1
 394              	.LVL49:
 395 0068 4EEA0121 		orr	r1, lr, r1, lsl #8
 396              	.LVL50:
 397 006c FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 398              	.LVL51:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 399              		.loc 1 340 0
 400 0070 C0F30F22 		ubfx	r2, r0, #8, #16
 401 0074 05EB4403 		add	r3, r5, r4, lsl #1
 402 0078 5A80     		strh	r2, [r3, #2]	@ movhi
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 403              		.loc 1 341 0
 404 007a 88F80400 		strb	r0, [r8, #4]
 405              	.LVL52:
 406              	.L29:
 407 007e 2346     		mov	r3, r4
 408              	.LVL53:
 409              	.L24:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 410              		.loc 1 271 0 discriminator 1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 39


 411 0080 5C1E     		subs	r4, r3, #1
 412              	.LVL54:
 413 0082 002B     		cmp	r3, #0
 414 0084 C3D1     		bne	.L30
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 415              		.loc 1 398 0
 416 0086 0020     		movs	r0, #0
 417 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 418              		.cfi_endproc
 419              	.LFE129:
 420              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 421              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 422              		.align	2
 423              		.global	CapSense_UpdateSensorBaseline
 424              		.thumb
 425              		.thumb_func
 426              		.type	CapSense_UpdateSensorBaseline, %function
 427              	CapSense_UpdateSensorBaseline:
 428              	.LFB128:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 429              		.loc 1 201 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL55:
 434 0000 70B5     		push	{r4, r5, r6, lr}
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 4, -16
 437              		.cfi_offset 5, -12
 438              		.cfi_offset 6, -8
 439              		.cfi_offset 14, -4
 440              	.LVL56:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 441              		.loc 1 206 0
 442 0002 074E     		ldr	r6, .L34
 443 0004 C200     		lsls	r2, r0, #3
 444 0006 141A     		subs	r4, r2, r0
 445 0008 A300     		lsls	r3, r4, #2
 446 000a 3344     		add	r3, r3, r6
 447              	.LVL57:
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 448              		.loc 1 209 0
 449 000c 9C68     		ldr	r4, [r3, #8]
 450              	.LVL58:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 451              		.loc 1 210 0
 452 000e 01EB8101 		add	r1, r1, r1, lsl #2
 453              	.LVL59:
 454 0012 4D00     		lsls	r5, r1, #1
 455              	.LVL60:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 456              		.loc 1 211 0
 457 0014 9A7E     		ldrb	r2, [r3, #26]	@ zero_extendqisi2
 458 0016 6119     		adds	r1, r4, r5
 459              	.LVL61:
 460 0018 5868     		ldr	r0, [r3, #4]
 461              	.LVL62:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 40


 462 001a FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 463              	.LVL63:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 464              		.loc 1 222 0
 465 001e 70BD     		pop	{r4, r5, r6, pc}
 466              	.LVL64:
 467              	.L35:
 468              		.align	2
 469              	.L34:
 470 0020 00000000 		.word	CapSense_dsFlash
 471              		.cfi_endproc
 472              	.LFE128:
 473              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 474              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 475              		.align	2
 476              		.global	CapSense_UpdateWidgetBaseline
 477              		.thumb
 478              		.thumb_func
 479              		.type	CapSense_UpdateWidgetBaseline, %function
 480              	CapSense_UpdateWidgetBaseline:
 481              	.LFB127:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 482              		.loc 1 144 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL65:
 487 0000 70B5     		push	{r4, r5, r6, lr}
 488              		.cfi_def_cfa_offset 16
 489              		.cfi_offset 4, -16
 490              		.cfi_offset 5, -12
 491              		.cfi_offset 6, -8
 492              		.cfi_offset 14, -4
 493 0002 0646     		mov	r6, r0
 494              	.LVL66:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 495              		.loc 1 152 0
 496 0004 C0EBC002 		rsb	r2, r0, r0, lsl #3
 497 0008 9300     		lsls	r3, r2, #2
 498 000a 084A     		ldr	r2, .L40
 499 000c 1344     		add	r3, r3, r2
 500 000e 1B8B     		ldrh	r3, [r3, #24]
 501              	.LVL67:
 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 502              		.loc 1 149 0
 503 0010 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 504              		.loc 1 154 0
 505 0012 05E0     		b	.L37
 506              	.LVL68:
 507              	.L38:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 508              		.loc 1 156 0
 509 0014 2146     		mov	r1, r4
 510 0016 3046     		mov	r0, r6
 511 0018 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 512              	.LVL69:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 41


 513 001c 0543     		orrs	r5, r5, r0
 514              	.LVL70:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 515              		.loc 1 154 0
 516 001e 2346     		mov	r3, r4
 517              	.LVL71:
 518              	.L37:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 519              		.loc 1 154 0 is_stmt 0 discriminator 1
 520 0020 5C1E     		subs	r4, r3, #1
 521              	.LVL72:
 522 0022 002B     		cmp	r3, #0
 523 0024 F6D1     		bne	.L38
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 524              		.loc 1 160 0 is_stmt 1
 525 0026 2846     		mov	r0, r5
 526 0028 70BD     		pop	{r4, r5, r6, pc}
 527              	.LVL73:
 528              	.L41:
 529 002a 00BF     		.align	2
 530              	.L40:
 531 002c 00000000 		.word	CapSense_dsFlash
 532              		.cfi_endproc
 533              	.LFE127:
 534              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 535              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 536              		.align	2
 537              		.global	CapSense_UpdateAllBaselines
 538              		.thumb
 539              		.thumb_func
 540              		.type	CapSense_UpdateAllBaselines, %function
 541              	CapSense_UpdateAllBaselines:
 542              	.LFB126:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 543              		.loc 1 99 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 38B5     		push	{r3, r4, r5, lr}
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 3, -16
 550              		.cfi_offset 4, -12
 551              		.cfi_offset 5, -8
 552              		.cfi_offset 14, -4
 553              	.LVL74:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 554              		.loc 1 101 0
 555 0002 0025     		movs	r5, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 556              		.loc 1 103 0
 557 0004 0A23     		movs	r3, #10
 558 0006 04E0     		b	.L43
 559              	.LVL75:
 560              	.L44:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 561              		.loc 1 105 0
 562 0008 2046     		mov	r0, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 42


 563 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 564              	.LVL76:
 565 000e 0543     		orrs	r5, r5, r0
 566              	.LVL77:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 567              		.loc 1 103 0
 568 0010 2346     		mov	r3, r4
 569              	.LVL78:
 570              	.L43:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 571              		.loc 1 103 0 is_stmt 0 discriminator 1
 572 0012 5C1E     		subs	r4, r3, #1
 573              	.LVL79:
 574 0014 002B     		cmp	r3, #0
 575 0016 F7D1     		bne	.L44
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 576              		.loc 1 109 0 is_stmt 1
 577 0018 2846     		mov	r0, r5
 578 001a 38BD     		pop	{r3, r4, r5, pc}
 579              		.cfi_endproc
 580              	.LFE126:
 581              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 582              		.text
 583              	.Letext0:
 584              		.file 2 "d:\\cypress creator\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-e
 585              		.file 3 "d:\\cypress creator\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-e
 586              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 587              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 588              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 589              		.file 7 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 590              		.section	.debug_info,"",%progbits
 591              	.Ldebug_info0:
 592 0000 0A080000 		.4byte	0x80a
 593 0004 0400     		.2byte	0x4
 594 0006 00000000 		.4byte	.Ldebug_abbrev0
 595 000a 04       		.byte	0x4
 596 000b 01       		.uleb128 0x1
 597 000c F0000000 		.4byte	.LASF94
 598 0010 0C       		.byte	0xc
 599 0011 D6020000 		.4byte	.LASF95
 600 0015 0D060000 		.4byte	.LASF96
 601 0019 00000000 		.4byte	.Ldebug_ranges0+0
 602 001d 00000000 		.4byte	0
 603 0021 00000000 		.4byte	.Ldebug_line0
 604 0025 02       		.uleb128 0x2
 605 0026 04       		.byte	0x4
 606 0027 05       		.byte	0x5
 607 0028 696E7400 		.ascii	"int\000"
 608 002c 03       		.uleb128 0x3
 609 002d 04       		.byte	0x4
 610 002e 07       		.byte	0x7
 611 002f F0030000 		.4byte	.LASF0
 612 0033 03       		.uleb128 0x3
 613 0034 08       		.byte	0x8
 614 0035 05       		.byte	0x5
 615 0036 AB020000 		.4byte	.LASF1
 616 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 43


 617 003b 08       		.byte	0x8
 618 003c 04       		.byte	0x4
 619 003d 81030000 		.4byte	.LASF2
 620 0041 03       		.uleb128 0x3
 621 0042 01       		.byte	0x1
 622 0043 06       		.byte	0x6
 623 0044 AF030000 		.4byte	.LASF3
 624 0048 04       		.uleb128 0x4
 625 0049 2E030000 		.4byte	.LASF6
 626 004d 02       		.byte	0x2
 627 004e 1D       		.byte	0x1d
 628 004f 53000000 		.4byte	0x53
 629 0053 03       		.uleb128 0x3
 630 0054 01       		.byte	0x1
 631 0055 08       		.byte	0x8
 632 0056 8D030000 		.4byte	.LASF4
 633 005a 03       		.uleb128 0x3
 634 005b 02       		.byte	0x2
 635 005c 05       		.byte	0x5
 636 005d 95000000 		.4byte	.LASF5
 637 0061 04       		.uleb128 0x4
 638 0062 D2010000 		.4byte	.LASF7
 639 0066 02       		.byte	0x2
 640 0067 2B       		.byte	0x2b
 641 0068 6C000000 		.4byte	0x6c
 642 006c 03       		.uleb128 0x3
 643 006d 02       		.byte	0x2
 644 006e 07       		.byte	0x7
 645 006f 64040000 		.4byte	.LASF8
 646 0073 04       		.uleb128 0x4
 647 0074 D2040000 		.4byte	.LASF9
 648 0078 02       		.byte	0x2
 649 0079 3F       		.byte	0x3f
 650 007a 7E000000 		.4byte	0x7e
 651 007e 03       		.uleb128 0x3
 652 007f 04       		.byte	0x4
 653 0080 05       		.byte	0x5
 654 0081 BE020000 		.4byte	.LASF10
 655 0085 04       		.uleb128 0x4
 656 0086 B2010000 		.4byte	.LASF11
 657 008a 02       		.byte	0x2
 658 008b 41       		.byte	0x41
 659 008c 90000000 		.4byte	0x90
 660 0090 03       		.uleb128 0x3
 661 0091 04       		.byte	0x4
 662 0092 07       		.byte	0x7
 663 0093 52050000 		.4byte	.LASF12
 664 0097 03       		.uleb128 0x3
 665 0098 08       		.byte	0x8
 666 0099 07       		.byte	0x7
 667 009a C3030000 		.4byte	.LASF13
 668 009e 04       		.uleb128 0x4
 669 009f 2F020000 		.4byte	.LASF14
 670 00a3 03       		.byte	0x3
 671 00a4 18       		.byte	0x18
 672 00a5 48000000 		.4byte	0x48
 673 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 44


 674 00aa FD030000 		.4byte	.LASF15
 675 00ae 03       		.byte	0x3
 676 00af 24       		.byte	0x24
 677 00b0 61000000 		.4byte	0x61
 678 00b4 04       		.uleb128 0x4
 679 00b5 BB030000 		.4byte	.LASF16
 680 00b9 03       		.byte	0x3
 681 00ba 2C       		.byte	0x2c
 682 00bb 73000000 		.4byte	0x73
 683 00bf 04       		.uleb128 0x4
 684 00c0 DA030000 		.4byte	.LASF17
 685 00c4 03       		.byte	0x3
 686 00c5 30       		.byte	0x30
 687 00c6 85000000 		.4byte	0x85
 688 00ca 03       		.uleb128 0x3
 689 00cb 04       		.byte	0x4
 690 00cc 07       		.byte	0x7
 691 00cd FF020000 		.4byte	.LASF18
 692 00d1 03       		.uleb128 0x3
 693 00d2 01       		.byte	0x1
 694 00d3 08       		.byte	0x8
 695 00d4 B9020000 		.4byte	.LASF19
 696 00d8 03       		.uleb128 0x3
 697 00d9 04       		.byte	0x4
 698 00da 04       		.byte	0x4
 699 00db A5020000 		.4byte	.LASF20
 700 00df 03       		.uleb128 0x3
 701 00e0 08       		.byte	0x8
 702 00e1 04       		.byte	0x4
 703 00e2 69050000 		.4byte	.LASF21
 704 00e6 05       		.uleb128 0x5
 705 00e7 A5030000 		.4byte	.LASF22
 706 00eb 04       		.byte	0x4
 707 00ec 8203     		.2byte	0x382
 708 00ee BF000000 		.4byte	0xbf
 709 00f2 05       		.uleb128 0x5
 710 00f3 37020000 		.4byte	.LASF23
 711 00f7 04       		.byte	0x4
 712 00f8 8503     		.2byte	0x385
 713 00fa 9E000000 		.4byte	0x9e
 714 00fe 05       		.uleb128 0x5
 715 00ff FA010000 		.4byte	.LASF24
 716 0103 04       		.byte	0x4
 717 0104 8603     		.2byte	0x386
 718 0106 A9000000 		.4byte	0xa9
 719 010a 05       		.uleb128 0x5
 720 010b 4B050000 		.4byte	.LASF25
 721 010f 04       		.byte	0x4
 722 0110 8703     		.2byte	0x387
 723 0112 BF000000 		.4byte	0xbf
 724 0116 04       		.uleb128 0x4
 725 0117 08030000 		.4byte	.LASF26
 726 011b 05       		.byte	0x5
 727 011c FC       		.byte	0xfc
 728 011d FE000000 		.4byte	0xfe
 729 0121 05       		.uleb128 0x5
 730 0122 16000000 		.4byte	.LASF27
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 45


 731 0126 05       		.byte	0x5
 732 0127 0001     		.2byte	0x100
 733 0129 F2000000 		.4byte	0xf2
 734 012d 06       		.uleb128 0x6
 735 012e 01       		.byte	0x1
 736 012f 53000000 		.4byte	0x53
 737 0133 06       		.byte	0x6
 738 0134 61       		.byte	0x61
 739 0135 5E010000 		.4byte	0x15e
 740 0139 07       		.uleb128 0x7
 741 013a DD010000 		.4byte	.LASF28
 742 013e 01       		.byte	0x1
 743 013f 07       		.uleb128 0x7
 744 0140 48040000 		.4byte	.LASF29
 745 0144 02       		.byte	0x2
 746 0145 07       		.uleb128 0x7
 747 0146 26050000 		.4byte	.LASF30
 748 014a 03       		.byte	0x3
 749 014b 07       		.uleb128 0x7
 750 014c 99050000 		.4byte	.LASF31
 751 0150 04       		.byte	0x4
 752 0151 07       		.uleb128 0x7
 753 0152 A5000000 		.4byte	.LASF32
 754 0156 05       		.byte	0x5
 755 0157 07       		.uleb128 0x7
 756 0158 8D020000 		.4byte	.LASF33
 757 015c 06       		.byte	0x6
 758 015d 00       		.byte	0
 759 015e 04       		.uleb128 0x4
 760 015f 78050000 		.4byte	.LASF34
 761 0163 06       		.byte	0x6
 762 0164 68       		.byte	0x68
 763 0165 2D010000 		.4byte	0x12d
 764 0169 08       		.uleb128 0x8
 765 016a 0E       		.byte	0xe
 766 016b 06       		.byte	0x6
 767 016c 8C       		.byte	0x8c
 768 016d EA010000 		.4byte	0x1ea
 769 0171 09       		.uleb128 0x9
 770 0172 C7040000 		.4byte	.LASF35
 771 0176 06       		.byte	0x6
 772 0177 92       		.byte	0x92
 773 0178 FE000000 		.4byte	0xfe
 774 017c 00       		.byte	0
 775 017d 09       		.uleb128 0x9
 776 017e 43030000 		.4byte	.LASF36
 777 0182 06       		.byte	0x6
 778 0183 97       		.byte	0x97
 779 0184 16010000 		.4byte	0x116
 780 0188 02       		.byte	0x2
 781 0189 09       		.uleb128 0x9
 782 018a F2010000 		.4byte	.LASF37
 783 018e 06       		.byte	0x6
 784 018f 9C       		.byte	0x9c
 785 0190 F2000000 		.4byte	0xf2
 786 0194 04       		.byte	0x4
 787 0195 09       		.uleb128 0x9
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 46


 788 0196 E0000000 		.4byte	.LASF38
 789 019a 06       		.byte	0x6
 790 019b A1       		.byte	0xa1
 791 019c F2000000 		.4byte	0xf2
 792 01a0 05       		.byte	0x5
 793 01a1 09       		.uleb128 0x9
 794 01a2 76030000 		.4byte	.LASF39
 795 01a6 06       		.byte	0x6
 796 01a7 A6       		.byte	0xa6
 797 01a8 F2000000 		.4byte	0xf2
 798 01ac 06       		.byte	0x6
 799 01ad 09       		.uleb128 0x9
 800 01ae 38030000 		.4byte	.LASF40
 801 01b2 06       		.byte	0x6
 802 01b3 AB       		.byte	0xab
 803 01b4 F2000000 		.4byte	0xf2
 804 01b8 07       		.byte	0x7
 805 01b9 09       		.uleb128 0x9
 806 01ba 51000000 		.4byte	.LASF41
 807 01be 06       		.byte	0x6
 808 01bf B2       		.byte	0xb2
 809 01c0 21010000 		.4byte	0x121
 810 01c4 08       		.byte	0x8
 811 01c5 09       		.uleb128 0x9
 812 01c6 8D000000 		.4byte	.LASF42
 813 01ca 06       		.byte	0x6
 814 01cb BA       		.byte	0xba
 815 01cc EA010000 		.4byte	0x1ea
 816 01d0 09       		.byte	0x9
 817 01d1 09       		.uleb128 0x9
 818 01d2 4A020000 		.4byte	.LASF43
 819 01d6 06       		.byte	0x6
 820 01d7 C3       		.byte	0xc3
 821 01d8 FE000000 		.4byte	0xfe
 822 01dc 0A       		.byte	0xa
 823 01dd 09       		.uleb128 0x9
 824 01de C5010000 		.4byte	.LASF44
 825 01e2 06       		.byte	0x6
 826 01e3 C8       		.byte	0xc8
 827 01e4 F2000000 		.4byte	0xf2
 828 01e8 0C       		.byte	0xc
 829 01e9 00       		.byte	0
 830 01ea 0A       		.uleb128 0xa
 831 01eb F2000000 		.4byte	0xf2
 832 01ef FA010000 		.4byte	0x1fa
 833 01f3 0B       		.uleb128 0xb
 834 01f4 CA000000 		.4byte	0xca
 835 01f8 00       		.byte	0
 836 01f9 00       		.byte	0
 837 01fa 04       		.uleb128 0x4
 838 01fb 57060000 		.4byte	.LASF45
 839 01ff 06       		.byte	0x6
 840 0200 C9       		.byte	0xc9
 841 0201 69010000 		.4byte	0x169
 842 0205 0C       		.uleb128 0xc
 843 0206 0A       		.byte	0xa
 844 0207 06       		.byte	0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 47


 845 0208 4A01     		.2byte	0x14a
 846 020a 50020000 		.4byte	0x250
 847 020e 0D       		.uleb128 0xd
 848 020f 72617700 		.ascii	"raw\000"
 849 0213 06       		.byte	0x6
 850 0214 4F01     		.2byte	0x14f
 851 0216 50020000 		.4byte	0x250
 852 021a 00       		.byte	0
 853 021b 0E       		.uleb128 0xe
 854 021c 38000000 		.4byte	.LASF46
 855 0220 06       		.byte	0x6
 856 0221 5401     		.2byte	0x154
 857 0223 50020000 		.4byte	0x250
 858 0227 02       		.byte	0x2
 859 0228 0E       		.uleb128 0xe
 860 0229 70050000 		.4byte	.LASF47
 861 022d 06       		.byte	0x6
 862 022e 5A01     		.2byte	0x15a
 863 0230 EA010000 		.4byte	0x1ea
 864 0234 04       		.byte	0x4
 865 0235 0E       		.uleb128 0xe
 866 0236 5C000000 		.4byte	.LASF48
 867 023a 06       		.byte	0x6
 868 023b 5F01     		.2byte	0x15f
 869 023d 16010000 		.4byte	0x116
 870 0241 06       		.byte	0x6
 871 0242 0E       		.uleb128 0xe
 872 0243 20030000 		.4byte	.LASF49
 873 0247 06       		.byte	0x6
 874 0248 6401     		.2byte	0x164
 875 024a 60020000 		.4byte	0x260
 876 024e 08       		.byte	0x8
 877 024f 00       		.byte	0
 878 0250 0A       		.uleb128 0xa
 879 0251 FE000000 		.4byte	0xfe
 880 0255 60020000 		.4byte	0x260
 881 0259 0B       		.uleb128 0xb
 882 025a CA000000 		.4byte	0xca
 883 025e 00       		.byte	0
 884 025f 00       		.byte	0
 885 0260 0A       		.uleb128 0xa
 886 0261 21010000 		.4byte	0x121
 887 0265 70020000 		.4byte	0x270
 888 0269 0B       		.uleb128 0xb
 889 026a CA000000 		.4byte	0xca
 890 026e 00       		.byte	0
 891 026f 00       		.byte	0
 892 0270 05       		.uleb128 0x5
 893 0271 12040000 		.4byte	.LASF50
 894 0275 06       		.byte	0x6
 895 0276 6501     		.2byte	0x165
 896 0278 05020000 		.4byte	0x205
 897 027c 0C       		.uleb128 0xc
 898 027d 1C       		.byte	0x1c
 899 027e 06       		.byte	0x6
 900 027f 4B02     		.2byte	0x24b
 901 0281 FB020000 		.4byte	0x2fb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 48


 902 0285 0E       		.uleb128 0xe
 903 0286 80060000 		.4byte	.LASF51
 904 028a 06       		.byte	0x6
 905 028b 5402     		.2byte	0x254
 906 028d FB020000 		.4byte	0x2fb
 907 0291 00       		.byte	0
 908 0292 0E       		.uleb128 0xe
 909 0293 0C050000 		.4byte	.LASF52
 910 0297 06       		.byte	0x6
 911 0298 5B02     		.2byte	0x25b
 912 029a 02030000 		.4byte	0x302
 913 029e 04       		.byte	0x4
 914 029f 0E       		.uleb128 0xe
 915 02a0 B5050000 		.4byte	.LASF53
 916 02a4 06       		.byte	0x6
 917 02a5 6102     		.2byte	0x261
 918 02a7 04030000 		.4byte	0x304
 919 02ab 08       		.byte	0x8
 920 02ac 0E       		.uleb128 0xe
 921 02ad E2050000 		.4byte	.LASF54
 922 02b1 06       		.byte	0x6
 923 02b2 6602     		.2byte	0x266
 924 02b4 02030000 		.4byte	0x302
 925 02b8 0C       		.byte	0xc
 926 02b9 0E       		.uleb128 0xe
 927 02ba 1F020000 		.4byte	.LASF55
 928 02be 06       		.byte	0x6
 929 02bf 6D02     		.2byte	0x26d
 930 02c1 0A030000 		.4byte	0x30a
 931 02c5 10       		.byte	0x10
 932 02c6 0E       		.uleb128 0xe
 933 02c7 E3030000 		.4byte	.LASF56
 934 02cb 06       		.byte	0x6
 935 02cc 7202     		.2byte	0x272
 936 02ce 0A010000 		.4byte	0x10a
 937 02d2 14       		.byte	0x14
 938 02d3 0E       		.uleb128 0xe
 939 02d4 61000000 		.4byte	.LASF57
 940 02d8 06       		.byte	0x6
 941 02d9 7902     		.2byte	0x279
 942 02db FE000000 		.4byte	0xfe
 943 02df 18       		.byte	0x18
 944 02e0 0E       		.uleb128 0xe
 945 02e1 CD020000 		.4byte	.LASF58
 946 02e5 06       		.byte	0x6
 947 02e6 8402     		.2byte	0x284
 948 02e8 F2000000 		.4byte	0xf2
 949 02ec 1A       		.byte	0x1a
 950 02ed 0E       		.uleb128 0xe
 951 02ee 4C030000 		.4byte	.LASF59
 952 02f2 06       		.byte	0x6
 953 02f3 8C02     		.2byte	0x28c
 954 02f5 F2000000 		.4byte	0xf2
 955 02f9 1B       		.byte	0x1b
 956 02fa 00       		.byte	0
 957 02fb 0F       		.uleb128 0xf
 958 02fc 04       		.byte	0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 49


 959 02fd 01030000 		.4byte	0x301
 960 0301 10       		.uleb128 0x10
 961 0302 11       		.uleb128 0x11
 962 0303 04       		.byte	0x4
 963 0304 0F       		.uleb128 0xf
 964 0305 04       		.byte	0x4
 965 0306 70020000 		.4byte	0x270
 966 030a 0F       		.uleb128 0xf
 967 030b 04       		.byte	0x4
 968 030c F2000000 		.4byte	0xf2
 969 0310 05       		.uleb128 0x5
 970 0311 BC000000 		.4byte	.LASF60
 971 0315 06       		.byte	0x6
 972 0316 8D02     		.2byte	0x28d
 973 0318 7C020000 		.4byte	0x27c
 974 031c 12       		.uleb128 0x12
 975 031d 1801     		.2byte	0x118
 976 031f 06       		.byte	0x6
 977 0320 9302     		.2byte	0x293
 978 0322 34030000 		.4byte	0x334
 979 0326 0E       		.uleb128 0xe
 980 0327 F2050000 		.4byte	.LASF61
 981 032b 06       		.byte	0x6
 982 032c 9802     		.2byte	0x298
 983 032e 34030000 		.4byte	0x334
 984 0332 00       		.byte	0
 985 0333 00       		.byte	0
 986 0334 0A       		.uleb128 0xa
 987 0335 10030000 		.4byte	0x310
 988 0339 44030000 		.4byte	0x344
 989 033d 0B       		.uleb128 0xb
 990 033e CA000000 		.4byte	0xca
 991 0342 09       		.byte	0x9
 992 0343 00       		.byte	0
 993 0344 05       		.uleb128 0x5
 994 0345 00000000 		.4byte	.LASF62
 995 0349 06       		.byte	0x6
 996 034a 9902     		.2byte	0x299
 997 034c 1C030000 		.4byte	0x31c
 998 0350 13       		.uleb128 0x13
 999 0351 93040000 		.4byte	.LASF97
 1000 0355 01       		.byte	0x1
 1001 0356 3F       		.byte	0x3f
 1002 0357 00000000 		.4byte	.LFB125
 1003 035b 02000000 		.4byte	.LFE125-.LFB125
 1004 035f 01       		.uleb128 0x1
 1005 0360 9C       		.byte	0x9c
 1006 0361 14       		.uleb128 0x14
 1007 0362 51020000 		.4byte	.LASF66
 1008 0366 01       		.byte	0x1
 1009 0367 2A02     		.2byte	0x22a
 1010 0369 00000000 		.4byte	.LFB134
 1011 036d 1E000000 		.4byte	.LFE134-.LFB134
 1012 0371 01       		.uleb128 0x1
 1013 0372 9C       		.byte	0x9c
 1014 0373 A6030000 		.4byte	0x3a6
 1015 0377 15       		.uleb128 0x15
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 50


 1016 0378 8D060000 		.4byte	.LASF63
 1017 037c 01       		.byte	0x1
 1018 037d 2A02     		.2byte	0x22a
 1019 037f 04030000 		.4byte	0x304
 1020 0383 01       		.uleb128 0x1
 1021 0384 50       		.byte	0x50
 1022 0385 16       		.uleb128 0x16
 1023 0386 E9000000 		.4byte	.LASF64
 1024 038a 01       		.byte	0x1
 1025 038b 2A02     		.2byte	0x22a
 1026 038d 0A010000 		.4byte	0x10a
 1027 0391 00000000 		.4byte	.LLST0
 1028 0395 16       		.uleb128 0x16
 1029 0396 DC040000 		.4byte	.LASF65
 1030 039a 01       		.byte	0x1
 1031 039b 2A02     		.2byte	0x22a
 1032 039d 0A010000 		.4byte	0x10a
 1033 03a1 21000000 		.4byte	.LLST1
 1034 03a5 00       		.byte	0
 1035 03a6 14       		.uleb128 0x14
 1036 03a7 A9040000 		.4byte	.LASF67
 1037 03ab 01       		.byte	0x1
 1038 03ac 0F02     		.2byte	0x20f
 1039 03ae 00000000 		.4byte	.LFB133
 1040 03b2 1E000000 		.4byte	.LFE133-.LFB133
 1041 03b6 01       		.uleb128 0x1
 1042 03b7 9C       		.byte	0x9c
 1043 03b8 09040000 		.4byte	0x409
 1044 03bc 16       		.uleb128 0x16
 1045 03bd 8D060000 		.4byte	.LASF63
 1046 03c1 01       		.byte	0x1
 1047 03c2 0F02     		.2byte	0x20f
 1048 03c4 04030000 		.4byte	0x304
 1049 03c8 42000000 		.4byte	.LLST2
 1050 03cc 16       		.uleb128 0x16
 1051 03cd E9000000 		.4byte	.LASF64
 1052 03d1 01       		.byte	0x1
 1053 03d2 0F02     		.2byte	0x20f
 1054 03d4 0A010000 		.4byte	0x10a
 1055 03d8 60000000 		.4byte	.LLST3
 1056 03dc 17       		.uleb128 0x17
 1057 03dd 06040000 		.4byte	.LASF71
 1058 03e1 01       		.byte	0x1
 1059 03e2 1102     		.2byte	0x211
 1060 03e4 0A010000 		.4byte	0x10a
 1061 03e8 7E000000 		.4byte	.LLST4
 1062 03ec 18       		.uleb128 0x18
 1063 03ed 14000000 		.4byte	.LVL6
 1064 03f1 61030000 		.4byte	0x361
 1065 03f5 19       		.uleb128 0x19
 1066 03f6 01       		.uleb128 0x1
 1067 03f7 50       		.byte	0x50
 1068 03f8 02       		.uleb128 0x2
 1069 03f9 76       		.byte	0x76
 1070 03fa 00       		.sleb128 0
 1071 03fb 19       		.uleb128 0x19
 1072 03fc 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 51


 1073 03fd 51       		.byte	0x51
 1074 03fe 02       		.uleb128 0x2
 1075 03ff 75       		.byte	0x75
 1076 0400 00       		.sleb128 0
 1077 0401 19       		.uleb128 0x19
 1078 0402 01       		.uleb128 0x1
 1079 0403 52       		.byte	0x52
 1080 0404 02       		.uleb128 0x2
 1081 0405 74       		.byte	0x74
 1082 0406 00       		.sleb128 0
 1083 0407 00       		.byte	0
 1084 0408 00       		.byte	0
 1085 0409 14       		.uleb128 0x14
 1086 040a 54030000 		.4byte	.LASF68
 1087 040e 01       		.byte	0x1
 1088 040f F301     		.2byte	0x1f3
 1089 0411 00000000 		.4byte	.LFB132
 1090 0415 28000000 		.4byte	.LFE132-.LFB132
 1091 0419 01       		.uleb128 0x1
 1092 041a 9C       		.byte	0x9c
 1093 041b 88040000 		.4byte	0x488
 1094 041f 16       		.uleb128 0x16
 1095 0420 42050000 		.4byte	.LASF69
 1096 0424 01       		.byte	0x1
 1097 0425 F301     		.2byte	0x1f3
 1098 0427 0A010000 		.4byte	0x10a
 1099 042b B3000000 		.4byte	.LLST5
 1100 042f 16       		.uleb128 0x16
 1101 0430 3D000000 		.4byte	.LASF70
 1102 0434 01       		.byte	0x1
 1103 0435 F301     		.2byte	0x1f3
 1104 0437 0A010000 		.4byte	0x10a
 1105 043b D4000000 		.4byte	.LLST6
 1106 043f 17       		.uleb128 0x17
 1107 0440 8D060000 		.4byte	.LASF63
 1108 0444 01       		.byte	0x1
 1109 0445 F501     		.2byte	0x1f5
 1110 0447 04030000 		.4byte	0x304
 1111 044b F5000000 		.4byte	.LLST7
 1112 044f 1A       		.uleb128 0x1a
 1113 0450 9B030000 		.4byte	.LASF74
 1114 0454 01       		.byte	0x1
 1115 0455 F601     		.2byte	0x1f6
 1116 0457 88040000 		.4byte	0x488
 1117 045b 18       		.uleb128 0x18
 1118 045c 20000000 		.4byte	.LVL15
 1119 0460 A6030000 		.4byte	0x3a6
 1120 0464 19       		.uleb128 0x19
 1121 0465 01       		.uleb128 0x1
 1122 0466 50       		.byte	0x50
 1123 0467 05       		.uleb128 0x5
 1124 0468 76       		.byte	0x76
 1125 0469 00       		.sleb128 0
 1126 046a 74       		.byte	0x74
 1127 046b 00       		.sleb128 0
 1128 046c 22       		.byte	0x22
 1129 046d 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 52


 1130 046e 01       		.uleb128 0x1
 1131 046f 51       		.byte	0x51
 1132 0470 15       		.uleb128 0x15
 1133 0471 F3       		.byte	0xf3
 1134 0472 01       		.uleb128 0x1
 1135 0473 50       		.byte	0x50
 1136 0474 33       		.byte	0x33
 1137 0475 24       		.byte	0x24
 1138 0476 F3       		.byte	0xf3
 1139 0477 01       		.uleb128 0x1
 1140 0478 50       		.byte	0x50
 1141 0479 1C       		.byte	0x1c
 1142 047a 32       		.byte	0x32
 1143 047b 24       		.byte	0x24
 1144 047c 75       		.byte	0x75
 1145 047d 00       		.sleb128 0
 1146 047e 22       		.byte	0x22
 1147 047f 23       		.byte	0x23
 1148 0480 1A       		.uleb128 0x1a
 1149 0481 94       		.byte	0x94
 1150 0482 01       		.byte	0x1
 1151 0483 08       		.byte	0x8
 1152 0484 FF       		.byte	0xff
 1153 0485 1A       		.byte	0x1a
 1154 0486 00       		.byte	0
 1155 0487 00       		.byte	0
 1156 0488 0F       		.uleb128 0xf
 1157 0489 04       		.byte	0x4
 1158 048a 8E040000 		.4byte	0x48e
 1159 048e 1B       		.uleb128 0x1b
 1160 048f 10030000 		.4byte	0x310
 1161 0493 14       		.uleb128 0x14
 1162 0494 C0050000 		.4byte	.LASF72
 1163 0498 01       		.byte	0x1
 1164 0499 C701     		.2byte	0x1c7
 1165 049b 00000000 		.4byte	.LFB131
 1166 049f 28000000 		.4byte	.LFE131-.LFB131
 1167 04a3 01       		.uleb128 0x1
 1168 04a4 9C       		.byte	0x9c
 1169 04a5 FC040000 		.4byte	0x4fc
 1170 04a9 16       		.uleb128 0x16
 1171 04aa 42050000 		.4byte	.LASF69
 1172 04ae 01       		.byte	0x1
 1173 04af C701     		.2byte	0x1c7
 1174 04b1 0A010000 		.4byte	0x10a
 1175 04b5 3F010000 		.4byte	.LLST8
 1176 04b9 17       		.uleb128 0x17
 1177 04ba 3D000000 		.4byte	.LASF70
 1178 04be 01       		.byte	0x1
 1179 04bf C901     		.2byte	0x1c9
 1180 04c1 0A010000 		.4byte	0x10a
 1181 04c5 6B010000 		.4byte	.LLST9
 1182 04c9 17       		.uleb128 0x17
 1183 04ca FE040000 		.4byte	.LASF73
 1184 04ce 01       		.byte	0x1
 1185 04cf CA01     		.2byte	0x1ca
 1186 04d1 0A010000 		.4byte	0x10a
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 53


 1187 04d5 9F010000 		.4byte	.LLST10
 1188 04d9 1A       		.uleb128 0x1a
 1189 04da 9B030000 		.4byte	.LASF74
 1190 04de 01       		.byte	0x1
 1191 04df CC01     		.2byte	0x1cc
 1192 04e1 88040000 		.4byte	0x488
 1193 04e5 18       		.uleb128 0x18
 1194 04e6 1A000000 		.4byte	.LVL21
 1195 04ea 09040000 		.4byte	0x409
 1196 04ee 19       		.uleb128 0x19
 1197 04ef 01       		.uleb128 0x1
 1198 04f0 50       		.byte	0x50
 1199 04f1 02       		.uleb128 0x2
 1200 04f2 75       		.byte	0x75
 1201 04f3 00       		.sleb128 0
 1202 04f4 19       		.uleb128 0x19
 1203 04f5 01       		.uleb128 0x1
 1204 04f6 51       		.byte	0x51
 1205 04f7 02       		.uleb128 0x2
 1206 04f8 74       		.byte	0x74
 1207 04f9 00       		.sleb128 0
 1208 04fa 00       		.byte	0
 1209 04fb 00       		.byte	0
 1210 04fc 14       		.uleb128 0x14
 1211 04fd 6D000000 		.4byte	.LASF75
 1212 0501 01       		.byte	0x1
 1213 0502 A301     		.2byte	0x1a3
 1214 0504 00000000 		.4byte	.LFB130
 1215 0508 16000000 		.4byte	.LFE130-.LFB130
 1216 050c 01       		.uleb128 0x1
 1217 050d 9C       		.byte	0x9c
 1218 050e 33050000 		.4byte	0x533
 1219 0512 17       		.uleb128 0x17
 1220 0513 42050000 		.4byte	.LASF69
 1221 0517 01       		.byte	0x1
 1222 0518 A501     		.2byte	0x1a5
 1223 051a 0A010000 		.4byte	0x10a
 1224 051e B2010000 		.4byte	.LLST11
 1225 0522 18       		.uleb128 0x18
 1226 0523 0C000000 		.4byte	.LVL27
 1227 0527 93040000 		.4byte	0x493
 1228 052b 19       		.uleb128 0x19
 1229 052c 01       		.uleb128 0x1
 1230 052d 50       		.byte	0x50
 1231 052e 02       		.uleb128 0x2
 1232 052f 74       		.byte	0x74
 1233 0530 00       		.sleb128 0
 1234 0531 00       		.byte	0
 1235 0532 00       		.byte	0
 1236 0533 1C       		.uleb128 0x1c
 1237 0534 76020000 		.4byte	.LASF80
 1238 0538 01       		.byte	0x1
 1239 0539 A506     		.2byte	0x6a5
 1240 053b 0A010000 		.4byte	0x10a
 1241 053f 00000000 		.4byte	.LFB135
 1242 0543 14000000 		.4byte	.LFE135-.LFB135
 1243 0547 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 54


 1244 0548 9C       		.byte	0x9c
 1245 0549 9A050000 		.4byte	0x59a
 1246 054d 16       		.uleb128 0x16
 1247 054e 9F000000 		.4byte	.LASF76
 1248 0552 01       		.byte	0x1
 1249 0553 A506     		.2byte	0x6a5
 1250 0555 0A010000 		.4byte	0x10a
 1251 0559 E7010000 		.4byte	.LLST12
 1252 055d 16       		.uleb128 0x16
 1253 055e 8E050000 		.4byte	.LASF77
 1254 0562 01       		.byte	0x1
 1255 0563 A506     		.2byte	0x6a5
 1256 0565 0A010000 		.4byte	0x10a
 1257 0569 08020000 		.4byte	.LLST13
 1258 056d 1D       		.uleb128 0x1d
 1259 056e 6E00     		.ascii	"n\000"
 1260 0570 01       		.byte	0x1
 1261 0571 A506     		.2byte	0x6a5
 1262 0573 0A010000 		.4byte	0x10a
 1263 0577 01       		.uleb128 0x1
 1264 0578 52       		.byte	0x52
 1265 0579 16       		.uleb128 0x16
 1266 057a C7020000 		.4byte	.LASF78
 1267 057e 01       		.byte	0x1
 1268 057f A506     		.2byte	0x6a5
 1269 0581 0A010000 		.4byte	0x10a
 1270 0585 29020000 		.4byte	.LLST14
 1271 0589 17       		.uleb128 0x17
 1272 058a A3010000 		.4byte	.LASF79
 1273 058e 01       		.byte	0x1
 1274 058f A706     		.2byte	0x6a7
 1275 0591 0A010000 		.4byte	0x10a
 1276 0595 4A020000 		.4byte	.LLST15
 1277 0599 00       		.byte	0
 1278 059a 1E       		.uleb128 0x1e
 1279 059b E4040000 		.4byte	.LASF81
 1280 059f 01       		.byte	0x1
 1281 05a0 FF       		.byte	0xff
 1282 05a1 0A010000 		.4byte	0x10a
 1283 05a5 00000000 		.4byte	.LFB129
 1284 05a9 8C000000 		.4byte	.LFE129-.LFB129
 1285 05ad 01       		.uleb128 0x1
 1286 05ae 9C       		.byte	0x9c
 1287 05af 75060000 		.4byte	0x675
 1288 05b3 16       		.uleb128 0x16
 1289 05b4 3D020000 		.4byte	.LASF82
 1290 05b8 01       		.byte	0x1
 1291 05b9 0001     		.2byte	0x100
 1292 05bb 75060000 		.4byte	0x675
 1293 05bf 6C020000 		.4byte	.LLST16
 1294 05c3 16       		.uleb128 0x16
 1295 05c4 8D060000 		.4byte	.LASF63
 1296 05c8 01       		.byte	0x1
 1297 05c9 0101     		.2byte	0x101
 1298 05cb 04030000 		.4byte	0x304
 1299 05cf 8A020000 		.4byte	.LLST17
 1300 05d3 16       		.uleb128 0x16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 55


 1301 05d4 E9000000 		.4byte	.LASF64
 1302 05d8 01       		.byte	0x1
 1303 05d9 0201     		.2byte	0x102
 1304 05db 0A010000 		.4byte	0x10a
 1305 05df A8020000 		.4byte	.LLST18
 1306 05e3 17       		.uleb128 0x17
 1307 05e4 64050000 		.4byte	.LASF83
 1308 05e8 01       		.byte	0x1
 1309 05e9 0401     		.2byte	0x104
 1310 05eb 0A010000 		.4byte	0x10a
 1311 05ef C6020000 		.4byte	.LLST19
 1312 05f3 17       		.uleb128 0x17
 1313 05f4 D5000000 		.4byte	.LASF84
 1314 05f8 01       		.byte	0x1
 1315 05f9 0501     		.2byte	0x105
 1316 05fb 0A010000 		.4byte	0x10a
 1317 05ff F1020000 		.4byte	.LLST20
 1318 0603 17       		.uleb128 0x17
 1319 0604 06040000 		.4byte	.LASF71
 1320 0608 01       		.byte	0x1
 1321 0609 0601     		.2byte	0x106
 1322 060b 0A010000 		.4byte	0x10a
 1323 060f 1A030000 		.4byte	.LLST21
 1324 0613 17       		.uleb128 0x17
 1325 0614 18050000 		.4byte	.LASF85
 1326 0618 01       		.byte	0x1
 1327 0619 0701     		.2byte	0x107
 1328 061b 0A010000 		.4byte	0x10a
 1329 061f 4F030000 		.4byte	.LLST22
 1330 0623 1F       		.uleb128 0x1f
 1331 0624 31000000 		.4byte	.LASF86
 1332 0628 01       		.byte	0x1
 1333 0629 0801     		.2byte	0x108
 1334 062b 0A010000 		.4byte	0x10a
 1335 062f 00       		.byte	0
 1336 0630 17       		.uleb128 0x17
 1337 0631 BD010000 		.4byte	.LASF87
 1338 0635 01       		.byte	0x1
 1339 0636 0B01     		.2byte	0x10b
 1340 0638 0A010000 		.4byte	0x10a
 1341 063c 63030000 		.4byte	.LLST23
 1342 0640 20       		.uleb128 0x20
 1343 0641 4C000000 		.4byte	.LVL45
 1344 0645 61030000 		.4byte	0x361
 1345 0649 60060000 		.4byte	0x660
 1346 064d 19       		.uleb128 0x19
 1347 064e 01       		.uleb128 0x1
 1348 064f 50       		.byte	0x50
 1349 0650 02       		.uleb128 0x2
 1350 0651 75       		.byte	0x75
 1351 0652 00       		.sleb128 0
 1352 0653 19       		.uleb128 0x19
 1353 0654 01       		.uleb128 0x1
 1354 0655 51       		.byte	0x51
 1355 0656 02       		.uleb128 0x2
 1356 0657 76       		.byte	0x76
 1357 0658 00       		.sleb128 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 56


 1358 0659 19       		.uleb128 0x19
 1359 065a 01       		.uleb128 0x1
 1360 065b 52       		.byte	0x52
 1361 065c 02       		.uleb128 0x2
 1362 065d 74       		.byte	0x74
 1363 065e 00       		.sleb128 0
 1364 065f 00       		.byte	0
 1365 0660 18       		.uleb128 0x18
 1366 0661 70000000 		.4byte	.LVL51
 1367 0665 33050000 		.4byte	0x533
 1368 0669 19       		.uleb128 0x19
 1369 066a 01       		.uleb128 0x1
 1370 066b 52       		.byte	0x52
 1371 066c 01       		.uleb128 0x1
 1372 066d 31       		.byte	0x31
 1373 066e 19       		.uleb128 0x19
 1374 066f 01       		.uleb128 0x1
 1375 0670 53       		.byte	0x53
 1376 0671 01       		.uleb128 0x1
 1377 0672 38       		.byte	0x38
 1378 0673 00       		.byte	0
 1379 0674 00       		.byte	0
 1380 0675 0F       		.uleb128 0xf
 1381 0676 04       		.byte	0x4
 1382 0677 FA010000 		.4byte	0x1fa
 1383 067b 1E       		.uleb128 0x1e
 1384 067c 01020000 		.4byte	.LASF88
 1385 0680 01       		.byte	0x1
 1386 0681 C8       		.byte	0xc8
 1387 0682 E6000000 		.4byte	0xe6
 1388 0686 00000000 		.4byte	.LFB128
 1389 068a 24000000 		.4byte	.LFE128-.LFB128
 1390 068e 01       		.uleb128 0x1
 1391 068f 9C       		.byte	0x9c
 1392 0690 2C070000 		.4byte	0x72c
 1393 0694 21       		.uleb128 0x21
 1394 0695 42050000 		.4byte	.LASF69
 1395 0699 01       		.byte	0x1
 1396 069a C8       		.byte	0xc8
 1397 069b 0A010000 		.4byte	0x10a
 1398 069f A2030000 		.4byte	.LLST24
 1399 06a3 21       		.uleb128 0x21
 1400 06a4 3D000000 		.4byte	.LASF70
 1401 06a8 01       		.byte	0x1
 1402 06a9 C8       		.byte	0xc8
 1403 06aa 0A010000 		.4byte	0x10a
 1404 06ae C3030000 		.4byte	.LLST25
 1405 06b2 22       		.uleb128 0x22
 1406 06b3 31000000 		.4byte	.LASF86
 1407 06b7 01       		.byte	0x1
 1408 06b8 CA       		.byte	0xca
 1409 06b9 0A010000 		.4byte	0x10a
 1410 06bd E4030000 		.4byte	.LLST26
 1411 06c1 22       		.uleb128 0x22
 1412 06c2 8D060000 		.4byte	.LASF63
 1413 06c6 01       		.byte	0x1
 1414 06c7 CC       		.byte	0xcc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 57


 1415 06c8 04030000 		.4byte	0x304
 1416 06cc 03040000 		.4byte	.LLST27
 1417 06d0 23       		.uleb128 0x23
 1418 06d1 9B030000 		.4byte	.LASF74
 1419 06d5 01       		.byte	0x1
 1420 06d6 CD       		.byte	0xcd
 1421 06d7 88040000 		.4byte	0x488
 1422 06db 22       		.uleb128 0x22
 1423 06dc 3D020000 		.4byte	.LASF82
 1424 06e0 01       		.byte	0x1
 1425 06e1 CE       		.byte	0xce
 1426 06e2 75060000 		.4byte	0x675
 1427 06e6 4D040000 		.4byte	.LLST28
 1428 06ea 18       		.uleb128 0x18
 1429 06eb 1E000000 		.4byte	.LVL63
 1430 06ef 9A050000 		.4byte	0x59a
 1431 06f3 19       		.uleb128 0x19
 1432 06f4 01       		.uleb128 0x1
 1433 06f5 50       		.byte	0x50
 1434 06f6 11       		.uleb128 0x11
 1435 06f7 F3       		.byte	0xf3
 1436 06f8 01       		.uleb128 0x1
 1437 06f9 50       		.byte	0x50
 1438 06fa 33       		.byte	0x33
 1439 06fb 24       		.byte	0x24
 1440 06fc F3       		.byte	0xf3
 1441 06fd 01       		.uleb128 0x1
 1442 06fe 50       		.byte	0x50
 1443 06ff 1C       		.byte	0x1c
 1444 0700 32       		.byte	0x32
 1445 0701 24       		.byte	0x24
 1446 0702 76       		.byte	0x76
 1447 0703 00       		.sleb128 0
 1448 0704 22       		.byte	0x22
 1449 0705 23       		.byte	0x23
 1450 0706 04       		.uleb128 0x4
 1451 0707 06       		.byte	0x6
 1452 0708 19       		.uleb128 0x19
 1453 0709 01       		.uleb128 0x1
 1454 070a 51       		.byte	0x51
 1455 070b 05       		.uleb128 0x5
 1456 070c 74       		.byte	0x74
 1457 070d 00       		.sleb128 0
 1458 070e 75       		.byte	0x75
 1459 070f 00       		.sleb128 0
 1460 0710 22       		.byte	0x22
 1461 0711 19       		.uleb128 0x19
 1462 0712 01       		.uleb128 0x1
 1463 0713 52       		.byte	0x52
 1464 0714 15       		.uleb128 0x15
 1465 0715 F3       		.byte	0xf3
 1466 0716 01       		.uleb128 0x1
 1467 0717 50       		.byte	0x50
 1468 0718 33       		.byte	0x33
 1469 0719 24       		.byte	0x24
 1470 071a F3       		.byte	0xf3
 1471 071b 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 58


 1472 071c 50       		.byte	0x50
 1473 071d 1C       		.byte	0x1c
 1474 071e 32       		.byte	0x32
 1475 071f 24       		.byte	0x24
 1476 0720 76       		.byte	0x76
 1477 0721 00       		.sleb128 0
 1478 0722 22       		.byte	0x22
 1479 0723 23       		.byte	0x23
 1480 0724 1A       		.uleb128 0x1a
 1481 0725 94       		.byte	0x94
 1482 0726 01       		.byte	0x1
 1483 0727 08       		.byte	0x8
 1484 0728 FF       		.byte	0xff
 1485 0729 1A       		.byte	0x1a
 1486 072a 00       		.byte	0
 1487 072b 00       		.byte	0
 1488 072c 1E       		.uleb128 0x1e
 1489 072d 2A040000 		.4byte	.LASF89
 1490 0731 01       		.byte	0x1
 1491 0732 8F       		.byte	0x8f
 1492 0733 E6000000 		.4byte	0xe6
 1493 0737 00000000 		.4byte	.LFB127
 1494 073b 30000000 		.4byte	.LFE127-.LFB127
 1495 073f 01       		.uleb128 0x1
 1496 0740 9C       		.byte	0x9c
 1497 0741 A3070000 		.4byte	0x7a3
 1498 0745 21       		.uleb128 0x21
 1499 0746 42050000 		.4byte	.LASF69
 1500 074a 01       		.byte	0x1
 1501 074b 8F       		.byte	0x8f
 1502 074c 0A010000 		.4byte	0x10a
 1503 0750 7B040000 		.4byte	.LLST29
 1504 0754 22       		.uleb128 0x22
 1505 0755 3D000000 		.4byte	.LASF70
 1506 0759 01       		.byte	0x1
 1507 075a 91       		.byte	0x91
 1508 075b 0A010000 		.4byte	0x10a
 1509 075f A7040000 		.4byte	.LLST30
 1510 0763 22       		.uleb128 0x22
 1511 0764 FE040000 		.4byte	.LASF73
 1512 0768 01       		.byte	0x1
 1513 0769 92       		.byte	0x92
 1514 076a 0A010000 		.4byte	0x10a
 1515 076e E8040000 		.4byte	.LLST31
 1516 0772 23       		.uleb128 0x23
 1517 0773 9B030000 		.4byte	.LASF74
 1518 0777 01       		.byte	0x1
 1519 0778 94       		.byte	0x94
 1520 0779 88040000 		.4byte	0x488
 1521 077d 22       		.uleb128 0x22
 1522 077e 46000000 		.4byte	.LASF90
 1523 0782 01       		.byte	0x1
 1524 0783 95       		.byte	0x95
 1525 0784 E6000000 		.4byte	0xe6
 1526 0788 FB040000 		.4byte	.LLST32
 1527 078c 18       		.uleb128 0x18
 1528 078d 1C000000 		.4byte	.LVL69
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 59


 1529 0791 7B060000 		.4byte	0x67b
 1530 0795 19       		.uleb128 0x19
 1531 0796 01       		.uleb128 0x1
 1532 0797 50       		.byte	0x50
 1533 0798 02       		.uleb128 0x2
 1534 0799 76       		.byte	0x76
 1535 079a 00       		.sleb128 0
 1536 079b 19       		.uleb128 0x19
 1537 079c 01       		.uleb128 0x1
 1538 079d 51       		.byte	0x51
 1539 079e 02       		.uleb128 0x2
 1540 079f 74       		.byte	0x74
 1541 07a0 00       		.sleb128 0
 1542 07a1 00       		.byte	0
 1543 07a2 00       		.byte	0
 1544 07a3 1E       		.uleb128 0x1e
 1545 07a4 77040000 		.4byte	.LASF91
 1546 07a8 01       		.byte	0x1
 1547 07a9 62       		.byte	0x62
 1548 07aa E6000000 		.4byte	0xe6
 1549 07ae 00000000 		.4byte	.LFB126
 1550 07b2 1C000000 		.4byte	.LFE126-.LFB126
 1551 07b6 01       		.uleb128 0x1
 1552 07b7 9C       		.byte	0x9c
 1553 07b8 EB070000 		.4byte	0x7eb
 1554 07bc 22       		.uleb128 0x22
 1555 07bd 42050000 		.4byte	.LASF69
 1556 07c1 01       		.byte	0x1
 1557 07c2 64       		.byte	0x64
 1558 07c3 0A010000 		.4byte	0x10a
 1559 07c7 25050000 		.4byte	.LLST33
 1560 07cb 22       		.uleb128 0x22
 1561 07cc 46000000 		.4byte	.LASF90
 1562 07d0 01       		.byte	0x1
 1563 07d1 65       		.byte	0x65
 1564 07d2 E6000000 		.4byte	0xe6
 1565 07d6 5A050000 		.4byte	.LLST34
 1566 07da 18       		.uleb128 0x18
 1567 07db 0E000000 		.4byte	.LVL76
 1568 07df 2C070000 		.4byte	0x72c
 1569 07e3 19       		.uleb128 0x19
 1570 07e4 01       		.uleb128 0x1
 1571 07e5 50       		.byte	0x50
 1572 07e6 02       		.uleb128 0x2
 1573 07e7 74       		.byte	0x74
 1574 07e8 00       		.sleb128 0
 1575 07e9 00       		.byte	0
 1576 07ea 00       		.byte	0
 1577 07eb 24       		.uleb128 0x24
 1578 07ec 73060000 		.4byte	.LASF92
 1579 07f0 07       		.byte	0x7
 1580 07f1 EA07     		.2byte	0x7ea
 1581 07f3 F7070000 		.4byte	0x7f7
 1582 07f7 25       		.uleb128 0x25
 1583 07f8 B4000000 		.4byte	0xb4
 1584 07fc 24       		.uleb128 0x24
 1585 07fd FC050000 		.4byte	.LASF93
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 60


 1586 0801 06       		.byte	0x6
 1587 0802 2704     		.2byte	0x427
 1588 0804 08080000 		.4byte	0x808
 1589 0808 1B       		.uleb128 0x1b
 1590 0809 44030000 		.4byte	0x344
 1591 080d 00       		.byte	0
 1592              		.section	.debug_abbrev,"",%progbits
 1593              	.Ldebug_abbrev0:
 1594 0000 01       		.uleb128 0x1
 1595 0001 11       		.uleb128 0x11
 1596 0002 01       		.byte	0x1
 1597 0003 25       		.uleb128 0x25
 1598 0004 0E       		.uleb128 0xe
 1599 0005 13       		.uleb128 0x13
 1600 0006 0B       		.uleb128 0xb
 1601 0007 03       		.uleb128 0x3
 1602 0008 0E       		.uleb128 0xe
 1603 0009 1B       		.uleb128 0x1b
 1604 000a 0E       		.uleb128 0xe
 1605 000b 55       		.uleb128 0x55
 1606 000c 17       		.uleb128 0x17
 1607 000d 11       		.uleb128 0x11
 1608 000e 01       		.uleb128 0x1
 1609 000f 10       		.uleb128 0x10
 1610 0010 17       		.uleb128 0x17
 1611 0011 00       		.byte	0
 1612 0012 00       		.byte	0
 1613 0013 02       		.uleb128 0x2
 1614 0014 24       		.uleb128 0x24
 1615 0015 00       		.byte	0
 1616 0016 0B       		.uleb128 0xb
 1617 0017 0B       		.uleb128 0xb
 1618 0018 3E       		.uleb128 0x3e
 1619 0019 0B       		.uleb128 0xb
 1620 001a 03       		.uleb128 0x3
 1621 001b 08       		.uleb128 0x8
 1622 001c 00       		.byte	0
 1623 001d 00       		.byte	0
 1624 001e 03       		.uleb128 0x3
 1625 001f 24       		.uleb128 0x24
 1626 0020 00       		.byte	0
 1627 0021 0B       		.uleb128 0xb
 1628 0022 0B       		.uleb128 0xb
 1629 0023 3E       		.uleb128 0x3e
 1630 0024 0B       		.uleb128 0xb
 1631 0025 03       		.uleb128 0x3
 1632 0026 0E       		.uleb128 0xe
 1633 0027 00       		.byte	0
 1634 0028 00       		.byte	0
 1635 0029 04       		.uleb128 0x4
 1636 002a 16       		.uleb128 0x16
 1637 002b 00       		.byte	0
 1638 002c 03       		.uleb128 0x3
 1639 002d 0E       		.uleb128 0xe
 1640 002e 3A       		.uleb128 0x3a
 1641 002f 0B       		.uleb128 0xb
 1642 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 61


 1643 0031 0B       		.uleb128 0xb
 1644 0032 49       		.uleb128 0x49
 1645 0033 13       		.uleb128 0x13
 1646 0034 00       		.byte	0
 1647 0035 00       		.byte	0
 1648 0036 05       		.uleb128 0x5
 1649 0037 16       		.uleb128 0x16
 1650 0038 00       		.byte	0
 1651 0039 03       		.uleb128 0x3
 1652 003a 0E       		.uleb128 0xe
 1653 003b 3A       		.uleb128 0x3a
 1654 003c 0B       		.uleb128 0xb
 1655 003d 3B       		.uleb128 0x3b
 1656 003e 05       		.uleb128 0x5
 1657 003f 49       		.uleb128 0x49
 1658 0040 13       		.uleb128 0x13
 1659 0041 00       		.byte	0
 1660 0042 00       		.byte	0
 1661 0043 06       		.uleb128 0x6
 1662 0044 04       		.uleb128 0x4
 1663 0045 01       		.byte	0x1
 1664 0046 0B       		.uleb128 0xb
 1665 0047 0B       		.uleb128 0xb
 1666 0048 49       		.uleb128 0x49
 1667 0049 13       		.uleb128 0x13
 1668 004a 3A       		.uleb128 0x3a
 1669 004b 0B       		.uleb128 0xb
 1670 004c 3B       		.uleb128 0x3b
 1671 004d 0B       		.uleb128 0xb
 1672 004e 01       		.uleb128 0x1
 1673 004f 13       		.uleb128 0x13
 1674 0050 00       		.byte	0
 1675 0051 00       		.byte	0
 1676 0052 07       		.uleb128 0x7
 1677 0053 28       		.uleb128 0x28
 1678 0054 00       		.byte	0
 1679 0055 03       		.uleb128 0x3
 1680 0056 0E       		.uleb128 0xe
 1681 0057 1C       		.uleb128 0x1c
 1682 0058 0B       		.uleb128 0xb
 1683 0059 00       		.byte	0
 1684 005a 00       		.byte	0
 1685 005b 08       		.uleb128 0x8
 1686 005c 13       		.uleb128 0x13
 1687 005d 01       		.byte	0x1
 1688 005e 0B       		.uleb128 0xb
 1689 005f 0B       		.uleb128 0xb
 1690 0060 3A       		.uleb128 0x3a
 1691 0061 0B       		.uleb128 0xb
 1692 0062 3B       		.uleb128 0x3b
 1693 0063 0B       		.uleb128 0xb
 1694 0064 01       		.uleb128 0x1
 1695 0065 13       		.uleb128 0x13
 1696 0066 00       		.byte	0
 1697 0067 00       		.byte	0
 1698 0068 09       		.uleb128 0x9
 1699 0069 0D       		.uleb128 0xd
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 62


 1700 006a 00       		.byte	0
 1701 006b 03       		.uleb128 0x3
 1702 006c 0E       		.uleb128 0xe
 1703 006d 3A       		.uleb128 0x3a
 1704 006e 0B       		.uleb128 0xb
 1705 006f 3B       		.uleb128 0x3b
 1706 0070 0B       		.uleb128 0xb
 1707 0071 49       		.uleb128 0x49
 1708 0072 13       		.uleb128 0x13
 1709 0073 38       		.uleb128 0x38
 1710 0074 0B       		.uleb128 0xb
 1711 0075 00       		.byte	0
 1712 0076 00       		.byte	0
 1713 0077 0A       		.uleb128 0xa
 1714 0078 01       		.uleb128 0x1
 1715 0079 01       		.byte	0x1
 1716 007a 49       		.uleb128 0x49
 1717 007b 13       		.uleb128 0x13
 1718 007c 01       		.uleb128 0x1
 1719 007d 13       		.uleb128 0x13
 1720 007e 00       		.byte	0
 1721 007f 00       		.byte	0
 1722 0080 0B       		.uleb128 0xb
 1723 0081 21       		.uleb128 0x21
 1724 0082 00       		.byte	0
 1725 0083 49       		.uleb128 0x49
 1726 0084 13       		.uleb128 0x13
 1727 0085 2F       		.uleb128 0x2f
 1728 0086 0B       		.uleb128 0xb
 1729 0087 00       		.byte	0
 1730 0088 00       		.byte	0
 1731 0089 0C       		.uleb128 0xc
 1732 008a 13       		.uleb128 0x13
 1733 008b 01       		.byte	0x1
 1734 008c 0B       		.uleb128 0xb
 1735 008d 0B       		.uleb128 0xb
 1736 008e 3A       		.uleb128 0x3a
 1737 008f 0B       		.uleb128 0xb
 1738 0090 3B       		.uleb128 0x3b
 1739 0091 05       		.uleb128 0x5
 1740 0092 01       		.uleb128 0x1
 1741 0093 13       		.uleb128 0x13
 1742 0094 00       		.byte	0
 1743 0095 00       		.byte	0
 1744 0096 0D       		.uleb128 0xd
 1745 0097 0D       		.uleb128 0xd
 1746 0098 00       		.byte	0
 1747 0099 03       		.uleb128 0x3
 1748 009a 08       		.uleb128 0x8
 1749 009b 3A       		.uleb128 0x3a
 1750 009c 0B       		.uleb128 0xb
 1751 009d 3B       		.uleb128 0x3b
 1752 009e 05       		.uleb128 0x5
 1753 009f 49       		.uleb128 0x49
 1754 00a0 13       		.uleb128 0x13
 1755 00a1 38       		.uleb128 0x38
 1756 00a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 63


 1757 00a3 00       		.byte	0
 1758 00a4 00       		.byte	0
 1759 00a5 0E       		.uleb128 0xe
 1760 00a6 0D       		.uleb128 0xd
 1761 00a7 00       		.byte	0
 1762 00a8 03       		.uleb128 0x3
 1763 00a9 0E       		.uleb128 0xe
 1764 00aa 3A       		.uleb128 0x3a
 1765 00ab 0B       		.uleb128 0xb
 1766 00ac 3B       		.uleb128 0x3b
 1767 00ad 05       		.uleb128 0x5
 1768 00ae 49       		.uleb128 0x49
 1769 00af 13       		.uleb128 0x13
 1770 00b0 38       		.uleb128 0x38
 1771 00b1 0B       		.uleb128 0xb
 1772 00b2 00       		.byte	0
 1773 00b3 00       		.byte	0
 1774 00b4 0F       		.uleb128 0xf
 1775 00b5 0F       		.uleb128 0xf
 1776 00b6 00       		.byte	0
 1777 00b7 0B       		.uleb128 0xb
 1778 00b8 0B       		.uleb128 0xb
 1779 00b9 49       		.uleb128 0x49
 1780 00ba 13       		.uleb128 0x13
 1781 00bb 00       		.byte	0
 1782 00bc 00       		.byte	0
 1783 00bd 10       		.uleb128 0x10
 1784 00be 26       		.uleb128 0x26
 1785 00bf 00       		.byte	0
 1786 00c0 00       		.byte	0
 1787 00c1 00       		.byte	0
 1788 00c2 11       		.uleb128 0x11
 1789 00c3 0F       		.uleb128 0xf
 1790 00c4 00       		.byte	0
 1791 00c5 0B       		.uleb128 0xb
 1792 00c6 0B       		.uleb128 0xb
 1793 00c7 00       		.byte	0
 1794 00c8 00       		.byte	0
 1795 00c9 12       		.uleb128 0x12
 1796 00ca 13       		.uleb128 0x13
 1797 00cb 01       		.byte	0x1
 1798 00cc 0B       		.uleb128 0xb
 1799 00cd 05       		.uleb128 0x5
 1800 00ce 3A       		.uleb128 0x3a
 1801 00cf 0B       		.uleb128 0xb
 1802 00d0 3B       		.uleb128 0x3b
 1803 00d1 05       		.uleb128 0x5
 1804 00d2 01       		.uleb128 0x1
 1805 00d3 13       		.uleb128 0x13
 1806 00d4 00       		.byte	0
 1807 00d5 00       		.byte	0
 1808 00d6 13       		.uleb128 0x13
 1809 00d7 2E       		.uleb128 0x2e
 1810 00d8 00       		.byte	0
 1811 00d9 3F       		.uleb128 0x3f
 1812 00da 19       		.uleb128 0x19
 1813 00db 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 64


 1814 00dc 0E       		.uleb128 0xe
 1815 00dd 3A       		.uleb128 0x3a
 1816 00de 0B       		.uleb128 0xb
 1817 00df 3B       		.uleb128 0x3b
 1818 00e0 0B       		.uleb128 0xb
 1819 00e1 27       		.uleb128 0x27
 1820 00e2 19       		.uleb128 0x19
 1821 00e3 11       		.uleb128 0x11
 1822 00e4 01       		.uleb128 0x1
 1823 00e5 12       		.uleb128 0x12
 1824 00e6 06       		.uleb128 0x6
 1825 00e7 40       		.uleb128 0x40
 1826 00e8 18       		.uleb128 0x18
 1827 00e9 9742     		.uleb128 0x2117
 1828 00eb 19       		.uleb128 0x19
 1829 00ec 00       		.byte	0
 1830 00ed 00       		.byte	0
 1831 00ee 14       		.uleb128 0x14
 1832 00ef 2E       		.uleb128 0x2e
 1833 00f0 01       		.byte	0x1
 1834 00f1 3F       		.uleb128 0x3f
 1835 00f2 19       		.uleb128 0x19
 1836 00f3 03       		.uleb128 0x3
 1837 00f4 0E       		.uleb128 0xe
 1838 00f5 3A       		.uleb128 0x3a
 1839 00f6 0B       		.uleb128 0xb
 1840 00f7 3B       		.uleb128 0x3b
 1841 00f8 05       		.uleb128 0x5
 1842 00f9 27       		.uleb128 0x27
 1843 00fa 19       		.uleb128 0x19
 1844 00fb 11       		.uleb128 0x11
 1845 00fc 01       		.uleb128 0x1
 1846 00fd 12       		.uleb128 0x12
 1847 00fe 06       		.uleb128 0x6
 1848 00ff 40       		.uleb128 0x40
 1849 0100 18       		.uleb128 0x18
 1850 0101 9742     		.uleb128 0x2117
 1851 0103 19       		.uleb128 0x19
 1852 0104 01       		.uleb128 0x1
 1853 0105 13       		.uleb128 0x13
 1854 0106 00       		.byte	0
 1855 0107 00       		.byte	0
 1856 0108 15       		.uleb128 0x15
 1857 0109 05       		.uleb128 0x5
 1858 010a 00       		.byte	0
 1859 010b 03       		.uleb128 0x3
 1860 010c 0E       		.uleb128 0xe
 1861 010d 3A       		.uleb128 0x3a
 1862 010e 0B       		.uleb128 0xb
 1863 010f 3B       		.uleb128 0x3b
 1864 0110 05       		.uleb128 0x5
 1865 0111 49       		.uleb128 0x49
 1866 0112 13       		.uleb128 0x13
 1867 0113 02       		.uleb128 0x2
 1868 0114 18       		.uleb128 0x18
 1869 0115 00       		.byte	0
 1870 0116 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 65


 1871 0117 16       		.uleb128 0x16
 1872 0118 05       		.uleb128 0x5
 1873 0119 00       		.byte	0
 1874 011a 03       		.uleb128 0x3
 1875 011b 0E       		.uleb128 0xe
 1876 011c 3A       		.uleb128 0x3a
 1877 011d 0B       		.uleb128 0xb
 1878 011e 3B       		.uleb128 0x3b
 1879 011f 05       		.uleb128 0x5
 1880 0120 49       		.uleb128 0x49
 1881 0121 13       		.uleb128 0x13
 1882 0122 02       		.uleb128 0x2
 1883 0123 17       		.uleb128 0x17
 1884 0124 00       		.byte	0
 1885 0125 00       		.byte	0
 1886 0126 17       		.uleb128 0x17
 1887 0127 34       		.uleb128 0x34
 1888 0128 00       		.byte	0
 1889 0129 03       		.uleb128 0x3
 1890 012a 0E       		.uleb128 0xe
 1891 012b 3A       		.uleb128 0x3a
 1892 012c 0B       		.uleb128 0xb
 1893 012d 3B       		.uleb128 0x3b
 1894 012e 05       		.uleb128 0x5
 1895 012f 49       		.uleb128 0x49
 1896 0130 13       		.uleb128 0x13
 1897 0131 02       		.uleb128 0x2
 1898 0132 17       		.uleb128 0x17
 1899 0133 00       		.byte	0
 1900 0134 00       		.byte	0
 1901 0135 18       		.uleb128 0x18
 1902 0136 898201   		.uleb128 0x4109
 1903 0139 01       		.byte	0x1
 1904 013a 11       		.uleb128 0x11
 1905 013b 01       		.uleb128 0x1
 1906 013c 31       		.uleb128 0x31
 1907 013d 13       		.uleb128 0x13
 1908 013e 00       		.byte	0
 1909 013f 00       		.byte	0
 1910 0140 19       		.uleb128 0x19
 1911 0141 8A8201   		.uleb128 0x410a
 1912 0144 00       		.byte	0
 1913 0145 02       		.uleb128 0x2
 1914 0146 18       		.uleb128 0x18
 1915 0147 9142     		.uleb128 0x2111
 1916 0149 18       		.uleb128 0x18
 1917 014a 00       		.byte	0
 1918 014b 00       		.byte	0
 1919 014c 1A       		.uleb128 0x1a
 1920 014d 34       		.uleb128 0x34
 1921 014e 00       		.byte	0
 1922 014f 03       		.uleb128 0x3
 1923 0150 0E       		.uleb128 0xe
 1924 0151 3A       		.uleb128 0x3a
 1925 0152 0B       		.uleb128 0xb
 1926 0153 3B       		.uleb128 0x3b
 1927 0154 05       		.uleb128 0x5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 66


 1928 0155 49       		.uleb128 0x49
 1929 0156 13       		.uleb128 0x13
 1930 0157 00       		.byte	0
 1931 0158 00       		.byte	0
 1932 0159 1B       		.uleb128 0x1b
 1933 015a 26       		.uleb128 0x26
 1934 015b 00       		.byte	0
 1935 015c 49       		.uleb128 0x49
 1936 015d 13       		.uleb128 0x13
 1937 015e 00       		.byte	0
 1938 015f 00       		.byte	0
 1939 0160 1C       		.uleb128 0x1c
 1940 0161 2E       		.uleb128 0x2e
 1941 0162 01       		.byte	0x1
 1942 0163 3F       		.uleb128 0x3f
 1943 0164 19       		.uleb128 0x19
 1944 0165 03       		.uleb128 0x3
 1945 0166 0E       		.uleb128 0xe
 1946 0167 3A       		.uleb128 0x3a
 1947 0168 0B       		.uleb128 0xb
 1948 0169 3B       		.uleb128 0x3b
 1949 016a 05       		.uleb128 0x5
 1950 016b 27       		.uleb128 0x27
 1951 016c 19       		.uleb128 0x19
 1952 016d 49       		.uleb128 0x49
 1953 016e 13       		.uleb128 0x13
 1954 016f 11       		.uleb128 0x11
 1955 0170 01       		.uleb128 0x1
 1956 0171 12       		.uleb128 0x12
 1957 0172 06       		.uleb128 0x6
 1958 0173 40       		.uleb128 0x40
 1959 0174 18       		.uleb128 0x18
 1960 0175 9742     		.uleb128 0x2117
 1961 0177 19       		.uleb128 0x19
 1962 0178 01       		.uleb128 0x1
 1963 0179 13       		.uleb128 0x13
 1964 017a 00       		.byte	0
 1965 017b 00       		.byte	0
 1966 017c 1D       		.uleb128 0x1d
 1967 017d 05       		.uleb128 0x5
 1968 017e 00       		.byte	0
 1969 017f 03       		.uleb128 0x3
 1970 0180 08       		.uleb128 0x8
 1971 0181 3A       		.uleb128 0x3a
 1972 0182 0B       		.uleb128 0xb
 1973 0183 3B       		.uleb128 0x3b
 1974 0184 05       		.uleb128 0x5
 1975 0185 49       		.uleb128 0x49
 1976 0186 13       		.uleb128 0x13
 1977 0187 02       		.uleb128 0x2
 1978 0188 18       		.uleb128 0x18
 1979 0189 00       		.byte	0
 1980 018a 00       		.byte	0
 1981 018b 1E       		.uleb128 0x1e
 1982 018c 2E       		.uleb128 0x2e
 1983 018d 01       		.byte	0x1
 1984 018e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 67


 1985 018f 19       		.uleb128 0x19
 1986 0190 03       		.uleb128 0x3
 1987 0191 0E       		.uleb128 0xe
 1988 0192 3A       		.uleb128 0x3a
 1989 0193 0B       		.uleb128 0xb
 1990 0194 3B       		.uleb128 0x3b
 1991 0195 0B       		.uleb128 0xb
 1992 0196 27       		.uleb128 0x27
 1993 0197 19       		.uleb128 0x19
 1994 0198 49       		.uleb128 0x49
 1995 0199 13       		.uleb128 0x13
 1996 019a 11       		.uleb128 0x11
 1997 019b 01       		.uleb128 0x1
 1998 019c 12       		.uleb128 0x12
 1999 019d 06       		.uleb128 0x6
 2000 019e 40       		.uleb128 0x40
 2001 019f 18       		.uleb128 0x18
 2002 01a0 9742     		.uleb128 0x2117
 2003 01a2 19       		.uleb128 0x19
 2004 01a3 01       		.uleb128 0x1
 2005 01a4 13       		.uleb128 0x13
 2006 01a5 00       		.byte	0
 2007 01a6 00       		.byte	0
 2008 01a7 1F       		.uleb128 0x1f
 2009 01a8 34       		.uleb128 0x34
 2010 01a9 00       		.byte	0
 2011 01aa 03       		.uleb128 0x3
 2012 01ab 0E       		.uleb128 0xe
 2013 01ac 3A       		.uleb128 0x3a
 2014 01ad 0B       		.uleb128 0xb
 2015 01ae 3B       		.uleb128 0x3b
 2016 01af 05       		.uleb128 0x5
 2017 01b0 49       		.uleb128 0x49
 2018 01b1 13       		.uleb128 0x13
 2019 01b2 1C       		.uleb128 0x1c
 2020 01b3 0B       		.uleb128 0xb
 2021 01b4 00       		.byte	0
 2022 01b5 00       		.byte	0
 2023 01b6 20       		.uleb128 0x20
 2024 01b7 898201   		.uleb128 0x4109
 2025 01ba 01       		.byte	0x1
 2026 01bb 11       		.uleb128 0x11
 2027 01bc 01       		.uleb128 0x1
 2028 01bd 31       		.uleb128 0x31
 2029 01be 13       		.uleb128 0x13
 2030 01bf 01       		.uleb128 0x1
 2031 01c0 13       		.uleb128 0x13
 2032 01c1 00       		.byte	0
 2033 01c2 00       		.byte	0
 2034 01c3 21       		.uleb128 0x21
 2035 01c4 05       		.uleb128 0x5
 2036 01c5 00       		.byte	0
 2037 01c6 03       		.uleb128 0x3
 2038 01c7 0E       		.uleb128 0xe
 2039 01c8 3A       		.uleb128 0x3a
 2040 01c9 0B       		.uleb128 0xb
 2041 01ca 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 68


 2042 01cb 0B       		.uleb128 0xb
 2043 01cc 49       		.uleb128 0x49
 2044 01cd 13       		.uleb128 0x13
 2045 01ce 02       		.uleb128 0x2
 2046 01cf 17       		.uleb128 0x17
 2047 01d0 00       		.byte	0
 2048 01d1 00       		.byte	0
 2049 01d2 22       		.uleb128 0x22
 2050 01d3 34       		.uleb128 0x34
 2051 01d4 00       		.byte	0
 2052 01d5 03       		.uleb128 0x3
 2053 01d6 0E       		.uleb128 0xe
 2054 01d7 3A       		.uleb128 0x3a
 2055 01d8 0B       		.uleb128 0xb
 2056 01d9 3B       		.uleb128 0x3b
 2057 01da 0B       		.uleb128 0xb
 2058 01db 49       		.uleb128 0x49
 2059 01dc 13       		.uleb128 0x13
 2060 01dd 02       		.uleb128 0x2
 2061 01de 17       		.uleb128 0x17
 2062 01df 00       		.byte	0
 2063 01e0 00       		.byte	0
 2064 01e1 23       		.uleb128 0x23
 2065 01e2 34       		.uleb128 0x34
 2066 01e3 00       		.byte	0
 2067 01e4 03       		.uleb128 0x3
 2068 01e5 0E       		.uleb128 0xe
 2069 01e6 3A       		.uleb128 0x3a
 2070 01e7 0B       		.uleb128 0xb
 2071 01e8 3B       		.uleb128 0x3b
 2072 01e9 0B       		.uleb128 0xb
 2073 01ea 49       		.uleb128 0x49
 2074 01eb 13       		.uleb128 0x13
 2075 01ec 00       		.byte	0
 2076 01ed 00       		.byte	0
 2077 01ee 24       		.uleb128 0x24
 2078 01ef 34       		.uleb128 0x34
 2079 01f0 00       		.byte	0
 2080 01f1 03       		.uleb128 0x3
 2081 01f2 0E       		.uleb128 0xe
 2082 01f3 3A       		.uleb128 0x3a
 2083 01f4 0B       		.uleb128 0xb
 2084 01f5 3B       		.uleb128 0x3b
 2085 01f6 05       		.uleb128 0x5
 2086 01f7 49       		.uleb128 0x49
 2087 01f8 13       		.uleb128 0x13
 2088 01f9 3F       		.uleb128 0x3f
 2089 01fa 19       		.uleb128 0x19
 2090 01fb 3C       		.uleb128 0x3c
 2091 01fc 19       		.uleb128 0x19
 2092 01fd 00       		.byte	0
 2093 01fe 00       		.byte	0
 2094 01ff 25       		.uleb128 0x25
 2095 0200 35       		.uleb128 0x35
 2096 0201 00       		.byte	0
 2097 0202 49       		.uleb128 0x49
 2098 0203 13       		.uleb128 0x13
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 69


 2099 0204 00       		.byte	0
 2100 0205 00       		.byte	0
 2101 0206 00       		.byte	0
 2102              		.section	.debug_loc,"",%progbits
 2103              	.Ldebug_loc0:
 2104              	.LLST0:
 2105 0000 00000000 		.4byte	.LVL0
 2106 0004 02000000 		.4byte	.LVL1
 2107 0008 0100     		.2byte	0x1
 2108 000a 51       		.byte	0x51
 2109 000b 02000000 		.4byte	.LVL1
 2110 000f 1E000000 		.4byte	.LFE134
 2111 0013 0400     		.2byte	0x4
 2112 0015 F3       		.byte	0xf3
 2113 0016 01       		.uleb128 0x1
 2114 0017 51       		.byte	0x51
 2115 0018 9F       		.byte	0x9f
 2116 0019 00000000 		.4byte	0
 2117 001d 00000000 		.4byte	0
 2118              	.LLST1:
 2119 0021 00000000 		.4byte	.LVL0
 2120 0025 18000000 		.4byte	.LVL2
 2121 0029 0100     		.2byte	0x1
 2122 002b 52       		.byte	0x52
 2123 002c 18000000 		.4byte	.LVL2
 2124 0030 1E000000 		.4byte	.LFE134
 2125 0034 0400     		.2byte	0x4
 2126 0036 F3       		.byte	0xf3
 2127 0037 01       		.uleb128 0x1
 2128 0038 52       		.byte	0x52
 2129 0039 9F       		.byte	0x9f
 2130 003a 00000000 		.4byte	0
 2131 003e 00000000 		.4byte	0
 2132              	.LLST2:
 2133 0042 00000000 		.4byte	.LVL3
 2134 0046 0A000000 		.4byte	.LVL5
 2135 004a 0100     		.2byte	0x1
 2136 004c 50       		.byte	0x50
 2137 004d 0A000000 		.4byte	.LVL5
 2138 0051 1E000000 		.4byte	.LFE133
 2139 0055 0100     		.2byte	0x1
 2140 0057 56       		.byte	0x56
 2141 0058 00000000 		.4byte	0
 2142 005c 00000000 		.4byte	0
 2143              	.LLST3:
 2144 0060 00000000 		.4byte	.LVL3
 2145 0064 0A000000 		.4byte	.LVL5
 2146 0068 0100     		.2byte	0x1
 2147 006a 51       		.byte	0x51
 2148 006b 0A000000 		.4byte	.LVL5
 2149 006f 1E000000 		.4byte	.LFE133
 2150 0073 0100     		.2byte	0x1
 2151 0075 55       		.byte	0x55
 2152 0076 00000000 		.4byte	0
 2153 007a 00000000 		.4byte	0
 2154              	.LLST4:
 2155 007e 06000000 		.4byte	.LVL4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 70


 2156 0082 0A000000 		.4byte	.LVL5
 2157 0086 0200     		.2byte	0x2
 2158 0088 31       		.byte	0x31
 2159 0089 9F       		.byte	0x9f
 2160 008a 0A000000 		.4byte	.LVL5
 2161 008e 16000000 		.4byte	.LVL7
 2162 0092 0100     		.2byte	0x1
 2163 0094 54       		.byte	0x54
 2164 0095 16000000 		.4byte	.LVL7
 2165 0099 18000000 		.4byte	.LVL8
 2166 009d 0100     		.2byte	0x1
 2167 009f 53       		.byte	0x53
 2168 00a0 18000000 		.4byte	.LVL8
 2169 00a4 1E000000 		.4byte	.LFE133
 2170 00a8 0100     		.2byte	0x1
 2171 00aa 54       		.byte	0x54
 2172 00ab 00000000 		.4byte	0
 2173 00af 00000000 		.4byte	0
 2174              	.LLST5:
 2175 00b3 00000000 		.4byte	.LVL9
 2176 00b7 1C000000 		.4byte	.LVL14
 2177 00bb 0100     		.2byte	0x1
 2178 00bd 50       		.byte	0x50
 2179 00be 1C000000 		.4byte	.LVL14
 2180 00c2 28000000 		.4byte	.LFE132
 2181 00c6 0400     		.2byte	0x4
 2182 00c8 F3       		.byte	0xf3
 2183 00c9 01       		.uleb128 0x1
 2184 00ca 50       		.byte	0x50
 2185 00cb 9F       		.byte	0x9f
 2186 00cc 00000000 		.4byte	0
 2187 00d0 00000000 		.4byte	0
 2188              	.LLST6:
 2189 00d4 00000000 		.4byte	.LVL9
 2190 00d8 14000000 		.4byte	.LVL12
 2191 00dc 0100     		.2byte	0x1
 2192 00de 51       		.byte	0x51
 2193 00df 14000000 		.4byte	.LVL12
 2194 00e3 28000000 		.4byte	.LFE132
 2195 00e7 0400     		.2byte	0x4
 2196 00e9 F3       		.byte	0xf3
 2197 00ea 01       		.uleb128 0x1
 2198 00eb 51       		.byte	0x51
 2199 00ec 9F       		.byte	0x9f
 2200 00ed 00000000 		.4byte	0
 2201 00f1 00000000 		.4byte	0
 2202              	.LLST7:
 2203 00f5 02000000 		.4byte	.LVL10
 2204 00f9 10000000 		.4byte	.LVL11
 2205 00fd 0200     		.2byte	0x2
 2206 00ff 30       		.byte	0x30
 2207 0100 9F       		.byte	0x9f
 2208 0101 10000000 		.4byte	.LVL11
 2209 0105 16000000 		.4byte	.LVL13
 2210 0109 0100     		.2byte	0x1
 2211 010b 56       		.byte	0x56
 2212 010c 16000000 		.4byte	.LVL13
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 71


 2213 0110 1C000000 		.4byte	.LVL14
 2214 0114 0600     		.2byte	0x6
 2215 0116 76       		.byte	0x76
 2216 0117 00       		.sleb128 0
 2217 0118 74       		.byte	0x74
 2218 0119 00       		.sleb128 0
 2219 011a 22       		.byte	0x22
 2220 011b 9F       		.byte	0x9f
 2221 011c 1C000000 		.4byte	.LVL14
 2222 0120 1F000000 		.4byte	.LVL15-1
 2223 0124 0100     		.2byte	0x1
 2224 0126 50       		.byte	0x50
 2225 0127 1F000000 		.4byte	.LVL15-1
 2226 012b 22000000 		.4byte	.LVL16
 2227 012f 0600     		.2byte	0x6
 2228 0131 76       		.byte	0x76
 2229 0132 00       		.sleb128 0
 2230 0133 74       		.byte	0x74
 2231 0134 00       		.sleb128 0
 2232 0135 22       		.byte	0x22
 2233 0136 9F       		.byte	0x9f
 2234 0137 00000000 		.4byte	0
 2235 013b 00000000 		.4byte	0
 2236              	.LLST8:
 2237 013f 00000000 		.4byte	.LVL17
 2238 0143 12000000 		.4byte	.LVL20
 2239 0147 0100     		.2byte	0x1
 2240 0149 50       		.byte	0x50
 2241 014a 12000000 		.4byte	.LVL20
 2242 014e 24000000 		.4byte	.LVL24
 2243 0152 0100     		.2byte	0x1
 2244 0154 55       		.byte	0x55
 2245 0155 24000000 		.4byte	.LVL24
 2246 0159 28000000 		.4byte	.LFE131
 2247 015d 0400     		.2byte	0x4
 2248 015f F3       		.byte	0xf3
 2249 0160 01       		.uleb128 0x1
 2250 0161 50       		.byte	0x50
 2251 0162 9F       		.byte	0x9f
 2252 0163 00000000 		.4byte	0
 2253 0167 00000000 		.4byte	0
 2254              	.LLST9:
 2255 016b 10000000 		.4byte	.LVL19
 2256 016f 12000000 		.4byte	.LVL20
 2257 0173 0100     		.2byte	0x1
 2258 0175 53       		.byte	0x53
 2259 0176 12000000 		.4byte	.LVL20
 2260 017a 1C000000 		.4byte	.LVL22
 2261 017e 0100     		.2byte	0x1
 2262 0180 54       		.byte	0x54
 2263 0181 1C000000 		.4byte	.LVL22
 2264 0185 1E000000 		.4byte	.LVL23
 2265 0189 0100     		.2byte	0x1
 2266 018b 53       		.byte	0x53
 2267 018c 1E000000 		.4byte	.LVL23
 2268 0190 24000000 		.4byte	.LVL24
 2269 0194 0100     		.2byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 72


 2270 0196 54       		.byte	0x54
 2271 0197 00000000 		.4byte	0
 2272 019b 00000000 		.4byte	0
 2273              	.LLST10:
 2274 019f 10000000 		.4byte	.LVL19
 2275 01a3 12000000 		.4byte	.LVL20
 2276 01a7 0100     		.2byte	0x1
 2277 01a9 53       		.byte	0x53
 2278 01aa 00000000 		.4byte	0
 2279 01ae 00000000 		.4byte	0
 2280              	.LLST11:
 2281 01b2 02000000 		.4byte	.LVL25
 2282 01b6 06000000 		.4byte	.LVL26
 2283 01ba 0200     		.2byte	0x2
 2284 01bc 3A       		.byte	0x3a
 2285 01bd 9F       		.byte	0x9f
 2286 01be 06000000 		.4byte	.LVL26
 2287 01c2 0E000000 		.4byte	.LVL28
 2288 01c6 0100     		.2byte	0x1
 2289 01c8 54       		.byte	0x54
 2290 01c9 0E000000 		.4byte	.LVL28
 2291 01cd 10000000 		.4byte	.LVL29
 2292 01d1 0100     		.2byte	0x1
 2293 01d3 53       		.byte	0x53
 2294 01d4 10000000 		.4byte	.LVL29
 2295 01d8 16000000 		.4byte	.LFE130
 2296 01dc 0100     		.2byte	0x1
 2297 01de 54       		.byte	0x54
 2298 01df 00000000 		.4byte	0
 2299 01e3 00000000 		.4byte	0
 2300              	.LLST12:
 2301 01e7 00000000 		.4byte	.LVL30
 2302 01eb 08000000 		.4byte	.LVL32
 2303 01ef 0100     		.2byte	0x1
 2304 01f1 50       		.byte	0x50
 2305 01f2 08000000 		.4byte	.LVL32
 2306 01f6 14000000 		.4byte	.LFE135
 2307 01fa 0400     		.2byte	0x4
 2308 01fc F3       		.byte	0xf3
 2309 01fd 01       		.uleb128 0x1
 2310 01fe 50       		.byte	0x50
 2311 01ff 9F       		.byte	0x9f
 2312 0200 00000000 		.4byte	0
 2313 0204 00000000 		.4byte	0
 2314              	.LLST13:
 2315 0208 00000000 		.4byte	.LVL30
 2316 020c 0C000000 		.4byte	.LVL33
 2317 0210 0100     		.2byte	0x1
 2318 0212 51       		.byte	0x51
 2319 0213 0C000000 		.4byte	.LVL33
 2320 0217 14000000 		.4byte	.LFE135
 2321 021b 0400     		.2byte	0x4
 2322 021d F3       		.byte	0xf3
 2323 021e 01       		.uleb128 0x1
 2324 021f 51       		.byte	0x51
 2325 0220 9F       		.byte	0x9f
 2326 0221 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 73


 2327 0225 00000000 		.4byte	0
 2328              	.LLST14:
 2329 0229 00000000 		.4byte	.LVL30
 2330 022d 04000000 		.4byte	.LVL31
 2331 0231 0100     		.2byte	0x1
 2332 0233 53       		.byte	0x53
 2333 0234 04000000 		.4byte	.LVL31
 2334 0238 14000000 		.4byte	.LFE135
 2335 023c 0400     		.2byte	0x4
 2336 023e F3       		.byte	0xf3
 2337 023f 01       		.uleb128 0x1
 2338 0240 53       		.byte	0x53
 2339 0241 9F       		.byte	0x9f
 2340 0242 00000000 		.4byte	0
 2341 0246 00000000 		.4byte	0
 2342              	.LLST15:
 2343 024a 10000000 		.4byte	.LVL34
 2344 024e 12000000 		.4byte	.LVL35
 2345 0252 0500     		.2byte	0x5
 2346 0254 70       		.byte	0x70
 2347 0255 00       		.sleb128 0
 2348 0256 38       		.byte	0x38
 2349 0257 25       		.byte	0x25
 2350 0258 9F       		.byte	0x9f
 2351 0259 12000000 		.4byte	.LVL35
 2352 025d 14000000 		.4byte	.LFE135
 2353 0261 0100     		.2byte	0x1
 2354 0263 50       		.byte	0x50
 2355 0264 00000000 		.4byte	0
 2356 0268 00000000 		.4byte	0
 2357              	.LLST16:
 2358 026c 00000000 		.4byte	.LVL36
 2359 0270 0E000000 		.4byte	.LVL38
 2360 0274 0100     		.2byte	0x1
 2361 0276 50       		.byte	0x50
 2362 0277 0E000000 		.4byte	.LVL38
 2363 027b 8C000000 		.4byte	.LFE129
 2364 027f 0100     		.2byte	0x1
 2365 0281 57       		.byte	0x57
 2366 0282 00000000 		.4byte	0
 2367 0286 00000000 		.4byte	0
 2368              	.LLST17:
 2369 028a 00000000 		.4byte	.LVL36
 2370 028e 0E000000 		.4byte	.LVL38
 2371 0292 0100     		.2byte	0x1
 2372 0294 51       		.byte	0x51
 2373 0295 0E000000 		.4byte	.LVL38
 2374 0299 8C000000 		.4byte	.LFE129
 2375 029d 0100     		.2byte	0x1
 2376 029f 55       		.byte	0x55
 2377 02a0 00000000 		.4byte	0
 2378 02a4 00000000 		.4byte	0
 2379              	.LLST18:
 2380 02a8 00000000 		.4byte	.LVL36
 2381 02ac 0E000000 		.4byte	.LVL38
 2382 02b0 0100     		.2byte	0x1
 2383 02b2 52       		.byte	0x52
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 74


 2384 02b3 0E000000 		.4byte	.LVL38
 2385 02b7 8C000000 		.4byte	.LFE129
 2386 02bb 0100     		.2byte	0x1
 2387 02bd 56       		.byte	0x56
 2388 02be 00000000 		.4byte	0
 2389 02c2 00000000 		.4byte	0
 2390              	.LLST19:
 2391 02c6 1E000000 		.4byte	.LVL39
 2392 02ca 2C000000 		.4byte	.LVL40
 2393 02ce 0200     		.2byte	0x2
 2394 02d0 31       		.byte	0x31
 2395 02d1 9F       		.byte	0x9f
 2396 02d2 2E000000 		.4byte	.LVL41
 2397 02d6 30000000 		.4byte	.LVL42
 2398 02da 0200     		.2byte	0x2
 2399 02dc 30       		.byte	0x30
 2400 02dd 9F       		.byte	0x9f
 2401 02de 30000000 		.4byte	.LVL42
 2402 02e2 34000000 		.4byte	.LVL43
 2403 02e6 0100     		.2byte	0x1
 2404 02e8 53       		.byte	0x53
 2405 02e9 00000000 		.4byte	0
 2406 02ed 00000000 		.4byte	0
 2407              	.LLST20:
 2408 02f1 1E000000 		.4byte	.LVL39
 2409 02f5 2C000000 		.4byte	.LVL40
 2410 02f9 0100     		.2byte	0x1
 2411 02fb 52       		.byte	0x52
 2412 02fc 2E000000 		.4byte	.LVL41
 2413 0300 3E000000 		.4byte	.LVL44
 2414 0304 0100     		.2byte	0x1
 2415 0306 52       		.byte	0x52
 2416 0307 56000000 		.4byte	.LVL46
 2417 030b 68000000 		.4byte	.LVL49
 2418 030f 0100     		.2byte	0x1
 2419 0311 52       		.byte	0x52
 2420 0312 00000000 		.4byte	0
 2421 0316 00000000 		.4byte	0
 2422              	.LLST21:
 2423 031a 0A000000 		.4byte	.LVL37
 2424 031e 0E000000 		.4byte	.LVL38
 2425 0322 0200     		.2byte	0x2
 2426 0324 31       		.byte	0x31
 2427 0325 9F       		.byte	0x9f
 2428 0326 0E000000 		.4byte	.LVL38
 2429 032a 80000000 		.4byte	.LVL53
 2430 032e 0100     		.2byte	0x1
 2431 0330 54       		.byte	0x54
 2432 0331 80000000 		.4byte	.LVL53
 2433 0335 82000000 		.4byte	.LVL54
 2434 0339 0100     		.2byte	0x1
 2435 033b 53       		.byte	0x53
 2436 033c 82000000 		.4byte	.LVL54
 2437 0340 8C000000 		.4byte	.LFE129
 2438 0344 0100     		.2byte	0x1
 2439 0346 54       		.byte	0x54
 2440 0347 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 75


 2441 034b 00000000 		.4byte	0
 2442              	.LLST22:
 2443 034f 64000000 		.4byte	.LVL48
 2444 0353 7E000000 		.4byte	.LVL52
 2445 0357 0200     		.2byte	0x2
 2446 0359 31       		.byte	0x31
 2447 035a 9F       		.byte	0x9f
 2448 035b 00000000 		.4byte	0
 2449 035f 00000000 		.4byte	0
 2450              	.LLST23:
 2451 0363 5C000000 		.4byte	.LVL47
 2452 0367 64000000 		.4byte	.LVL48
 2453 036b 0500     		.2byte	0x5
 2454 036d 71       		.byte	0x71
 2455 036e 00       		.sleb128 0
 2456 036f 38       		.byte	0x38
 2457 0370 24       		.byte	0x24
 2458 0371 9F       		.byte	0x9f
 2459 0372 64000000 		.4byte	.LVL48
 2460 0376 6C000000 		.4byte	.LVL50
 2461 037a 0800     		.2byte	0x8
 2462 037c 71       		.byte	0x71
 2463 037d 00       		.sleb128 0
 2464 037e 38       		.byte	0x38
 2465 037f 24       		.byte	0x24
 2466 0380 7E       		.byte	0x7e
 2467 0381 00       		.sleb128 0
 2468 0382 21       		.byte	0x21
 2469 0383 9F       		.byte	0x9f
 2470 0384 6C000000 		.4byte	.LVL50
 2471 0388 6F000000 		.4byte	.LVL51-1
 2472 038c 0100     		.2byte	0x1
 2473 038e 51       		.byte	0x51
 2474 038f 70000000 		.4byte	.LVL51
 2475 0393 7E000000 		.4byte	.LVL52
 2476 0397 0100     		.2byte	0x1
 2477 0399 50       		.byte	0x50
 2478 039a 00000000 		.4byte	0
 2479 039e 00000000 		.4byte	0
 2480              	.LLST24:
 2481 03a2 00000000 		.4byte	.LVL55
 2482 03a6 1A000000 		.4byte	.LVL62
 2483 03aa 0100     		.2byte	0x1
 2484 03ac 50       		.byte	0x50
 2485 03ad 1A000000 		.4byte	.LVL62
 2486 03b1 24000000 		.4byte	.LFE128
 2487 03b5 0400     		.2byte	0x4
 2488 03b7 F3       		.byte	0xf3
 2489 03b8 01       		.uleb128 0x1
 2490 03b9 50       		.byte	0x50
 2491 03ba 9F       		.byte	0x9f
 2492 03bb 00000000 		.4byte	0
 2493 03bf 00000000 		.4byte	0
 2494              	.LLST25:
 2495 03c3 00000000 		.4byte	.LVL55
 2496 03c7 12000000 		.4byte	.LVL59
 2497 03cb 0100     		.2byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 76


 2498 03cd 51       		.byte	0x51
 2499 03ce 12000000 		.4byte	.LVL59
 2500 03d2 24000000 		.4byte	.LFE128
 2501 03d6 0400     		.2byte	0x4
 2502 03d8 F3       		.byte	0xf3
 2503 03d9 01       		.uleb128 0x1
 2504 03da 51       		.byte	0x51
 2505 03db 9F       		.byte	0x9f
 2506 03dc 00000000 		.4byte	0
 2507 03e0 00000000 		.4byte	0
 2508              	.LLST26:
 2509 03e4 02000000 		.4byte	.LVL56
 2510 03e8 1E000000 		.4byte	.LVL63
 2511 03ec 0200     		.2byte	0x2
 2512 03ee 30       		.byte	0x30
 2513 03ef 9F       		.byte	0x9f
 2514 03f0 1E000000 		.4byte	.LVL63
 2515 03f4 24000000 		.4byte	.LFE128
 2516 03f8 0100     		.2byte	0x1
 2517 03fa 50       		.byte	0x50
 2518 03fb 00000000 		.4byte	0
 2519 03ff 00000000 		.4byte	0
 2520              	.LLST27:
 2521 0403 02000000 		.4byte	.LVL56
 2522 0407 0E000000 		.4byte	.LVL58
 2523 040b 0200     		.2byte	0x2
 2524 040d 30       		.byte	0x30
 2525 040e 9F       		.byte	0x9f
 2526 040f 0E000000 		.4byte	.LVL58
 2527 0413 14000000 		.4byte	.LVL60
 2528 0417 0100     		.2byte	0x1
 2529 0419 54       		.byte	0x54
 2530 041a 14000000 		.4byte	.LVL60
 2531 041e 18000000 		.4byte	.LVL61
 2532 0422 0600     		.2byte	0x6
 2533 0424 74       		.byte	0x74
 2534 0425 00       		.sleb128 0
 2535 0426 75       		.byte	0x75
 2536 0427 00       		.sleb128 0
 2537 0428 22       		.byte	0x22
 2538 0429 9F       		.byte	0x9f
 2539 042a 18000000 		.4byte	.LVL61
 2540 042e 1D000000 		.4byte	.LVL63-1
 2541 0432 0100     		.2byte	0x1
 2542 0434 51       		.byte	0x51
 2543 0435 1D000000 		.4byte	.LVL63-1
 2544 0439 20000000 		.4byte	.LVL64
 2545 043d 0600     		.2byte	0x6
 2546 043f 74       		.byte	0x74
 2547 0440 00       		.sleb128 0
 2548 0441 75       		.byte	0x75
 2549 0442 00       		.sleb128 0
 2550 0443 22       		.byte	0x22
 2551 0444 9F       		.byte	0x9f
 2552 0445 00000000 		.4byte	0
 2553 0449 00000000 		.4byte	0
 2554              	.LLST28:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 77


 2555 044d 0C000000 		.4byte	.LVL57
 2556 0451 1D000000 		.4byte	.LVL63-1
 2557 0455 0200     		.2byte	0x2
 2558 0457 73       		.byte	0x73
 2559 0458 04       		.sleb128 4
 2560 0459 1D000000 		.4byte	.LVL63-1
 2561 045d 20000000 		.4byte	.LVL64
 2562 0461 1000     		.2byte	0x10
 2563 0463 F3       		.byte	0xf3
 2564 0464 01       		.uleb128 0x1
 2565 0465 50       		.byte	0x50
 2566 0466 33       		.byte	0x33
 2567 0467 24       		.byte	0x24
 2568 0468 F3       		.byte	0xf3
 2569 0469 01       		.uleb128 0x1
 2570 046a 50       		.byte	0x50
 2571 046b 1C       		.byte	0x1c
 2572 046c 32       		.byte	0x32
 2573 046d 24       		.byte	0x24
 2574 046e 76       		.byte	0x76
 2575 046f 00       		.sleb128 0
 2576 0470 22       		.byte	0x22
 2577 0471 23       		.byte	0x23
 2578 0472 04       		.uleb128 0x4
 2579 0473 00000000 		.4byte	0
 2580 0477 00000000 		.4byte	0
 2581              	.LLST29:
 2582 047b 00000000 		.4byte	.LVL65
 2583 047f 14000000 		.4byte	.LVL68
 2584 0483 0100     		.2byte	0x1
 2585 0485 50       		.byte	0x50
 2586 0486 14000000 		.4byte	.LVL68
 2587 048a 2A000000 		.4byte	.LVL73
 2588 048e 0100     		.2byte	0x1
 2589 0490 56       		.byte	0x56
 2590 0491 2A000000 		.4byte	.LVL73
 2591 0495 30000000 		.4byte	.LFE127
 2592 0499 0400     		.2byte	0x4
 2593 049b F3       		.byte	0xf3
 2594 049c 01       		.uleb128 0x1
 2595 049d 50       		.byte	0x50
 2596 049e 9F       		.byte	0x9f
 2597 049f 00000000 		.4byte	0
 2598 04a3 00000000 		.4byte	0
 2599              	.LLST30:
 2600 04a7 10000000 		.4byte	.LVL67
 2601 04ab 14000000 		.4byte	.LVL68
 2602 04af 0100     		.2byte	0x1
 2603 04b1 53       		.byte	0x53
 2604 04b2 14000000 		.4byte	.LVL68
 2605 04b6 20000000 		.4byte	.LVL71
 2606 04ba 0100     		.2byte	0x1
 2607 04bc 54       		.byte	0x54
 2608 04bd 20000000 		.4byte	.LVL71
 2609 04c1 22000000 		.4byte	.LVL72
 2610 04c5 0100     		.2byte	0x1
 2611 04c7 53       		.byte	0x53
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 78


 2612 04c8 22000000 		.4byte	.LVL72
 2613 04cc 2A000000 		.4byte	.LVL73
 2614 04d0 0100     		.2byte	0x1
 2615 04d2 54       		.byte	0x54
 2616 04d3 2A000000 		.4byte	.LVL73
 2617 04d7 30000000 		.4byte	.LFE127
 2618 04db 0300     		.2byte	0x3
 2619 04dd 73       		.byte	0x73
 2620 04de 7F       		.sleb128 -1
 2621 04df 9F       		.byte	0x9f
 2622 04e0 00000000 		.4byte	0
 2623 04e4 00000000 		.4byte	0
 2624              	.LLST31:
 2625 04e8 10000000 		.4byte	.LVL67
 2626 04ec 14000000 		.4byte	.LVL68
 2627 04f0 0100     		.2byte	0x1
 2628 04f2 53       		.byte	0x53
 2629 04f3 00000000 		.4byte	0
 2630 04f7 00000000 		.4byte	0
 2631              	.LLST32:
 2632 04fb 04000000 		.4byte	.LVL66
 2633 04ff 14000000 		.4byte	.LVL68
 2634 0503 0200     		.2byte	0x2
 2635 0505 30       		.byte	0x30
 2636 0506 9F       		.byte	0x9f
 2637 0507 14000000 		.4byte	.LVL68
 2638 050b 2A000000 		.4byte	.LVL73
 2639 050f 0100     		.2byte	0x1
 2640 0511 55       		.byte	0x55
 2641 0512 2A000000 		.4byte	.LVL73
 2642 0516 30000000 		.4byte	.LFE127
 2643 051a 0100     		.2byte	0x1
 2644 051c 50       		.byte	0x50
 2645 051d 00000000 		.4byte	0
 2646 0521 00000000 		.4byte	0
 2647              	.LLST33:
 2648 0525 02000000 		.4byte	.LVL74
 2649 0529 08000000 		.4byte	.LVL75
 2650 052d 0200     		.2byte	0x2
 2651 052f 3A       		.byte	0x3a
 2652 0530 9F       		.byte	0x9f
 2653 0531 08000000 		.4byte	.LVL75
 2654 0535 12000000 		.4byte	.LVL78
 2655 0539 0100     		.2byte	0x1
 2656 053b 54       		.byte	0x54
 2657 053c 12000000 		.4byte	.LVL78
 2658 0540 14000000 		.4byte	.LVL79
 2659 0544 0100     		.2byte	0x1
 2660 0546 53       		.byte	0x53
 2661 0547 14000000 		.4byte	.LVL79
 2662 054b 1C000000 		.4byte	.LFE126
 2663 054f 0100     		.2byte	0x1
 2664 0551 54       		.byte	0x54
 2665 0552 00000000 		.4byte	0
 2666 0556 00000000 		.4byte	0
 2667              	.LLST34:
 2668 055a 02000000 		.4byte	.LVL74
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 79


 2669 055e 08000000 		.4byte	.LVL75
 2670 0562 0200     		.2byte	0x2
 2671 0564 30       		.byte	0x30
 2672 0565 9F       		.byte	0x9f
 2673 0566 08000000 		.4byte	.LVL75
 2674 056a 1C000000 		.4byte	.LFE126
 2675 056e 0100     		.2byte	0x1
 2676 0570 55       		.byte	0x55
 2677 0571 00000000 		.4byte	0
 2678 0575 00000000 		.4byte	0
 2679              		.section	.debug_aranges,"",%progbits
 2680 0000 6C000000 		.4byte	0x6c
 2681 0004 0200     		.2byte	0x2
 2682 0006 00000000 		.4byte	.Ldebug_info0
 2683 000a 04       		.byte	0x4
 2684 000b 00       		.byte	0
 2685 000c 0000     		.2byte	0
 2686 000e 0000     		.2byte	0
 2687 0010 00000000 		.4byte	.LFB125
 2688 0014 02000000 		.4byte	.LFE125-.LFB125
 2689 0018 00000000 		.4byte	.LFB134
 2690 001c 1E000000 		.4byte	.LFE134-.LFB134
 2691 0020 00000000 		.4byte	.LFB133
 2692 0024 1E000000 		.4byte	.LFE133-.LFB133
 2693 0028 00000000 		.4byte	.LFB132
 2694 002c 28000000 		.4byte	.LFE132-.LFB132
 2695 0030 00000000 		.4byte	.LFB131
 2696 0034 28000000 		.4byte	.LFE131-.LFB131
 2697 0038 00000000 		.4byte	.LFB130
 2698 003c 16000000 		.4byte	.LFE130-.LFB130
 2699 0040 00000000 		.4byte	.LFB135
 2700 0044 14000000 		.4byte	.LFE135-.LFB135
 2701 0048 00000000 		.4byte	.LFB129
 2702 004c 8C000000 		.4byte	.LFE129-.LFB129
 2703 0050 00000000 		.4byte	.LFB128
 2704 0054 24000000 		.4byte	.LFE128-.LFB128
 2705 0058 00000000 		.4byte	.LFB127
 2706 005c 30000000 		.4byte	.LFE127-.LFB127
 2707 0060 00000000 		.4byte	.LFB126
 2708 0064 1C000000 		.4byte	.LFE126-.LFB126
 2709 0068 00000000 		.4byte	0
 2710 006c 00000000 		.4byte	0
 2711              		.section	.debug_ranges,"",%progbits
 2712              	.Ldebug_ranges0:
 2713 0000 00000000 		.4byte	.LFB125
 2714 0004 02000000 		.4byte	.LFE125
 2715 0008 00000000 		.4byte	.LFB134
 2716 000c 1E000000 		.4byte	.LFE134
 2717 0010 00000000 		.4byte	.LFB133
 2718 0014 1E000000 		.4byte	.LFE133
 2719 0018 00000000 		.4byte	.LFB132
 2720 001c 28000000 		.4byte	.LFE132
 2721 0020 00000000 		.4byte	.LFB131
 2722 0024 28000000 		.4byte	.LFE131
 2723 0028 00000000 		.4byte	.LFB130
 2724 002c 16000000 		.4byte	.LFE130
 2725 0030 00000000 		.4byte	.LFB135
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 80


 2726 0034 14000000 		.4byte	.LFE135
 2727 0038 00000000 		.4byte	.LFB129
 2728 003c 8C000000 		.4byte	.LFE129
 2729 0040 00000000 		.4byte	.LFB128
 2730 0044 24000000 		.4byte	.LFE128
 2731 0048 00000000 		.4byte	.LFB127
 2732 004c 30000000 		.4byte	.LFE127
 2733 0050 00000000 		.4byte	.LFB126
 2734 0054 1C000000 		.4byte	.LFE126
 2735 0058 00000000 		.4byte	0
 2736 005c 00000000 		.4byte	0
 2737              		.section	.debug_line,"",%progbits
 2738              	.Ldebug_line0:
 2739 0000 00030000 		.section	.debug_str,"MS",%progbits,1
 2739      0200D301 
 2739      00000201 
 2739      FB0E0D00 
 2739      01010101 
 2740              	.LASF62:
 2741 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2741      656E7365 
 2741      5F464C41 
 2741      53485F53 
 2741      54525543 
 2742              	.LASF27:
 2743 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2743      656E7365 
 2743      5F4C4F57 
 2743      5F42534C 
 2743      4E5F5253 
 2744              	.LASF86:
 2745 0031 72657375 		.ascii	"result\000"
 2745      6C7400
 2746              	.LASF46:
 2747 0038 62736C6E 		.ascii	"bsln\000"
 2747      00
 2748              	.LASF70:
 2749 003d 73656E73 		.ascii	"sensorId\000"
 2749      6F724964 
 2749      00
 2750              	.LASF90:
 2751 0046 62736C6E 		.ascii	"bslnStatus\000"
 2751      53746174 
 2751      757300
 2752              	.LASF41:
 2753 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2753      736C6E52 
 2753      737400
 2754              	.LASF48:
 2755 005c 64696666 		.ascii	"diff\000"
 2755      00
 2756              	.LASF57:
 2757 0061 746F7461 		.ascii	"totalNumSns\000"
 2757      6C4E756D 
 2757      536E7300 
 2758              	.LASF75:
 2759 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 81


 2759      656E7365 
 2759      5F496E69 
 2759      7469616C 
 2759      697A6541 
 2760              	.LASF42:
 2761 008d 69646163 		.ascii	"idacMod\000"
 2761      4D6F6400 
 2762              	.LASF5:
 2763 0095 73686F72 		.ascii	"short int\000"
 2763      7420696E 
 2763      7400
 2764              	.LASF76:
 2765 009f 696E7075 		.ascii	"input\000"
 2765      7400
 2766              	.LASF32:
 2767 00a5 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2767      656E7365 
 2767      5F57445F 
 2767      544F5543 
 2767      48504144 
 2768              	.LASF60:
 2769 00bc 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2769      656E7365 
 2769      5F464C41 
 2769      53485F57 
 2769      445F5354 
 2770              	.LASF84:
 2771 00d5 64696666 		.ascii	"difference\000"
 2771      6572656E 
 2771      636500
 2772              	.LASF38:
 2773 00e0 6E4E6F69 		.ascii	"nNoiseTh\000"
 2773      73655468 
 2773      00
 2774              	.LASF64:
 2775 00e9 77645479 		.ascii	"wdType\000"
 2775      706500
 2776              	.LASF94:
 2777 00f0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2777      43313120 
 2777      352E342E 
 2777      31203230 
 2777      31363036 
 2778 0123 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2778      20726576 
 2778      6973696F 
 2778      6E203233 
 2778      37373135 
 2779 0156 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 2779      70202D6D 
 2779      6670753D 
 2779      66707634 
 2779      2D73702D 
 2780 0189 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2780      6F6E7320 
 2780      2D666661 
 2780      742D6C74 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 82


 2780      6F2D6F62 
 2781              	.LASF79:
 2782 01a3 66696C74 		.ascii	"filteredOutput\000"
 2782      65726564 
 2782      4F757470 
 2782      757400
 2783              	.LASF11:
 2784 01b2 5F5F7569 		.ascii	"__uint32_t\000"
 2784      6E743332 
 2784      5F7400
 2785              	.LASF87:
 2786 01bd 68697374 		.ascii	"history\000"
 2786      6F727900 
 2787              	.LASF44:
 2788 01c5 736E7343 		.ascii	"snsClkSource\000"
 2788      6C6B536F 
 2788      75726365 
 2788      00
 2789              	.LASF7:
 2790 01d2 5F5F7569 		.ascii	"__uint16_t\000"
 2790      6E743136 
 2790      5F7400
 2791              	.LASF28:
 2792 01dd 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2792      656E7365 
 2792      5F57445F 
 2792      42555454 
 2792      4F4E5F45 
 2793              	.LASF37:
 2794 01f2 6E6F6973 		.ascii	"noiseTh\000"
 2794      65546800 
 2795              	.LASF24:
 2796 01fa 75696E74 		.ascii	"uint16\000"
 2796      313600
 2797              	.LASF88:
 2798 0201 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2798      656E7365 
 2798      5F557064 
 2798      61746553 
 2798      656E736F 
 2799              	.LASF55:
 2800 021f 70747232 		.ascii	"ptr2DebounceArr\000"
 2800      4465626F 
 2800      756E6365 
 2800      41727200 
 2801              	.LASF14:
 2802 022f 75696E74 		.ascii	"uint8_t\000"
 2802      385F7400 
 2803              	.LASF23:
 2804 0237 75696E74 		.ascii	"uint8\000"
 2804      3800
 2805              	.LASF82:
 2806 023d 70747257 		.ascii	"ptrWidgetRam\000"
 2806      69646765 
 2806      7452616D 
 2806      00
 2807              	.LASF43:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 83


 2808 024a 736E7343 		.ascii	"snsClk\000"
 2808      6C6B00
 2809              	.LASF66:
 2810 0251 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2810      656E7365 
 2810      5F467449 
 2810      6E697469 
 2810      616C697A 
 2811              	.LASF80:
 2812 0276 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2812      656E7365 
 2812      5F467449 
 2812      49523173 
 2812      744F7264 
 2813              	.LASF33:
 2814 028d 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2814      656E7365 
 2814      5F57445F 
 2814      50524F58 
 2814      494D4954 
 2815              	.LASF20:
 2816 02a5 666C6F61 		.ascii	"float\000"
 2816      7400
 2817              	.LASF1:
 2818 02ab 6C6F6E67 		.ascii	"long long int\000"
 2818      206C6F6E 
 2818      6720696E 
 2818      7400
 2819              	.LASF19:
 2820 02b9 63686172 		.ascii	"char\000"
 2820      00
 2821              	.LASF10:
 2822 02be 6C6F6E67 		.ascii	"long int\000"
 2822      20696E74 
 2822      00
 2823              	.LASF78:
 2824 02c7 73686966 		.ascii	"shift\000"
 2824      7400
 2825              	.LASF58:
 2826 02cd 77646774 		.ascii	"wdgtType\000"
 2826      54797065 
 2826      00
 2827              	.LASF95:
 2828 02d6 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
 2828      72617465 
 2828      645F536F 
 2828      75726365 
 2828      5C50536F 
 2829              	.LASF18:
 2830 02ff 73697A65 		.ascii	"sizetype\000"
 2830      74797065 
 2830      00
 2831              	.LASF26:
 2832 0308 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2832      656E7365 
 2832      5F544852 
 2832      4553484F 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 84


 2832      4C445F54 
 2833              	.LASF49:
 2834 0320 6E656742 		.ascii	"negBslnRstCnt\000"
 2834      736C6E52 
 2834      7374436E 
 2834      7400
 2835              	.LASF6:
 2836 032e 5F5F7569 		.ascii	"__uint8_t\000"
 2836      6E74385F 
 2836      7400
 2837              	.LASF40:
 2838 0338 6F6E4465 		.ascii	"onDebounce\000"
 2838      626F756E 
 2838      636500
 2839              	.LASF36:
 2840 0343 66696E67 		.ascii	"fingerTh\000"
 2840      65725468 
 2840      00
 2841              	.LASF59:
 2842 034c 6E756D43 		.ascii	"numCols\000"
 2842      6F6C7300 
 2843              	.LASF68:
 2844 0354 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2844      656E7365 
 2844      5F496E69 
 2844      7469616C 
 2844      697A6553 
 2845              	.LASF39:
 2846 0376 68797374 		.ascii	"hysteresis\000"
 2846      65726573 
 2846      697300
 2847              	.LASF2:
 2848 0381 6C6F6E67 		.ascii	"long double\000"
 2848      20646F75 
 2848      626C6500 
 2849              	.LASF4:
 2850 038d 756E7369 		.ascii	"unsigned char\000"
 2850      676E6564 
 2850      20636861 
 2850      7200
 2851              	.LASF74:
 2852 039b 70747257 		.ascii	"ptrWidget\000"
 2852      69646765 
 2852      7400
 2853              	.LASF22:
 2854 03a5 63795F73 		.ascii	"cy_status\000"
 2854      74617475 
 2854      7300
 2855              	.LASF3:
 2856 03af 7369676E 		.ascii	"signed char\000"
 2856      65642063 
 2856      68617200 
 2857              	.LASF16:
 2858 03bb 696E7433 		.ascii	"int32_t\000"
 2858      325F7400 
 2859              	.LASF13:
 2860 03c3 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 85


 2860      206C6F6E 
 2860      6720756E 
 2860      7369676E 
 2860      65642069 
 2861              	.LASF17:
 2862 03da 75696E74 		.ascii	"uint32_t\000"
 2862      33325F74 
 2862      00
 2863              	.LASF56:
 2864 03e3 73746174 		.ascii	"staticConfig\000"
 2864      6963436F 
 2864      6E666967 
 2864      00
 2865              	.LASF0:
 2866 03f0 756E7369 		.ascii	"unsigned int\000"
 2866      676E6564 
 2866      20696E74 
 2866      00
 2867              	.LASF15:
 2868 03fd 75696E74 		.ascii	"uint16_t\000"
 2868      31365F74 
 2868      00
 2869              	.LASF71:
 2870 0406 66726571 		.ascii	"freqChannel\000"
 2870      4368616E 
 2870      6E656C00 
 2871              	.LASF50:
 2872 0412 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2872      656E7365 
 2872      5F52414D 
 2872      5F534E53 
 2872      5F535452 
 2873              	.LASF89:
 2874 042a 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2874      656E7365 
 2874      5F557064 
 2874      61746557 
 2874      69646765 
 2875              	.LASF29:
 2876 0448 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2876      656E7365 
 2876      5F57445F 
 2876      4C494E45 
 2876      41525F53 
 2877              	.LASF8:
 2878 0464 73686F72 		.ascii	"short unsigned int\000"
 2878      7420756E 
 2878      7369676E 
 2878      65642069 
 2878      6E7400
 2879              	.LASF91:
 2880 0477 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2880      656E7365 
 2880      5F557064 
 2880      61746541 
 2880      6C6C4261 
 2881              	.LASF97:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 86


 2882 0493 43617053 		.ascii	"CapSense_FtInitialize\000"
 2882      656E7365 
 2882      5F467449 
 2882      6E697469 
 2882      616C697A 
 2883              	.LASF67:
 2884 04a9 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2884      656E7365 
 2884      5F467449 
 2884      6E697469 
 2884      616C697A 
 2885              	.LASF35:
 2886 04c7 7265736F 		.ascii	"resolution\000"
 2886      6C757469 
 2886      6F6E00
 2887              	.LASF9:
 2888 04d2 5F5F696E 		.ascii	"__int32_t\000"
 2888      7433325F 
 2888      7400
 2889              	.LASF65:
 2890 04dc 6368616E 		.ascii	"channel\000"
 2890      6E656C00 
 2891              	.LASF81:
 2892 04e4 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2892      656E7365 
 2892      5F467455 
 2892      70646174 
 2892      65426173 
 2893              	.LASF73:
 2894 04fe 73656E73 		.ascii	"sensorsNumber\000"
 2894      6F72734E 
 2894      756D6265 
 2894      7200
 2895              	.LASF52:
 2896 050c 70747232 		.ascii	"ptr2WdgtRam\000"
 2896      57646774 
 2896      52616D00 
 2897              	.LASF85:
 2898 0518 62617365 		.ascii	"baselineCoeff\000"
 2898      6C696E65 
 2898      436F6566 
 2898      6600
 2899              	.LASF30:
 2900 0526 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2900      656E7365 
 2900      5F57445F 
 2900      52414449 
 2900      414C5F53 
 2901              	.LASF69:
 2902 0542 77696467 		.ascii	"widgetId\000"
 2902      65744964 
 2902      00
 2903              	.LASF25:
 2904 054b 75696E74 		.ascii	"uint32\000"
 2904      333200
 2905              	.LASF12:
 2906 0552 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 87


 2906      20756E73 
 2906      69676E65 
 2906      6420696E 
 2906      7400
 2907              	.LASF83:
 2908 0564 7369676E 		.ascii	"sign\000"
 2908      00
 2909              	.LASF21:
 2910 0569 646F7562 		.ascii	"double\000"
 2910      6C6500
 2911              	.LASF47:
 2912 0570 62736C6E 		.ascii	"bslnExt\000"
 2912      45787400 
 2913              	.LASF34:
 2914 0578 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2914      656E7365 
 2914      5F57445F 
 2914      54595045 
 2914      5F454E55 
 2915              	.LASF77:
 2916 058e 70726576 		.ascii	"prevOutput\000"
 2916      4F757470 
 2916      757400
 2917              	.LASF31:
 2918 0599 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2918      656E7365 
 2918      5F57445F 
 2918      4D415452 
 2918      49585F42 
 2919              	.LASF53:
 2920 05b5 70747232 		.ascii	"ptr2SnsRam\000"
 2920      536E7352 
 2920      616D00
 2921              	.LASF72:
 2922 05c0 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 2922      656E7365 
 2922      5F496E69 
 2922      7469616C 
 2922      697A6557 
 2923              	.LASF54:
 2924 05e2 70747232 		.ascii	"ptr2FltrHistory\000"
 2924      466C7472 
 2924      48697374 
 2924      6F727900 
 2925              	.LASF61:
 2926 05f2 77646774 		.ascii	"wdgtArray\000"
 2926      41727261 
 2926      7900
 2927              	.LASF93:
 2928 05fc 43617053 		.ascii	"CapSense_dsFlash\000"
 2928      656E7365 
 2928      5F647346 
 2928      6C617368 
 2928      00
 2929              	.LASF96:
 2930 060d 433A5C55 		.ascii	"C:\\Users\\User\\Desktop\\SmartBottle_v0p1\\SmartBo"
 2930      73657273 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccHhgtod.s 			page 88


 2930      5C557365 
 2930      725C4465 
 2930      736B746F 
 2931 063b 74746C65 		.ascii	"ttle_v0p1_Calibration.cydsn\000"
 2931      5F763070 
 2931      315F4361 
 2931      6C696272 
 2931      6174696F 
 2932              	.LASF45:
 2933 0657 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2933      656E7365 
 2933      5F52414D 
 2933      5F57445F 
 2933      42415345 
 2934              	.LASF92:
 2935 0673 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2935      52784275 
 2935      66666572 
 2935      00
 2936              	.LASF51:
 2937 0680 70747232 		.ascii	"ptr2SnsFlash\000"
 2937      536E7346 
 2937      6C617368 
 2937      00
 2938              	.LASF63:
 2939 068d 70747253 		.ascii	"ptrSensor\000"
 2939      656E736F 
 2939      7200
 2940              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
