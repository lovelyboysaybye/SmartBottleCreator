ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Filter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_FtInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_FtInitialize, %function
  25              	CapSense_FtInitialize:
  26              	.LFB36:
  27              		.file 1 "Generated_Source\\PSoC6\\CapSense_Filter.c"
   1:Generated_Source\PSoC6/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC6/CapSense_Filter.c **** * \version 2.0
   4:Generated_Source\PSoC6/CapSense_Filter.c **** *
   5:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC6/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC6/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC6/CapSense_Filter.c **** *
   9:Generated_Source\PSoC6/CapSense_Filter.c **** * \see CapSense v2.0 Datasheet
  10:Generated_Source\PSoC6/CapSense_Filter.c **** *
  11:Generated_Source\PSoC6/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC6/CapSense_Filter.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC6/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC6/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC6/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC6/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC6/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC6/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC6/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC6/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC6/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC6/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC6/CapSense_Filter.c **** *
  26:Generated_Source\PSoC6/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC6/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC6/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC6/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC6/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 2


  31:Generated_Source\PSoC6/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC6/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC6/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC6/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC6/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC6/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC6/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/CapSense_Filter.c **** 
  40:Generated_Source\PSoC6/CapSense_Filter.c **** #include "stddef.h"
  41:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Filter.h"
  42:Generated_Source\PSoC6/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  43:Generated_Source\PSoC6/CapSense_Filter.c **** 
  44:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  45:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  46:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  47:Generated_Source\PSoC6/CapSense_Filter.c **** 
  48:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  49:Generated_Source\PSoC6/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  50:Generated_Source\PSoC6/CapSense_Filter.c **** #endif
  51:Generated_Source\PSoC6/CapSense_Filter.c **** 
  52:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  53:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  54:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  55:Generated_Source\PSoC6/CapSense_Filter.c **** *
  56:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  57:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  58:Generated_Source\PSoC6/CapSense_Filter.c **** *
  59:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  60:Generated_Source\PSoC6/CapSense_Filter.c **** *    Initializes all the firmware filter history, except the baseline filter.
  61:Generated_Source\PSoC6/CapSense_Filter.c **** *
  62:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  63:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  64:Generated_Source\PSoC6/CapSense_Filter.c **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  65:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  66:Generated_Source\PSoC6/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  67:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  68:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  69:Generated_Source\PSoC6/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
  70:Generated_Source\PSoC6/CapSense_Filter.c **** }
  33              		.loc 1 70 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE36:
  38              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  39 0002 C046     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  40              		.align	2
  41              		.global	CapSense_FtInitializeBaselineChannel
  42              		.code	16
  43              		.thumb_func
  44              		.type	CapSense_FtInitializeBaselineChannel, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 3


  45              	CapSense_FtInitializeBaselineChannel:
  46              	.LFB45:
  71:Generated_Source\PSoC6/CapSense_Filter.c **** 
  72:Generated_Source\PSoC6/CapSense_Filter.c **** 
  73:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
  74:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  75:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
  76:Generated_Source\PSoC6/CapSense_Filter.c **** *
  77:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
  78:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  79:Generated_Source\PSoC6/CapSense_Filter.c **** *
  80:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
  81:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  82:Generated_Source\PSoC6/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  83:Generated_Source\PSoC6/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  84:Generated_Source\PSoC6/CapSense_Filter.c **** *
  85:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  86:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  87:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  88:Generated_Source\PSoC6/CapSense_Filter.c **** *
  89:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  90:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  91:Generated_Source\PSoC6/CapSense_Filter.c **** *
  92:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
  93:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  94:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
  95:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
  96:Generated_Source\PSoC6/CapSense_Filter.c **** *
  97:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
  98:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateAllBaselines(void)
  99:Generated_Source\PSoC6/CapSense_Filter.c **** {
 100:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 101:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 102:Generated_Source\PSoC6/CapSense_Filter.c **** 
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 104:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 105:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 106:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107:Generated_Source\PSoC6/CapSense_Filter.c **** 
 108:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 109:Generated_Source\PSoC6/CapSense_Filter.c **** }
 110:Generated_Source\PSoC6/CapSense_Filter.c **** 
 111:Generated_Source\PSoC6/CapSense_Filter.c **** 
 112:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 114:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 115:Generated_Source\PSoC6/CapSense_Filter.c **** *
 116:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 117:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input parameter.
 118:Generated_Source\PSoC6/CapSense_Filter.c **** *
 119:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC6/CapSense_Filter.c **** *
 123:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 4


 126:Generated_Source\PSoC6/CapSense_Filter.c **** *
 127:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC6/CapSense_Filter.c **** *
 130:Generated_Source\PSoC6/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC6/CapSense_Filter.c **** *
 137:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 141:Generated_Source\PSoC6/CapSense_Filter.c **** *
 142:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC6/CapSense_Filter.c **** {
 145:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC6/CapSense_Filter.c **** 
 148:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC6/CapSense_Filter.c ****     cy_status bslnStatus = CY_RET_SUCCESS;
 150:Generated_Source\PSoC6/CapSense_Filter.c **** 
 151:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC6/CapSense_Filter.c **** 
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC6/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159:Generated_Source\PSoC6/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC6/CapSense_Filter.c **** }
 161:Generated_Source\PSoC6/CapSense_Filter.c **** 
 162:Generated_Source\PSoC6/CapSense_Filter.c **** 
 163:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC6/CapSense_Filter.c **** *
 167:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC6/CapSense_Filter.c **** *
 170:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC6/CapSense_Filter.c **** *
 175:Generated_Source\PSoC6/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC6/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC6/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC6/CapSense_Filter.c **** *
 179:Generated_Source\PSoC6/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC6/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC6/CapSense_Filter.c **** *
 182:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   widgetId
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 5


 183:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
 184:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC6/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC6/CapSense_Filter.c **** *
 188:Generated_Source\PSoC6/CapSense_Filter.c **** * \param   sensorId
 189:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC6/CapSense_Filter.c **** *
 194:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC6/CapSense_Filter.c **** *
 199:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC6/CapSense_Filter.c **** cy_status CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC6/CapSense_Filter.c **** {
 202:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 203:Generated_Source\PSoC6/CapSense_Filter.c **** 
 204:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC6/CapSense_Filter.c **** 
 208:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC6/CapSense_Filter.c **** 
 213:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC6/CapSense_Filter.c ****         if (CY_RET_SUCCESS != result)
 215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC6/CapSense_Filter.c ****             result = CY_RET_BAD_DATA;
 217:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC6/CapSense_Filter.c **** 
 221:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC6/CapSense_Filter.c **** }
 223:Generated_Source\PSoC6/CapSense_Filter.c **** 
 224:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC6/CapSense_Filter.c **** *
 228:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC6/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC6/CapSense_Filter.c **** *
 231:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC6/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC6/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC6/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC6/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC6/CapSense_Filter.c **** *
 237:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrWidgetRam
 238:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 6


 240:Generated_Source\PSoC6/CapSense_Filter.c **** *
 241:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensor
 242:Generated_Source\PSoC6/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC6/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC6/CapSense_Filter.c **** *
 245:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType
 246:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC6/CapSense_Filter.c **** *
 248:Generated_Source\PSoC6/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC6/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CY_RET_SUCCESS if baseline updating was successful;
 251:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC6/CapSense_Filter.c **** *    baseline and its inversion doesn't matched
 253:Generated_Source\PSoC6/CapSense_Filter.c **** *
 254:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC6/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC6/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC6/CapSense_Filter.c **** {
 260:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 265:Generated_Source\PSoC6/CapSense_Filter.c **** 
 266:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC6/CapSense_Filter.c **** 
 270:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC6/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC6/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC6/CapSense_Filter.c **** 
 282:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC6/CapSense_Filter.c **** 
 295:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 7


 297:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC6/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC6/CapSense_Filter.c ****                     ((difference < (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC6/CapSense_Filter.c **** 
 316:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC6/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC6/CapSense_Filter.c **** 
 328:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC6/CapSense_Filter.c **** 
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC6/CapSense_Filter.c **** 
 339:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 342:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 344:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC6/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 8


 354:Generated_Source\PSoC6/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
 355:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC6/CapSense_Filter.c **** 
 357:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC6/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC6/CapSense_Filter.c **** 
 363:Generated_Source\PSoC6/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC6/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC6/CapSense_Filter.c **** 
 368:Generated_Source\PSoC6/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history >> 8u);
 370:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 371:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bsln[freqChannel] = CY_LO16(history);
 373:Generated_Source\PSoC6/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC6/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC6/CapSense_Filter.c **** 
 378:Generated_Source\PSoC6/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC6/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC6/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC6/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC6/CapSense_Filter.c **** 
 383:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC6/CapSense_Filter.c **** 
 385:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC6/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC6/CapSense_Filter.c **** 
 390:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC6/CapSense_Filter.c **** 
 396:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC6/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC6/CapSense_Filter.c **** }
 399:Generated_Source\PSoC6/CapSense_Filter.c **** 
 400:Generated_Source\PSoC6/CapSense_Filter.c **** 
 401:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC6/CapSense_Filter.c **** *
 405:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC6/CapSense_Filter.c **** *
 408:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC6/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 9


 411:Generated_Source\PSoC6/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
 412:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 413:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 414:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC6/CapSense_Filter.c **** *
 418:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC6/CapSense_Filter.c **** {
 421:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC6/CapSense_Filter.c **** 
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC6/CapSense_Filter.c **** }
 428:Generated_Source\PSoC6/CapSense_Filter.c **** 
 429:Generated_Source\PSoC6/CapSense_Filter.c **** 
 430:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC6/CapSense_Filter.c **** *
 434:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC6/CapSense_Filter.c **** *
 438:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC6/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC6/CapSense_Filter.c **** *  
 442:Generated_Source\PSoC6/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is 
 443:Generated_Source\PSoC6/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC6/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC6/CapSense_Filter.c **** *
 447:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 448:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC6/CapSense_Filter.c **** *
 454:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC6/CapSense_Filter.c **** {
 457:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC6/CapSense_Filter.c **** 
 460:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC6/CapSense_Filter.c **** 
 462:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC6/CapSense_Filter.c **** 
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 10


 468:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 469:Generated_Source\PSoC6/CapSense_Filter.c **** }
 470:Generated_Source\PSoC6/CapSense_Filter.c **** 
 471:Generated_Source\PSoC6/CapSense_Filter.c **** 
 472:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC6/CapSense_Filter.c **** *
 476:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC6/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC6/CapSense_Filter.c **** *
 480:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC6/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC6/CapSense_Filter.c **** *
 484:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId
 485:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC6/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC6/CapSense_Filter.c **** *
 491:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId
 492:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC6/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC6/CapSense_Filter.c **** *
 498:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC6/CapSense_Filter.c **** {
 501:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC6/CapSense_Filter.c **** 
 505:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC6/CapSense_Filter.c **** }
 511:Generated_Source\PSoC6/CapSense_Filter.c **** 
 512:Generated_Source\PSoC6/CapSense_Filter.c **** 
 513:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC6/CapSense_Filter.c **** *
 517:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 518:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 519:Generated_Source\PSoC6/CapSense_Filter.c **** *
 520:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 521:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 522:Generated_Source\PSoC6/CapSense_Filter.c **** *
 523:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 524:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 11


 525:Generated_Source\PSoC6/CapSense_Filter.c **** *
 526:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 527:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 528:Generated_Source\PSoC6/CapSense_Filter.c **** {
 529:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 530:Generated_Source\PSoC6/CapSense_Filter.c **** 
 531:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 533:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 534:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 535:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 536:Generated_Source\PSoC6/CapSense_Filter.c **** }
 537:Generated_Source\PSoC6/CapSense_Filter.c **** 
 538:Generated_Source\PSoC6/CapSense_Filter.c **** 
 539:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 540:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 541:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 542:Generated_Source\PSoC6/CapSense_Filter.c **** *
 543:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the baseline history for a sensor indicated by an input
 544:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 545:Generated_Source\PSoC6/CapSense_Filter.c **** *
 546:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the baseline history for a sensor indicated by an input
 547:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 548:Generated_Source\PSoC6/CapSense_Filter.c **** *
 549:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    *ptrSensor The pointer to the sensor RAM object.
 550:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType     Specifies the type of a widget.
 551:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    channel    Specifies the number of the channel to be initialized.
 552:Generated_Source\PSoC6/CapSense_Filter.c **** *
 553:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 554:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 555:Generated_Source\PSoC6/CapSense_Filter.c **** {
  47              		.loc 1 555 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 556:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 557:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  53              		.loc 1 557 0
  54 0000 FF23     		movs	r3, #255
  55 0002 1940     		ands	r1, r3
  56              	.LVL1:
  57 0004 0629     		cmp	r1, #6
  58 0006 02D0     		beq	.L3
 558:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 559:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 560:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 561:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  59              		.loc 1 561 0
  60 0008 8318     		adds	r3, r0, r2
  61 000a 0021     		movs	r1, #0
  62 000c 1971     		strb	r1, [r3, #4]
  63              	.L3:
 562:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 563:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 564:Generated_Source\PSoC6/CapSense_Filter.c ****         }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 12


 565:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 566:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 567:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 568:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 569:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 570:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 571:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 572:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 573:Generated_Source\PSoC6/CapSense_Filter.c ****     #else
 574:Generated_Source\PSoC6/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 575:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 577:Generated_Source\PSoC6/CapSense_Filter.c **** 
 578:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  64              		.loc 1 578 0
  65 000e 5300     		lsls	r3, r2, #1
  66 0010 195A     		ldrh	r1, [r3, r0]
  67 0012 C318     		adds	r3, r0, r3
  68 0014 5980     		strh	r1, [r3, #2]
 579:Generated_Source\PSoC6/CapSense_Filter.c **** 
 580:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 581:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 582:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
 583:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 584:Generated_Source\PSoC6/CapSense_Filter.c **** 
 585:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  69              		.loc 1 585 0
  70 0016 8218     		adds	r2, r0, r2
  71              	.LVL2:
  72 0018 0023     		movs	r3, #0
  73 001a 1372     		strb	r3, [r2, #8]
 586:Generated_Source\PSoC6/CapSense_Filter.c **** }
  74              		.loc 1 586 0
  75              		@ sp needed
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE45:
  79              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  80 001e C046     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  81              		.align	2
  82              		.global	CapSense_FtInitializeBaseline
  83              		.code	16
  84              		.thumb_func
  85              		.type	CapSense_FtInitializeBaseline, %function
  86              	CapSense_FtInitializeBaseline:
  87              	.LFB44:
 528:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
  88              		.loc 1 528 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL3:
  93 0000 70B5     		push	{r4, r5, r6, lr}
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 4, -16
  96              		.cfi_offset 5, -12
  97              		.cfi_offset 6, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 13


  98              		.cfi_offset 14, -4
  99 0002 0600     		movs	r6, r0
 100 0004 0D00     		movs	r5, r1
 101              	.LVL4:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 102              		.loc 1 532 0
 103 0006 0123     		movs	r3, #1
 104 0008 05E0     		b	.L5
 105              	.LVL5:
 106              	.L6:
 534:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 107              		.loc 1 534 0
 108 000a 2200     		movs	r2, r4
 109 000c 2900     		movs	r1, r5
 110 000e 3000     		movs	r0, r6
 111 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 112              	.LVL6:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 113              		.loc 1 532 0
 114 0014 2300     		movs	r3, r4
 115              	.LVL7:
 116              	.L5:
 532:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 117              		.loc 1 532 0 is_stmt 0 discriminator 1
 118 0016 5C1E     		subs	r4, r3, #1
 119              	.LVL8:
 120 0018 002B     		cmp	r3, #0
 121 001a F6D1     		bne	.L6
 536:Generated_Source\PSoC6/CapSense_Filter.c **** 
 122              		.loc 1 536 0 is_stmt 1
 123              		@ sp needed
 124              	.LVL9:
 125              	.LVL10:
 126              	.LVL11:
 127 001c 70BD     		pop	{r4, r5, r6, pc}
 128              		.cfi_endproc
 129              	.LFE44:
 130              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 131 001e C046     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 132              		.align	2
 133              		.global	CapSense_InitializeSensorBaseline
 134              		.code	16
 135              		.thumb_func
 136              		.type	CapSense_InitializeSensorBaseline, %function
 137              	CapSense_InitializeSensorBaseline:
 138              	.LFB43:
 500:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 139              		.loc 1 500 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL12:
 144 0000 70B5     		push	{r4, r5, r6, lr}
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 14


 149              		.cfi_offset 14, -4
 150              	.LVL13:
 506:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 151              		.loc 1 506 0
 152 0002 094C     		ldr	r4, .L8
 153 0004 C300     		lsls	r3, r0, #3
 154 0006 1D1A     		subs	r5, r3, r0
 155 0008 AA00     		lsls	r2, r5, #2
 156 000a A218     		adds	r2, r4, r2
 157 000c 9568     		ldr	r5, [r2, #8]
 158              	.LVL14:
 507:Generated_Source\PSoC6/CapSense_Filter.c **** 
 159              		.loc 1 507 0
 160 000e 8A00     		lsls	r2, r1, #2
 161 0010 5118     		adds	r1, r2, r1
 162              	.LVL15:
 163 0012 4A00     		lsls	r2, r1, #1
 164 0014 AA18     		adds	r2, r5, r2
 165              	.LVL16:
 509:Generated_Source\PSoC6/CapSense_Filter.c **** }
 166              		.loc 1 509 0
 167 0016 1B1A     		subs	r3, r3, r0
 168 0018 9900     		lsls	r1, r3, #2
 169 001a 6118     		adds	r1, r4, r1
 170 001c 897E     		ldrb	r1, [r1, #26]
 171 001e 1000     		movs	r0, r2
 172              	.LVL17:
 173 0020 FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 174              	.LVL18:
 510:Generated_Source\PSoC6/CapSense_Filter.c **** 
 175              		.loc 1 510 0
 176              		@ sp needed
 177              	.LVL19:
 178 0024 70BD     		pop	{r4, r5, r6, pc}
 179              	.L9:
 180 0026 C046     		.align	2
 181              	.L8:
 182 0028 00000000 		.word	CapSense_dsFlash
 183              		.cfi_endproc
 184              	.LFE43:
 185              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 186              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 187              		.align	2
 188              		.global	CapSense_InitializeWidgetBaseline
 189              		.code	16
 190              		.thumb_func
 191              		.type	CapSense_InitializeWidgetBaseline, %function
 192              	CapSense_InitializeWidgetBaseline:
 193              	.LFB42:
 456:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 194              		.loc 1 456 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL20:
 199 0000 70B5     		push	{r4, r5, r6, lr}
 200              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 15


 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 6, -8
 204              		.cfi_offset 14, -4
 205 0002 0500     		movs	r5, r0
 206              	.LVL21:
 463:Generated_Source\PSoC6/CapSense_Filter.c **** 
 207              		.loc 1 463 0
 208 0004 C200     		lsls	r2, r0, #3
 209 0006 121A     		subs	r2, r2, r0
 210 0008 9300     		lsls	r3, r2, #2
 211 000a 064A     		ldr	r2, .L13
 212 000c D318     		adds	r3, r2, r3
 213 000e 1B8B     		ldrh	r3, [r3, #24]
 214              	.LVL22:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 215              		.loc 1 465 0
 216 0010 04E0     		b	.L11
 217              	.LVL23:
 218              	.L12:
 467:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 219              		.loc 1 467 0
 220 0012 2100     		movs	r1, r4
 221 0014 2800     		movs	r0, r5
 222 0016 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 223              	.LVL24:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 224              		.loc 1 465 0
 225 001a 2300     		movs	r3, r4
 226              	.LVL25:
 227              	.L11:
 465:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 228              		.loc 1 465 0 is_stmt 0 discriminator 1
 229 001c 5C1E     		subs	r4, r3, #1
 230              	.LVL26:
 231 001e 002B     		cmp	r3, #0
 232 0020 F7D1     		bne	.L12
 469:Generated_Source\PSoC6/CapSense_Filter.c **** 
 233              		.loc 1 469 0 is_stmt 1
 234              		@ sp needed
 235              	.LVL27:
 236              	.LVL28:
 237 0022 70BD     		pop	{r4, r5, r6, pc}
 238              	.L14:
 239              		.align	2
 240              	.L13:
 241 0024 00000000 		.word	CapSense_dsFlash
 242              		.cfi_endproc
 243              	.LFE42:
 244              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 245              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 246              		.align	2
 247              		.global	CapSense_InitializeAllBaselines
 248              		.code	16
 249              		.thumb_func
 250              		.type	CapSense_InitializeAllBaselines, %function
 251              	CapSense_InitializeAllBaselines:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 16


 252              	.LFB41:
 420:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 253              		.loc 1 420 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 10B5     		push	{r4, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 4, -8
 260              		.cfi_offset 14, -4
 261              	.LVL29:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 262              		.loc 1 423 0
 263 0002 0A23     		movs	r3, #10
 264 0004 03E0     		b	.L16
 265              	.LVL30:
 266              	.L17:
 425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 267              		.loc 1 425 0
 268 0006 2000     		movs	r0, r4
 269 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 270              	.LVL31:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 271              		.loc 1 423 0
 272 000c 2300     		movs	r3, r4
 273              	.LVL32:
 274              	.L16:
 423:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 275              		.loc 1 423 0 is_stmt 0 discriminator 1
 276 000e 5C1E     		subs	r4, r3, #1
 277              	.LVL33:
 278 0010 002B     		cmp	r3, #0
 279 0012 F8D1     		bne	.L17
 427:Generated_Source\PSoC6/CapSense_Filter.c **** 
 280              		.loc 1 427 0 is_stmt 1
 281              		@ sp needed
 282              	.LVL34:
 283 0014 10BD     		pop	{r4, pc}
 284              		.cfi_endproc
 285              	.LFE41:
 286              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 287 0016 C046     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 288              		.align	2
 289              		.global	CapSense_FtIIR1stOrder
 290              		.code	16
 291              		.thumb_func
 292              		.type	CapSense_FtIIR1stOrder, %function
 293              	CapSense_FtIIR1stOrder:
 294              	.LFB46:
 587:Generated_Source\PSoC6/CapSense_Filter.c **** 
 588:Generated_Source\PSoC6/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 589:Generated_Source\PSoC6/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 590:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 591:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 592:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 593:Generated_Source\PSoC6/CapSense_Filter.c **** *
 594:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 17


 595:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the 
 596:Generated_Source\PSoC6/CapSense_Filter.c **** *  sensors of all the widgets.
 597:Generated_Source\PSoC6/CapSense_Filter.c **** *
 598:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 599:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the 
 600:Generated_Source\PSoC6/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines. 
 601:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense 
 602:Generated_Source\PSoC6/CapSense_Filter.c **** *  operation initialization.
 603:Generated_Source\PSoC6/CapSense_Filter.c **** *
 604:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 605:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 606:Generated_Source\PSoC6/CapSense_Filter.c **** {
 607:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 608:Generated_Source\PSoC6/CapSense_Filter.c **** 
 609:Generated_Source\PSoC6/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 610:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 611:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 612:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613:Generated_Source\PSoC6/CapSense_Filter.c **** }
 614:Generated_Source\PSoC6/CapSense_Filter.c **** 
 615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 618:Generated_Source\PSoC6/CapSense_Filter.c **** *
 619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief
 620:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 621:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 622:Generated_Source\PSoC6/CapSense_Filter.c **** *
 623:Generated_Source\PSoC6/CapSense_Filter.c **** * \details
 624:Generated_Source\PSoC6/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors 
 625:Generated_Source\PSoC6/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 626:Generated_Source\PSoC6/CapSense_Filter.c **** *
 627:Generated_Source\PSoC6/CapSense_Filter.c **** * \param  widgetId
 628:Generated_Source\PSoC6/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all 
 629:Generated_Source\PSoC6/CapSense_Filter.c **** *  the sensors in the widget.
 630:Generated_Source\PSoC6/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 631:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 632:Generated_Source\PSoC6/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 633:Generated_Source\PSoC6/CapSense_Filter.c **** *
 634:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 635:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 636:Generated_Source\PSoC6/CapSense_Filter.c **** {
 637:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 638:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorsNumber;
 639:Generated_Source\PSoC6/CapSense_Filter.c **** 
 640:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 641:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 642:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 643:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 644:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
 645:Generated_Source\PSoC6/CapSense_Filter.c ****     
 646:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 647:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 648:Generated_Source\PSoC6/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 649:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 650:Generated_Source\PSoC6/CapSense_Filter.c **** 
 651:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 18


 652:Generated_Source\PSoC6/CapSense_Filter.c **** 
 653:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 654:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 655:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 656:Generated_Source\PSoC6/CapSense_Filter.c **** 
 657:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 658:Generated_Source\PSoC6/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 659:Generated_Source\PSoC6/CapSense_Filter.c **** 
 660:Generated_Source\PSoC6/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 661:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 662:Generated_Source\PSoC6/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 663:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 664:Generated_Source\PSoC6/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 665:Generated_Source\PSoC6/CapSense_Filter.c **** 
 666:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 667:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 668:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 669:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
 670:Generated_Source\PSoC6/CapSense_Filter.c **** 
 671:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 672:Generated_Source\PSoC6/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 673:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 674:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 675:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 676:Generated_Source\PSoC6/CapSense_Filter.c **** 
 677:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 678:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 679:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 680:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 681:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 682:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 683:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
 684:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 685:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 686:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 687:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 688:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 689:Generated_Source\PSoC6/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 690:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 691:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 692:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 693:Generated_Source\PSoC6/CapSense_Filter.c **** 
 694:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 695:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 696:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 697:Generated_Source\PSoC6/CapSense_Filter.c **** 
 698:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 699:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 700:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 701:Generated_Source\PSoC6/CapSense_Filter.c **** 
 702:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
 703:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 704:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 705:Generated_Source\PSoC6/CapSense_Filter.c **** 
 706:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 707:Generated_Source\PSoC6/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 19


 709:Generated_Source\PSoC6/CapSense_Filter.c **** 
 710:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 711:Generated_Source\PSoC6/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 712:Generated_Source\PSoC6/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 713:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 714:Generated_Source\PSoC6/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 715:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 716:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 717:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 718:Generated_Source\PSoC6/CapSense_Filter.c **** }
 719:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 720:Generated_Source\PSoC6/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 721:Generated_Source\PSoC6/CapSense_Filter.c **** 
 722:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 723:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 724:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 725:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 726:Generated_Source\PSoC6/CapSense_Filter.c **** *
 727:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initialize the IIR filter history.
 728:Generated_Source\PSoC6/CapSense_Filter.c **** *
 729:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initialize the IIR filter history.
 730:Generated_Source\PSoC6/CapSense_Filter.c **** *
 731:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 732:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 733:Generated_Source\PSoC6/CapSense_Filter.c **** *
 734:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 735:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 736:Generated_Source\PSoC6/CapSense_Filter.c **** {
 737:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 738:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 739:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 740:Generated_Source\PSoC6/CapSense_Filter.c **** 
 741:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 742:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 743:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 744:Generated_Source\PSoC6/CapSense_Filter.c **** 
 745:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 746:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 747:Generated_Source\PSoC6/CapSense_Filter.c **** 
 748:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 749:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 750:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 751:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 752:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 753:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 754:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 755:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 756:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 757:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 758:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 759:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 760:Generated_Source\PSoC6/CapSense_Filter.c **** 
 761:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 762:Generated_Source\PSoC6/CapSense_Filter.c **** }
 763:Generated_Source\PSoC6/CapSense_Filter.c **** 
 764:Generated_Source\PSoC6/CapSense_Filter.c **** 
 765:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 20


 766:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 767:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 768:Generated_Source\PSoC6/CapSense_Filter.c **** *
 769:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the IIR filter algorithm on a sensor indicated by an input
 770:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 771:Generated_Source\PSoC6/CapSense_Filter.c **** *
 772:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the IIR filter algorithm on a sensor indicated by an input
 773:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 774:Generated_Source\PSoC6/CapSense_Filter.c **** *
 775:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 776:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 777:Generated_Source\PSoC6/CapSense_Filter.c **** *
 778:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 779:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 780:Generated_Source\PSoC6/CapSense_Filter.c **** {
 781:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 782:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 783:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 784:Generated_Source\PSoC6/CapSense_Filter.c **** 
 785:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 786:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 787:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 788:Generated_Source\PSoC6/CapSense_Filter.c **** 
 789:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 790:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 791:Generated_Source\PSoC6/CapSense_Filter.c **** 
 792:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 793:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 794:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 795:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 796:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 797:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 798:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 799:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 800:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 801:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 802:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 803:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 804:Generated_Source\PSoC6/CapSense_Filter.c **** 
 805:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 806:Generated_Source\PSoC6/CapSense_Filter.c **** }
 807:Generated_Source\PSoC6/CapSense_Filter.c **** 
 808:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 809:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 810:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6/CapSense_Filter.c **** *
 812:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the IIR filter history.
 813:Generated_Source\PSoC6/CapSense_Filter.c **** *
 814:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the IIR filter history.
 815:Generated_Source\PSoC6/CapSense_Filter.c **** *
 816:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 817:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 818:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 819:Generated_Source\PSoC6/CapSense_Filter.c **** *
 820:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 821:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 822:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 21


 823:Generated_Source\PSoC6/CapSense_Filter.c **** {
 824:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 825:Generated_Source\PSoC6/CapSense_Filter.c **** 
 826:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 827:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 828:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 829:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 830:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 831:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 832:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 833:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 834:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 835:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 836:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 837:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 838:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 839:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 840:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 841:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 842:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 843:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 844:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 845:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 846:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 847:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 848:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 849:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 850:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 851:Generated_Source\PSoC6/CapSense_Filter.c **** }
 852:Generated_Source\PSoC6/CapSense_Filter.c **** 
 853:Generated_Source\PSoC6/CapSense_Filter.c **** 
 854:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 855:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 856:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 857:Generated_Source\PSoC6/CapSense_Filter.c **** *
 858:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Run the IIR filter.
 859:Generated_Source\PSoC6/CapSense_Filter.c **** *
 860:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Run the IIR filter.
 861:Generated_Source\PSoC6/CapSense_Filter.c **** *
 862:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
 863:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
 864:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
 865:Generated_Source\PSoC6/CapSense_Filter.c **** *
 866:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 867:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 868:Generated_Source\PSoC6/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 869:Generated_Source\PSoC6/CapSense_Filter.c **** {
 870:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
 871:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
 872:Generated_Source\PSoC6/CapSense_Filter.c **** 
 873:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 874:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 875:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 876:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 877:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 878:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 879:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 22


 880:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 881:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 882:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 883:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 884:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 885:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 886:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = CY_LO8
 887:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 888:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 889:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 890:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 891:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 892:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 893:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = CY_LO16(t
 894:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 895:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 896:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 897:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 898:Generated_Source\PSoC6/CapSense_Filter.c ****         else
 899:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 900:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 901:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 902:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 903:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 904:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 905:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         temp,
 906:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 907:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 908:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp >>
 909:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = CY_LO8(temp)
 910:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 911:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
 912:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 913:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 914:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 915:Generated_Source\PSoC6/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 916:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = CY_LO16(temp);
 917:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 918:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 919:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 920:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 921:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 922:Generated_Source\PSoC6/CapSense_Filter.c **** }
 923:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 924:Generated_Source\PSoC6/CapSense_Filter.c **** 
 925:Generated_Source\PSoC6/CapSense_Filter.c **** 
 926:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 927:Generated_Source\PSoC6/CapSense_Filter.c **** 
 928:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 929:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 930:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 931:Generated_Source\PSoC6/CapSense_Filter.c **** *
 932:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter history.
 933:Generated_Source\PSoC6/CapSense_Filter.c **** *
 934:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter history.
 935:Generated_Source\PSoC6/CapSense_Filter.c **** *
 936:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 23


 937:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 938:Generated_Source\PSoC6/CapSense_Filter.c **** *
 939:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 940:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 941:Generated_Source\PSoC6/CapSense_Filter.c **** {
 942:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 943:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 944:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 945:Generated_Source\PSoC6/CapSense_Filter.c **** 
 946:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 947:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 948:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 949:Generated_Source\PSoC6/CapSense_Filter.c **** 
 950:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 951:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 952:Generated_Source\PSoC6/CapSense_Filter.c **** 
 953:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 954:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 955:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 956:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 957:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 958:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 959:Generated_Source\PSoC6/CapSense_Filter.c ****     else
 960:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 961:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 962:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 963:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 964:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 965:Generated_Source\PSoC6/CapSense_Filter.c **** 
 966:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 967:Generated_Source\PSoC6/CapSense_Filter.c **** }
 968:Generated_Source\PSoC6/CapSense_Filter.c **** 
 969:Generated_Source\PSoC6/CapSense_Filter.c **** 
 970:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
 971:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
 972:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
 973:Generated_Source\PSoC6/CapSense_Filter.c **** *
 974:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the Median filter algorithm on a sensor indicated by an input
 975:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 976:Generated_Source\PSoC6/CapSense_Filter.c **** *
 977:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the Median filter algorithm on a sensor indicated by an input
 978:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
 979:Generated_Source\PSoC6/CapSense_Filter.c **** *
 980:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
 981:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
 982:Generated_Source\PSoC6/CapSense_Filter.c **** *
 983:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
 984:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
 985:Generated_Source\PSoC6/CapSense_Filter.c **** {
 986:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 987:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 988:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 989:Generated_Source\PSoC6/CapSense_Filter.c **** 
 990:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 991:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 992:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 993:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 24


 994:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 995:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 996:Generated_Source\PSoC6/CapSense_Filter.c **** 
 997:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 998:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 999:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1000:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1001:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1002:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1003:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1004:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1005:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1006:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1007:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1008:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1009:Generated_Source\PSoC6/CapSense_Filter.c **** 
1010:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1011:Generated_Source\PSoC6/CapSense_Filter.c **** }
1012:Generated_Source\PSoC6/CapSense_Filter.c **** 
1013:Generated_Source\PSoC6/CapSense_Filter.c **** 
1014:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1015:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1016:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1017:Generated_Source\PSoC6/CapSense_Filter.c **** *
1018:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the Median filter.
1019:Generated_Source\PSoC6/CapSense_Filter.c **** *
1020:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the Median filter.
1021:Generated_Source\PSoC6/CapSense_Filter.c **** *
1022:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1023:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1024:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1025:Generated_Source\PSoC6/CapSense_Filter.c **** *
1026:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1027:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1028:Generated_Source\PSoC6/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1029:Generated_Source\PSoC6/CapSense_Filter.c **** {
1030:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1031:Generated_Source\PSoC6/CapSense_Filter.c **** 
1032:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1033:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1034:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1035:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1036:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1037:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1038:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1039:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1040:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1041:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1042:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1043:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1044:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1045:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1046:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1047:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1048:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC6/CapSense_Filter.c **** }
1050:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 25


1051:Generated_Source\PSoC6/CapSense_Filter.c **** 
1052:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1053:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1054:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1055:Generated_Source\PSoC6/CapSense_Filter.c **** *
1056:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the Median filter.
1057:Generated_Source\PSoC6/CapSense_Filter.c **** *
1058:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the Median filter.
1059:Generated_Source\PSoC6/CapSense_Filter.c **** *
1060:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1061:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1062:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1063:Generated_Source\PSoC6/CapSense_Filter.c **** *
1064:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1065:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1066:Generated_Source\PSoC6/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1067:Generated_Source\PSoC6/CapSense_Filter.c **** {
1068:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1069:Generated_Source\PSoC6/CapSense_Filter.c **** 
1070:Generated_Source\PSoC6/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
1071:Generated_Source\PSoC6/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1072:Generated_Source\PSoC6/CapSense_Filter.c ****         uint32 temp;
1073:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1074:Generated_Source\PSoC6/CapSense_Filter.c **** 
1075:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1076:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1077:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1078:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1079:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1080:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1081:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1082:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1083:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1084:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1085:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1086:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1087:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1088:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1089:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1090:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1091:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1092:Generated_Source\PSoC6/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1093:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1094:Generated_Source\PSoC6/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1095:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1096:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1097:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1099:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC6/CapSense_Filter.c **** }
1103:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1104:Generated_Source\PSoC6/CapSense_Filter.c **** 
1105:Generated_Source\PSoC6/CapSense_Filter.c **** 
1106:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1107:Generated_Source\PSoC6/CapSense_Filter.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 26


1108:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1109:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1110:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1111:Generated_Source\PSoC6/CapSense_Filter.c **** *
1112:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter history.
1113:Generated_Source\PSoC6/CapSense_Filter.c **** *
1114:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter history.
1115:Generated_Source\PSoC6/CapSense_Filter.c **** *
1116:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1117:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1118:Generated_Source\PSoC6/CapSense_Filter.c **** *
1119:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1120:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1121:Generated_Source\PSoC6/CapSense_Filter.c **** {
1122:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1123:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1124:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1125:Generated_Source\PSoC6/CapSense_Filter.c **** 
1126:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1127:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1128:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1129:Generated_Source\PSoC6/CapSense_Filter.c **** 
1130:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1131:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1132:Generated_Source\PSoC6/CapSense_Filter.c **** 
1133:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1134:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1135:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1136:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1137:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1138:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1139:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1140:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1141:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1142:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1143:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1144:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1145:Generated_Source\PSoC6/CapSense_Filter.c **** 
1146:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1147:Generated_Source\PSoC6/CapSense_Filter.c **** }
1148:Generated_Source\PSoC6/CapSense_Filter.c **** 
1149:Generated_Source\PSoC6/CapSense_Filter.c **** 
1150:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1151:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1152:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1153:Generated_Source\PSoC6/CapSense_Filter.c **** *
1154:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the average filter algorithm on a sensor indicated by an input
1155:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1156:Generated_Source\PSoC6/CapSense_Filter.c **** *
1157:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the average filter algorithm on a sensor indicated by an input
1158:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1159:Generated_Source\PSoC6/CapSense_Filter.c **** *
1160:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1161:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1162:Generated_Source\PSoC6/CapSense_Filter.c **** *
1163:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1164:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 27


1165:Generated_Source\PSoC6/CapSense_Filter.c **** {
1166:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1167:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1168:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1169:Generated_Source\PSoC6/CapSense_Filter.c **** 
1170:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1171:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1172:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1173:Generated_Source\PSoC6/CapSense_Filter.c **** 
1174:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1175:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1176:Generated_Source\PSoC6/CapSense_Filter.c **** 
1177:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1178:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1179:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1180:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1181:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1182:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1183:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1184:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1185:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1186:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1187:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1188:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1189:Generated_Source\PSoC6/CapSense_Filter.c **** 
1190:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1191:Generated_Source\PSoC6/CapSense_Filter.c **** }
1192:Generated_Source\PSoC6/CapSense_Filter.c **** 
1193:Generated_Source\PSoC6/CapSense_Filter.c **** 
1194:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1195:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1196:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1197:Generated_Source\PSoC6/CapSense_Filter.c **** *
1198:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the average filter.
1199:Generated_Source\PSoC6/CapSense_Filter.c **** *
1200:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the average filter.
1201:Generated_Source\PSoC6/CapSense_Filter.c **** *
1202:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1203:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1204:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1205:Generated_Source\PSoC6/CapSense_Filter.c **** *
1206:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1207:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1208:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1209:Generated_Source\PSoC6/CapSense_Filter.c **** {
1210:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1211:Generated_Source\PSoC6/CapSense_Filter.c **** 
1212:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1213:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1214:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1215:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1216:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1217:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1218:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1219:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1220:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1221:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 28


1222:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1223:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1224:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1225:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1226:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1227:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1228:Generated_Source\PSoC6/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1229:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1230:Generated_Source\PSoC6/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1231:Generated_Source\PSoC6/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1232:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1233:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1234:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1235:Generated_Source\PSoC6/CapSense_Filter.c **** }
1236:Generated_Source\PSoC6/CapSense_Filter.c **** 
1237:Generated_Source\PSoC6/CapSense_Filter.c **** 
1238:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1239:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1240:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6/CapSense_Filter.c **** *
1242:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the average filter.
1243:Generated_Source\PSoC6/CapSense_Filter.c **** *
1244:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the average filter.
1245:Generated_Source\PSoC6/CapSense_Filter.c **** *
1246:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1247:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1248:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1249:Generated_Source\PSoC6/CapSense_Filter.c **** *
1250:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1251:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1252:Generated_Source\PSoC6/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1253:Generated_Source\PSoC6/CapSense_Filter.c **** {
1254:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1255:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 temp;
1256:Generated_Source\PSoC6/CapSense_Filter.c **** 
1257:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1258:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1259:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1260:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1261:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1262:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1263:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1264:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1265:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1266:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1267:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1268:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1269:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1270:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1271:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1272:Generated_Source\PSoC6/CapSense_Filter.c **** 
1273:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1274:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1275:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1276:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1277:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1278:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 29


1279:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1280:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1281:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1282:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1284:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1285:Generated_Source\PSoC6/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1286:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1287:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1288:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1289:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1290:Generated_Source\PSoC6/CapSense_Filter.c ****                 #else
1291:Generated_Source\PSoC6/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1292:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1293:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1294:Generated_Source\PSoC6/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1295:Generated_Source\PSoC6/CapSense_Filter.c **** 
1296:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1297:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1298:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
1299:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1300:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1301:Generated_Source\PSoC6/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = CY_LO16(temp);
1302:Generated_Source\PSoC6/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1303:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1304:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1305:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1306:Generated_Source\PSoC6/CapSense_Filter.c **** }
1307:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1308:Generated_Source\PSoC6/CapSense_Filter.c **** 
1309:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1310:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1311:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1312:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1313:Generated_Source\PSoC6/CapSense_Filter.c **** *
1314:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter history.
1315:Generated_Source\PSoC6/CapSense_Filter.c **** *
1316:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter history.
1317:Generated_Source\PSoC6/CapSense_Filter.c **** *
1318:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1319:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1320:Generated_Source\PSoC6/CapSense_Filter.c **** *
1321:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1322:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1323:Generated_Source\PSoC6/CapSense_Filter.c **** {
1324:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1325:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1326:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1327:Generated_Source\PSoC6/CapSense_Filter.c **** 
1328:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1329:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1330:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1331:Generated_Source\PSoC6/CapSense_Filter.c **** 
1332:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1333:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1334:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1335:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 30


1336:Generated_Source\PSoC6/CapSense_Filter.c **** }
1337:Generated_Source\PSoC6/CapSense_Filter.c **** 
1338:Generated_Source\PSoC6/CapSense_Filter.c **** 
1339:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1340:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1341:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1342:Generated_Source\PSoC6/CapSense_Filter.c **** *
1343:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the ALP filter algorithm on a sensor indicated by an input
1344:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1345:Generated_Source\PSoC6/CapSense_Filter.c **** *
1346:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the ALP filter algorithm on a sensor indicated by an input
1347:Generated_Source\PSoC6/CapSense_Filter.c **** *           parameter.
1348:Generated_Source\PSoC6/CapSense_Filter.c **** *
1349:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1350:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1351:Generated_Source\PSoC6/CapSense_Filter.c **** *
1352:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1353:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1354:Generated_Source\PSoC6/CapSense_Filter.c **** {
1355:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1356:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1357:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1358:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1359:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1360:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1361:Generated_Source\PSoC6/CapSense_Filter.c **** 
1362:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1363:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1364:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1365:Generated_Source\PSoC6/CapSense_Filter.c **** 
1366:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1367:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1368:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1369:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1370:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1371:Generated_Source\PSoC6/CapSense_Filter.c **** 
1372:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1373:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1374:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1375:Generated_Source\PSoC6/CapSense_Filter.c **** 
1376:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1377:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1378:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1379:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1380:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1381:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1382:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1383:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1384:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1385:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1386:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1387:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1388:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1389:Generated_Source\PSoC6/CapSense_Filter.c **** }
1390:Generated_Source\PSoC6/CapSense_Filter.c **** 
1391:Generated_Source\PSoC6/CapSense_Filter.c **** 
1392:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 31


1393:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1394:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1395:Generated_Source\PSoC6/CapSense_Filter.c **** *
1396:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the ALP filter.
1397:Generated_Source\PSoC6/CapSense_Filter.c **** *
1398:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the ALP filter.
1399:Generated_Source\PSoC6/CapSense_Filter.c **** *
1400:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1401:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1402:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1403:Generated_Source\PSoC6/CapSense_Filter.c **** *
1404:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1405:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1406:Generated_Source\PSoC6/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1407:Generated_Source\PSoC6/CapSense_Filter.c ****                                             uint32 wdType)
1408:Generated_Source\PSoC6/CapSense_Filter.c **** {
1409:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1410:Generated_Source\PSoC6/CapSense_Filter.c **** 
1411:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1412:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1413:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1414:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1415:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1416:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1417:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1418:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1419:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1420:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1421:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1422:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1423:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1424:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1425:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1426:Generated_Source\PSoC6/CapSense_Filter.c **** }
1427:Generated_Source\PSoC6/CapSense_Filter.c **** 
1428:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1430:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC6/CapSense_Filter.c **** *
1432:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Prepares ALP configuration structure and runs the filter.
1433:Generated_Source\PSoC6/CapSense_Filter.c **** *
1434:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Prepares ALP configuration structure and runs the filter.
1435:Generated_Source\PSoC6/CapSense_Filter.c **** *
1436:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1437:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrRamWdgt       The pointer to the RAM widget object.
1438:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1439:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1440:Generated_Source\PSoC6/CapSense_Filter.c **** *
1441:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1442:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1443:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1444:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1445:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1446:Generated_Source\PSoC6/CapSense_Filter.c **** {
1447:Generated_Source\PSoC6/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1448:Generated_Source\PSoC6/CapSense_Filter.c **** 
1449:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 32


1450:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1451:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1452:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1453:Generated_Source\PSoC6/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1454:Generated_Source\PSoC6/CapSense_Filter.c **** 
1455:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1456:Generated_Source\PSoC6/CapSense_Filter.c **** }
1457:Generated_Source\PSoC6/CapSense_Filter.c **** 
1458:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1459:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1460:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1461:Generated_Source\PSoC6/CapSense_Filter.c **** *
1462:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs the ALP filter.
1463:Generated_Source\PSoC6/CapSense_Filter.c **** *
1464:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs the ALP filter.
1465:Generated_Source\PSoC6/CapSense_Filter.c **** *
1466:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1467:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrAlpFilterConfig The pointer to the filter configuration object of the sensor.
1468:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1469:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1470:Generated_Source\PSoC6/CapSense_Filter.c **** *
1471:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1472:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1473:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1474:Generated_Source\PSoC6/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1475:Generated_Source\PSoC6/CapSense_Filter.c ****                                     uint32 wdType)
1476:Generated_Source\PSoC6/CapSense_Filter.c **** {
1477:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 freqChannel;
1478:Generated_Source\PSoC6/CapSense_Filter.c **** 
1479:Generated_Source\PSoC6/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1480:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1481:Generated_Source\PSoC6/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1482:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1483:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1484:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1485:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1486:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1487:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1488:Generated_Source\PSoC6/CapSense_Filter.c ****         else
1489:Generated_Source\PSoC6/CapSense_Filter.c ****         {
1490:Generated_Source\PSoC6/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1491:Generated_Source\PSoC6/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1492:Generated_Source\PSoC6/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1493:Generated_Source\PSoC6/CapSense_Filter.c ****             #endif
1494:Generated_Source\PSoC6/CapSense_Filter.c ****         }
1495:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1496:Generated_Source\PSoC6/CapSense_Filter.c **** }
1497:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1498:Generated_Source\PSoC6/CapSense_Filter.c **** 
1499:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1500:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1501:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1502:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1503:Generated_Source\PSoC6/CapSense_Filter.c **** *
1504:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1505:Generated_Source\PSoC6/CapSense_Filter.c **** *
1506:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 33


1507:Generated_Source\PSoC6/CapSense_Filter.c **** *
1508:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of a widget to update the IIR filter history.*
1509:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of a sensor in the widget to update the IIR
1510:Generated_Source\PSoC6/CapSense_Filter.c **** *           filter history.
1511:Generated_Source\PSoC6/CapSense_Filter.c **** *
1512:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1513:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1514:Generated_Source\PSoC6/CapSense_Filter.c **** {
1515:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1516:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1517:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1518:Generated_Source\PSoC6/CapSense_Filter.c **** 
1519:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1520:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1521:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1522:Generated_Source\PSoC6/CapSense_Filter.c **** 
1523:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1524:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1525:Generated_Source\PSoC6/CapSense_Filter.c **** 
1526:Generated_Source\PSoC6/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1527:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1528:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1529:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1530:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1531:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1532:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1533:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1534:Generated_Source\PSoC6/CapSense_Filter.c ****     else
1535:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1536:Generated_Source\PSoC6/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1537:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1538:Generated_Source\PSoC6/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1539:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1540:Generated_Source\PSoC6/CapSense_Filter.c ****         #endif
1541:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1542:Generated_Source\PSoC6/CapSense_Filter.c **** 
1543:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1544:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1545:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1546:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif
1547:Generated_Source\PSoC6/CapSense_Filter.c **** }
1548:Generated_Source\PSoC6/CapSense_Filter.c **** 
1549:Generated_Source\PSoC6/CapSense_Filter.c **** 
1550:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1551:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1552:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1553:Generated_Source\PSoC6/CapSense_Filter.c **** *
1554:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Runs all enabled filters.
1555:Generated_Source\PSoC6/CapSense_Filter.c **** *
1556:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Runs all enabled filters.
1557:Generated_Source\PSoC6/CapSense_Filter.c **** *
1558:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrFilterHistObj The pointer to the filter RAM object of the sensor.
1559:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    ptrSensorObj     The pointer to the sensor RAM object of the sensor.
1560:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    wdType           Specifies the type of a widget.
1561:Generated_Source\PSoC6/CapSense_Filter.c **** *
1562:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1563:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 34


1564:Generated_Source\PSoC6/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1565:Generated_Source\PSoC6/CapSense_Filter.c **** {
1566:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1567:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1568:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1569:Generated_Source\PSoC6/CapSense_Filter.c **** 
1570:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1571:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1572:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1573:Generated_Source\PSoC6/CapSense_Filter.c **** 
1574:Generated_Source\PSoC6/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1575:Generated_Source\PSoC6/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1576:Generated_Source\PSoC6/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1577:Generated_Source\PSoC6/CapSense_Filter.c **** }
1578:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1579:Generated_Source\PSoC6/CapSense_Filter.c **** 
1580:Generated_Source\PSoC6/CapSense_Filter.c **** 
1581:Generated_Source\PSoC6/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1582:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1583:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
1584:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1585:Generated_Source\PSoC6/CapSense_Filter.c **** *
1586:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Executes the noise envelope  filter algorithm on a sensor indicated by
1587:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1588:Generated_Source\PSoC6/CapSense_Filter.c **** *
1589:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Executes the noise envelope  filter algorithm on a sensor indicated by
1590:Generated_Source\PSoC6/CapSense_Filter.c **** *           an input parameter to measure the pk-to-pk noise in the sensor raw count.
1591:Generated_Source\PSoC6/CapSense_Filter.c **** *
1592:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1593:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1594:Generated_Source\PSoC6/CapSense_Filter.c **** *
1595:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1596:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1597:Generated_Source\PSoC6/CapSense_Filter.c **** {
1598:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1599:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1600:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1601:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1602:Generated_Source\PSoC6/CapSense_Filter.c **** 
1603:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1604:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1605:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1606:Generated_Source\PSoC6/CapSense_Filter.c **** 
1607:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1608:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1609:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1610:Generated_Source\PSoC6/CapSense_Filter.c **** 
1611:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1612:Generated_Source\PSoC6/CapSense_Filter.c **** }
1613:Generated_Source\PSoC6/CapSense_Filter.c **** 
1614:Generated_Source\PSoC6/CapSense_Filter.c **** 
1615:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1616:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1617:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1618:Generated_Source\PSoC6/CapSense_Filter.c **** *
1619:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Initializes the noise-envelope filter
1620:Generated_Source\PSoC6/CapSense_Filter.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 35


1621:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Initializes the noise-envelope filter
1622:Generated_Source\PSoC6/CapSense_Filter.c **** *
1623:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    widgetId Specifies the ID number of the widget.
1624:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    sensorId Specifies the ID number of the sensor in the widget.
1625:Generated_Source\PSoC6/CapSense_Filter.c **** *
1626:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1627:Generated_Source\PSoC6/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1628:Generated_Source\PSoC6/CapSense_Filter.c **** {
1629:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1630:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1631:Generated_Source\PSoC6/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1632:Generated_Source\PSoC6/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1633:Generated_Source\PSoC6/CapSense_Filter.c **** 
1634:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1635:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1636:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1637:Generated_Source\PSoC6/CapSense_Filter.c **** 
1638:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1639:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1640:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1641:Generated_Source\PSoC6/CapSense_Filter.c **** 
1642:Generated_Source\PSoC6/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1643:Generated_Source\PSoC6/CapSense_Filter.c **** }
1644:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1645:Generated_Source\PSoC6/CapSense_Filter.c **** 
1646:Generated_Source\PSoC6/CapSense_Filter.c **** 
1647:Generated_Source\PSoC6/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1648:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1649:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1650:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1651:Generated_Source\PSoC6/CapSense_Filter.c **** *
1652:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the median value from the three passed arguments.
1653:Generated_Source\PSoC6/CapSense_Filter.c **** *
1654:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the median value from the three passed arguments.
1655:Generated_Source\PSoC6/CapSense_Filter.c **** *
1656:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x1 The first value to be compared.
1657:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x2 The second value to be compared.
1658:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    x3 The third value to be compared.
1659:Generated_Source\PSoC6/CapSense_Filter.c **** *
1660:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the median value of input arguments.
1661:Generated_Source\PSoC6/CapSense_Filter.c **** *
1662:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1663:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1664:Generated_Source\PSoC6/CapSense_Filter.c **** {
1665:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 tmp;
1666:Generated_Source\PSoC6/CapSense_Filter.c **** 
1667:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x1 > x2)
1668:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1669:Generated_Source\PSoC6/CapSense_Filter.c ****         tmp = x2;
1670:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x1;
1671:Generated_Source\PSoC6/CapSense_Filter.c ****         x1 = tmp;
1672:Generated_Source\PSoC6/CapSense_Filter.c ****     }
1673:Generated_Source\PSoC6/CapSense_Filter.c **** 
1674:Generated_Source\PSoC6/CapSense_Filter.c ****     if (x2 > x3)
1675:Generated_Source\PSoC6/CapSense_Filter.c ****     {
1676:Generated_Source\PSoC6/CapSense_Filter.c ****         x2 = x3;
1677:Generated_Source\PSoC6/CapSense_Filter.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 36


1678:Generated_Source\PSoC6/CapSense_Filter.c **** 
1679:Generated_Source\PSoC6/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1680:Generated_Source\PSoC6/CapSense_Filter.c **** }
1681:Generated_Source\PSoC6/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1682:Generated_Source\PSoC6/CapSense_Filter.c **** 
1683:Generated_Source\PSoC6/CapSense_Filter.c **** 
1684:Generated_Source\PSoC6/CapSense_Filter.c **** /*******************************************************************************
1685:Generated_Source\PSoC6/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1686:Generated_Source\PSoC6/CapSense_Filter.c **** ****************************************************************************//**
1687:Generated_Source\PSoC6/CapSense_Filter.c **** *
1688:Generated_Source\PSoC6/CapSense_Filter.c **** * \brief    Return the filtered data by the IIR 1-st order algorithm
1689:Generated_Source\PSoC6/CapSense_Filter.c **** *
1690:Generated_Source\PSoC6/CapSense_Filter.c **** * \details  Return the filtered data by the IIR 1-st order algorithm
1691:Generated_Source\PSoC6/CapSense_Filter.c **** *
1692:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    input      The data to be filtered.
1693:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    prevOutput The previous filtered data.
1694:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    n          The IIR filter coefficient (n/256).
1695:Generated_Source\PSoC6/CapSense_Filter.c **** * \param    shift      The parameter is used to shift input data to have free LSB
1696:Generated_Source\PSoC6/CapSense_Filter.c **** *                       bits for a fraction storage of the filter output calculation.
1697:Generated_Source\PSoC6/CapSense_Filter.c **** *
1698:Generated_Source\PSoC6/CapSense_Filter.c **** * \return   Returns the filtered data.
1699:Generated_Source\PSoC6/CapSense_Filter.c **** *
1700:Generated_Source\PSoC6/CapSense_Filter.c **** *******************************************************************************/
1701:Generated_Source\PSoC6/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1702:Generated_Source\PSoC6/CapSense_Filter.c **** {
 295              		.loc 1 1702 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL35:
1703:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 filteredOutput;
1704:Generated_Source\PSoC6/CapSense_Filter.c **** 
1705:Generated_Source\PSoC6/CapSense_Filter.c ****     /*
1706:Generated_Source\PSoC6/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1707:Generated_Source\PSoC6/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1708:Generated_Source\PSoC6/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1709:Generated_Source\PSoC6/CapSense_Filter.c ****     */
1710:Generated_Source\PSoC6/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 301              		.loc 1 1710 0
 302 0000 9840     		lsls	r0, r0, r3
 303              	.LVL36:
 304 0002 5043     		muls	r0, r2
 305 0004 8023     		movs	r3, #128
 306              	.LVL37:
 307 0006 5B00     		lsls	r3, r3, #1
 308 0008 9A1A     		subs	r2, r3, r2
 309              	.LVL38:
 310 000a 5143     		muls	r1, r2
 311              	.LVL39:
 312 000c 4018     		adds	r0, r0, r1
 313 000e 000A     		lsrs	r0, r0, #8
 314              	.LVL40:
1711:Generated_Source\PSoC6/CapSense_Filter.c **** 
1712:Generated_Source\PSoC6/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1713:Generated_Source\PSoC6/CapSense_Filter.c ****     return filteredOutput;
1714:Generated_Source\PSoC6/CapSense_Filter.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 37


 315              		.loc 1 1714 0
 316              		@ sp needed
 317 0010 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE46:
 320              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 321 0012 C046     		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 322              		.align	2
 323              		.global	CapSense_FtUpdateBaseline
 324              		.code	16
 325              		.thumb_func
 326              		.type	CapSense_FtUpdateBaseline, %function
 327              	CapSense_FtUpdateBaseline:
 328              	.LFB40:
 259:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sign;
 329              		.loc 1 259 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL41:
 334 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 335              		.cfi_def_cfa_offset 20
 336              		.cfi_offset 4, -20
 337              		.cfi_offset 5, -16
 338              		.cfi_offset 6, -12
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 4746     		mov	r7, r8
 342 0004 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 8, -24
 345 0006 0700     		movs	r7, r0
 346 0008 0E00     		movs	r6, r1
 347 000a 1500     		movs	r5, r2
 348              	.LVL42:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 349              		.loc 1 271 0
 350 000c 0123     		movs	r3, #1
 351 000e 37E0     		b	.L20
 352              	.LVL43:
 353              	.L26:
 283:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 354              		.loc 1 283 0
 355 0010 6300     		lsls	r3, r4, #1
 356 0012 985B     		ldrh	r0, [r3, r6]
 357 0014 F318     		adds	r3, r6, r3
 358 0016 5988     		ldrh	r1, [r3, #2]
 359 0018 8842     		cmp	r0, r1
 360 001a 06D3     		bcc	.L21
 285:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 1u;
 361              		.loc 1 285 0
 362 001c 431A     		subs	r3, r0, r1
 363 001e 9846     		mov	r8, r3
 364              	.LVL44:
 287:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 365              		.loc 1 287 0
 366 0020 3319     		adds	r3, r6, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 38


 367              	.LVL45:
 368 0022 0022     		movs	r2, #0
 369 0024 1A72     		strb	r2, [r3, #8]
 286:Generated_Source\PSoC6/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 370              		.loc 1 286 0
 371 0026 0123     		movs	r3, #1
 372 0028 02E0     		b	.L22
 373              	.LVL46:
 374              	.L21:
 291:Generated_Source\PSoC6/CapSense_Filter.c ****             sign = 0u;
 375              		.loc 1 291 0
 376 002a 0B1A     		subs	r3, r1, r0
 377 002c 9846     		mov	r8, r3
 378              	.LVL47:
 292:Generated_Source\PSoC6/CapSense_Filter.c ****         }
 379              		.loc 1 292 0
 380 002e 0023     		movs	r3, #0
 381              	.LVL48:
 382              	.L22:
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 383              		.loc 1 296 0
 384 0030 002B     		cmp	r3, #0
 385 0032 11D1     		bne	.L23
 296:Generated_Source\PSoC6/CapSense_Filter.c ****         {
 386              		.loc 1 296 0 is_stmt 0 discriminator 1
 387 0034 7B79     		ldrb	r3, [r7, #5]
 388              	.LVL49:
 389 0036 9845     		cmp	r8, r3
 390 0038 0ED9     		bls	.L23
 298:Generated_Source\PSoC6/CapSense_Filter.c ****             {
 391              		.loc 1 298 0 is_stmt 1
 392 003a 3319     		adds	r3, r6, r4
 393 003c 1B7A     		ldrb	r3, [r3, #8]
 394 003e 3A7A     		ldrb	r2, [r7, #8]
 395 0040 9342     		cmp	r3, r2
 396 0042 05D3     		bcc	.L24
 300:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 397              		.loc 1 300 0
 398 0044 2200     		movs	r2, r4
 399 0046 2900     		movs	r1, r5
 400 0048 3000     		movs	r0, r6
 401 004a FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 402              	.LVL50:
 403 004e 16E0     		b	.L25
 404              	.L24:
 304:Generated_Source\PSoC6/CapSense_Filter.c ****             }
 405              		.loc 1 304 0
 406 0050 3219     		adds	r2, r6, r4
 407 0052 0133     		adds	r3, r3, #1
 408 0054 1372     		strb	r3, [r2, #8]
 409 0056 12E0     		b	.L25
 410              	.L23:
 318:Generated_Source\PSoC6/CapSense_Filter.c ****                 {
 411              		.loc 1 318 0
 412 0058 FF23     		movs	r3, #255
 413 005a 2B40     		ands	r3, r5
 414 005c 062B     		cmp	r3, #6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 39


 415 005e 0ED0     		beq	.L25
 322:Generated_Source\PSoC6/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 416              		.loc 1 322 0
 417 0060 0902     		lsls	r1, r1, #8
 418              	.LVL51:
 323:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 419              		.loc 1 323 0
 420 0062 3319     		adds	r3, r6, r4
 421 0064 9846     		mov	r8, r3
 422              	.LVL52:
 423 0066 1B79     		ldrb	r3, [r3, #4]
 424 0068 1943     		orrs	r1, r3
 425              	.LVL53:
 334:Generated_Source\PSoC6/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 426              		.loc 1 334 0
 427 006a 0823     		movs	r3, #8
 428 006c 0122     		movs	r2, #1
 429 006e FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 430              	.LVL54:
 340:Generated_Source\PSoC6/CapSense_Filter.c ****                                     ptrSensor->bslnExt[freqChannel] = CY_LO8(history);
 431              		.loc 1 340 0
 432 0072 020A     		lsrs	r2, r0, #8
 433 0074 6300     		lsls	r3, r4, #1
 434 0076 F318     		adds	r3, r6, r3
 435 0078 5A80     		strh	r2, [r3, #2]
 341:Generated_Source\PSoC6/CapSense_Filter.c ****                         #else
 436              		.loc 1 341 0
 437 007a 4346     		mov	r3, r8
 438 007c 1871     		strb	r0, [r3, #4]
 439              	.LVL55:
 440              	.L25:
 441 007e 2300     		movs	r3, r4
 442              	.LVL56:
 443              	.L20:
 271:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 444              		.loc 1 271 0 discriminator 1
 445 0080 5C1E     		subs	r4, r3, #1
 446              	.LVL57:
 447 0082 002B     		cmp	r3, #0
 448 0084 C4D1     		bne	.L26
 398:Generated_Source\PSoC6/CapSense_Filter.c **** 
 449              		.loc 1 398 0
 450 0086 0020     		movs	r0, #0
 451              		@ sp needed
 452              	.LVL58:
 453              	.LVL59:
 454              	.LVL60:
 455              	.LVL61:
 456 0088 04BC     		pop	{r2}
 457 008a 9046     		mov	r8, r2
 458 008c F0BD     		pop	{r4, r5, r6, r7, pc}
 459              		.cfi_endproc
 460              	.LFE40:
 461              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 462 008e C046     		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 463              		.align	2
 464              		.global	CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 40


 465              		.code	16
 466              		.thumb_func
 467              		.type	CapSense_UpdateSensorBaseline, %function
 468              	CapSense_UpdateSensorBaseline:
 469              	.LFB39:
 201:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 result = CY_RET_SUCCESS;
 470              		.loc 1 201 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL62:
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 6, -8
 480              		.cfi_offset 14, -4
 481              	.LVL63:
 206:Generated_Source\PSoC6/CapSense_Filter.c **** 
 482              		.loc 1 206 0
 483 0002 094D     		ldr	r5, .L28
 484 0004 C300     		lsls	r3, r0, #3
 485 0006 1C1A     		subs	r4, r3, r0
 486 0008 A200     		lsls	r2, r4, #2
 487 000a AA18     		adds	r2, r5, r2
 488 000c 5468     		ldr	r4, [r2, #4]
 489              	.LVL64:
 209:Generated_Source\PSoC6/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 490              		.loc 1 209 0
 491 000e 9668     		ldr	r6, [r2, #8]
 492              	.LVL65:
 210:Generated_Source\PSoC6/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 493              		.loc 1 210 0
 494 0010 8A00     		lsls	r2, r1, #2
 495 0012 5218     		adds	r2, r2, r1
 496 0014 5100     		lsls	r1, r2, #1
 497              	.LVL66:
 498 0016 7118     		adds	r1, r6, r1
 499              	.LVL67:
 211:Generated_Source\PSoC6/CapSense_Filter.c **** 
 500              		.loc 1 211 0
 501 0018 1B1A     		subs	r3, r3, r0
 502 001a 9A00     		lsls	r2, r3, #2
 503 001c AA18     		adds	r2, r5, r2
 504 001e 927E     		ldrb	r2, [r2, #26]
 505 0020 2000     		movs	r0, r4
 506              	.LVL68:
 507 0022 FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 508              	.LVL69:
 222:Generated_Source\PSoC6/CapSense_Filter.c **** 
 509              		.loc 1 222 0
 510              		@ sp needed
 511              	.LVL70:
 512              	.LVL71:
 513              	.LVL72:
 514 0026 70BD     		pop	{r4, r5, r6, pc}
 515              	.L29:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 41


 516              		.align	2
 517              	.L28:
 518 0028 00000000 		.word	CapSense_dsFlash
 519              		.cfi_endproc
 520              	.LFE39:
 521              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 522              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 523              		.align	2
 524              		.global	CapSense_UpdateWidgetBaseline
 525              		.code	16
 526              		.thumb_func
 527              		.type	CapSense_UpdateWidgetBaseline, %function
 528              	CapSense_UpdateWidgetBaseline:
 529              	.LFB38:
 144:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 sensorId;
 530              		.loc 1 144 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              	.LVL73:
 535 0000 70B5     		push	{r4, r5, r6, lr}
 536              		.cfi_def_cfa_offset 16
 537              		.cfi_offset 4, -16
 538              		.cfi_offset 5, -12
 539              		.cfi_offset 6, -8
 540              		.cfi_offset 14, -4
 541 0002 0600     		movs	r6, r0
 542              	.LVL74:
 152:Generated_Source\PSoC6/CapSense_Filter.c **** 
 543              		.loc 1 152 0
 544 0004 C200     		lsls	r2, r0, #3
 545 0006 121A     		subs	r2, r2, r0
 546 0008 9300     		lsls	r3, r2, #2
 547 000a 084A     		ldr	r2, .L33
 548 000c D318     		adds	r3, r2, r3
 549 000e 1B8B     		ldrh	r3, [r3, #24]
 550              	.LVL75:
 149:Generated_Source\PSoC6/CapSense_Filter.c **** 
 551              		.loc 1 149 0
 552 0010 0025     		movs	r5, #0
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 553              		.loc 1 154 0
 554 0012 05E0     		b	.L31
 555              	.LVL76:
 556              	.L32:
 156:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 557              		.loc 1 156 0
 558 0014 2100     		movs	r1, r4
 559 0016 3000     		movs	r0, r6
 560 0018 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 561              	.LVL77:
 562 001c 0543     		orrs	r5, r0
 563              	.LVL78:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 564              		.loc 1 154 0
 565 001e 2300     		movs	r3, r4
 566              	.LVL79:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 42


 567              	.L31:
 154:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 568              		.loc 1 154 0 is_stmt 0 discriminator 1
 569 0020 5C1E     		subs	r4, r3, #1
 570              	.LVL80:
 571 0022 002B     		cmp	r3, #0
 572 0024 F6D1     		bne	.L32
 160:Generated_Source\PSoC6/CapSense_Filter.c **** 
 573              		.loc 1 160 0 is_stmt 1
 574 0026 2800     		movs	r0, r5
 575              		@ sp needed
 576              	.LVL81:
 577              	.LVL82:
 578              	.LVL83:
 579 0028 70BD     		pop	{r4, r5, r6, pc}
 580              	.L34:
 581 002a C046     		.align	2
 582              	.L33:
 583 002c 00000000 		.word	CapSense_dsFlash
 584              		.cfi_endproc
 585              	.LFE38:
 586              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 587              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 588              		.align	2
 589              		.global	CapSense_UpdateAllBaselines
 590              		.code	16
 591              		.thumb_func
 592              		.type	CapSense_UpdateAllBaselines, %function
 593              	CapSense_UpdateAllBaselines:
 594              	.LFB37:
  99:Generated_Source\PSoC6/CapSense_Filter.c ****     uint32 widgetId;
 595              		.loc 1 99 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599 0000 70B5     		push	{r4, r5, r6, lr}
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 6, -8
 604              		.cfi_offset 14, -4
 605              	.LVL84:
 101:Generated_Source\PSoC6/CapSense_Filter.c **** 
 606              		.loc 1 101 0
 607 0002 0025     		movs	r5, #0
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 608              		.loc 1 103 0
 609 0004 0A23     		movs	r3, #10
 610 0006 04E0     		b	.L36
 611              	.LVL85:
 612              	.L37:
 105:Generated_Source\PSoC6/CapSense_Filter.c ****     }
 613              		.loc 1 105 0
 614 0008 2000     		movs	r0, r4
 615 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 616              	.LVL86:
 617 000e 0543     		orrs	r5, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 43


 618              	.LVL87:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 619              		.loc 1 103 0
 620 0010 2300     		movs	r3, r4
 621              	.LVL88:
 622              	.L36:
 103:Generated_Source\PSoC6/CapSense_Filter.c ****     {
 623              		.loc 1 103 0 is_stmt 0 discriminator 1
 624 0012 5C1E     		subs	r4, r3, #1
 625              	.LVL89:
 626 0014 002B     		cmp	r3, #0
 627 0016 F7D1     		bne	.L37
 109:Generated_Source\PSoC6/CapSense_Filter.c **** 
 628              		.loc 1 109 0 is_stmt 1
 629 0018 2800     		movs	r0, r5
 630              		@ sp needed
 631              	.LVL90:
 632              	.LVL91:
 633 001a 70BD     		pop	{r4, r5, r6, pc}
 634              		.cfi_endproc
 635              	.LFE37:
 636              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 637              		.text
 638              	.Letext0:
 639              		.file 2 "d:\\cypress creator\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-e
 640              		.file 3 "d:\\cypress creator\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-e
 641              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 642              		.file 5 "Generated_Source\\PSoC6\\CapSense_Configuration.h"
 643              		.file 6 "Generated_Source\\PSoC6\\CapSense_Structure.h"
 644              		.section	.debug_info,"",%progbits
 645              	.Ldebug_info0:
 646 0000 E6070000 		.4byte	0x7e6
 647 0004 0400     		.2byte	0x4
 648 0006 00000000 		.4byte	.Ldebug_abbrev0
 649 000a 04       		.byte	0x4
 650 000b 01       		.uleb128 0x1
 651 000c E0000000 		.4byte	.LASF90
 652 0010 0C       		.byte	0xc
 653 0011 B5020000 		.4byte	.LASF91
 654 0015 C7030000 		.4byte	.LASF92
 655 0019 00000000 		.4byte	.Ldebug_ranges0+0
 656 001d 00000000 		.4byte	0
 657 0021 00000000 		.4byte	.Ldebug_line0
 658 0025 02       		.uleb128 0x2
 659 0026 04       		.byte	0x4
 660 0027 05       		.byte	0x5
 661 0028 696E7400 		.ascii	"int\000"
 662 002c 03       		.uleb128 0x3
 663 002d 04       		.byte	0x4
 664 002e 07       		.byte	0x7
 665 002f 05040000 		.4byte	.LASF0
 666 0033 03       		.uleb128 0x3
 667 0034 08       		.byte	0x8
 668 0035 05       		.byte	0x5
 669 0036 8A020000 		.4byte	.LASF1
 670 003a 03       		.uleb128 0x3
 671 003b 08       		.byte	0x8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 44


 672 003c 04       		.byte	0x4
 673 003d 60030000 		.4byte	.LASF2
 674 0041 03       		.uleb128 0x3
 675 0042 01       		.byte	0x1
 676 0043 06       		.byte	0x6
 677 0044 8E030000 		.4byte	.LASF3
 678 0048 04       		.uleb128 0x4
 679 0049 0D030000 		.4byte	.LASF6
 680 004d 02       		.byte	0x2
 681 004e 1D       		.byte	0x1d
 682 004f 53000000 		.4byte	0x53
 683 0053 03       		.uleb128 0x3
 684 0054 01       		.byte	0x1
 685 0055 08       		.byte	0x8
 686 0056 6C030000 		.4byte	.LASF4
 687 005a 03       		.uleb128 0x3
 688 005b 02       		.byte	0x2
 689 005c 05       		.byte	0x5
 690 005d 95000000 		.4byte	.LASF5
 691 0061 04       		.uleb128 0x4
 692 0062 B1010000 		.4byte	.LASF7
 693 0066 02       		.byte	0x2
 694 0067 2B       		.byte	0x2b
 695 0068 6C000000 		.4byte	0x6c
 696 006c 03       		.uleb128 0x3
 697 006d 02       		.byte	0x2
 698 006e 07       		.byte	0x7
 699 006f 79040000 		.4byte	.LASF8
 700 0073 03       		.uleb128 0x3
 701 0074 04       		.byte	0x4
 702 0075 05       		.byte	0x5
 703 0076 9D020000 		.4byte	.LASF9
 704 007a 04       		.uleb128 0x4
 705 007b 91010000 		.4byte	.LASF10
 706 007f 02       		.byte	0x2
 707 0080 41       		.byte	0x41
 708 0081 85000000 		.4byte	0x85
 709 0085 03       		.uleb128 0x3
 710 0086 04       		.byte	0x4
 711 0087 07       		.byte	0x7
 712 0088 5D050000 		.4byte	.LASF11
 713 008c 03       		.uleb128 0x3
 714 008d 08       		.byte	0x8
 715 008e 07       		.byte	0x7
 716 008f 9A030000 		.4byte	.LASF12
 717 0093 04       		.uleb128 0x4
 718 0094 0E020000 		.4byte	.LASF13
 719 0098 03       		.byte	0x3
 720 0099 18       		.byte	0x18
 721 009a 48000000 		.4byte	0x48
 722 009e 04       		.uleb128 0x4
 723 009f 12040000 		.4byte	.LASF14
 724 00a3 03       		.byte	0x3
 725 00a4 24       		.byte	0x24
 726 00a5 61000000 		.4byte	0x61
 727 00a9 04       		.uleb128 0x4
 728 00aa B1030000 		.4byte	.LASF15
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 45


 729 00ae 03       		.byte	0x3
 730 00af 30       		.byte	0x30
 731 00b0 7A000000 		.4byte	0x7a
 732 00b4 03       		.uleb128 0x3
 733 00b5 04       		.byte	0x4
 734 00b6 07       		.byte	0x7
 735 00b7 DE020000 		.4byte	.LASF16
 736 00bb 03       		.uleb128 0x3
 737 00bc 01       		.byte	0x1
 738 00bd 08       		.byte	0x8
 739 00be 98020000 		.4byte	.LASF17
 740 00c2 03       		.uleb128 0x3
 741 00c3 04       		.byte	0x4
 742 00c4 04       		.byte	0x4
 743 00c5 84020000 		.4byte	.LASF18
 744 00c9 03       		.uleb128 0x3
 745 00ca 08       		.byte	0x8
 746 00cb 04       		.byte	0x4
 747 00cc 74050000 		.4byte	.LASF19
 748 00d0 05       		.uleb128 0x5
 749 00d1 84030000 		.4byte	.LASF20
 750 00d5 04       		.byte	0x4
 751 00d6 8203     		.2byte	0x382
 752 00d8 A9000000 		.4byte	0xa9
 753 00dc 05       		.uleb128 0x5
 754 00dd 16020000 		.4byte	.LASF21
 755 00e1 04       		.byte	0x4
 756 00e2 8503     		.2byte	0x385
 757 00e4 93000000 		.4byte	0x93
 758 00e8 05       		.uleb128 0x5
 759 00e9 D9010000 		.4byte	.LASF22
 760 00ed 04       		.byte	0x4
 761 00ee 8603     		.2byte	0x386
 762 00f0 9E000000 		.4byte	0x9e
 763 00f4 05       		.uleb128 0x5
 764 00f5 56050000 		.4byte	.LASF23
 765 00f9 04       		.byte	0x4
 766 00fa 8703     		.2byte	0x387
 767 00fc A9000000 		.4byte	0xa9
 768 0100 04       		.uleb128 0x4
 769 0101 E7020000 		.4byte	.LASF24
 770 0105 05       		.byte	0x5
 771 0106 FC       		.byte	0xfc
 772 0107 E8000000 		.4byte	0xe8
 773 010b 05       		.uleb128 0x5
 774 010c 16000000 		.4byte	.LASF25
 775 0110 05       		.byte	0x5
 776 0111 0001     		.2byte	0x100
 777 0113 DC000000 		.4byte	0xdc
 778 0117 06       		.uleb128 0x6
 779 0118 01       		.byte	0x1
 780 0119 53000000 		.4byte	0x53
 781 011d 06       		.byte	0x6
 782 011e 61       		.byte	0x61
 783 011f 48010000 		.4byte	0x148
 784 0123 07       		.uleb128 0x7
 785 0124 BC010000 		.4byte	.LASF26
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 46


 786 0128 01       		.byte	0x1
 787 0129 07       		.uleb128 0x7
 788 012a 5D040000 		.4byte	.LASF27
 789 012e 02       		.byte	0x2
 790 012f 07       		.uleb128 0x7
 791 0130 31050000 		.4byte	.LASF28
 792 0134 03       		.byte	0x3
 793 0135 07       		.uleb128 0x7
 794 0136 A4050000 		.4byte	.LASF29
 795 013a 04       		.byte	0x4
 796 013b 07       		.uleb128 0x7
 797 013c A5000000 		.4byte	.LASF30
 798 0140 05       		.byte	0x5
 799 0141 07       		.uleb128 0x7
 800 0142 6C020000 		.4byte	.LASF31
 801 0146 06       		.byte	0x6
 802 0147 00       		.byte	0
 803 0148 04       		.uleb128 0x4
 804 0149 83050000 		.4byte	.LASF32
 805 014d 06       		.byte	0x6
 806 014e 68       		.byte	0x68
 807 014f 17010000 		.4byte	0x117
 808 0153 08       		.uleb128 0x8
 809 0154 0E       		.byte	0xe
 810 0155 06       		.byte	0x6
 811 0156 8C       		.byte	0x8c
 812 0157 D4010000 		.4byte	0x1d4
 813 015b 09       		.uleb128 0x9
 814 015c DC040000 		.4byte	.LASF33
 815 0160 06       		.byte	0x6
 816 0161 92       		.byte	0x92
 817 0162 E8000000 		.4byte	0xe8
 818 0166 00       		.byte	0
 819 0167 09       		.uleb128 0x9
 820 0168 22030000 		.4byte	.LASF34
 821 016c 06       		.byte	0x6
 822 016d 97       		.byte	0x97
 823 016e 00010000 		.4byte	0x100
 824 0172 02       		.byte	0x2
 825 0173 09       		.uleb128 0x9
 826 0174 D1010000 		.4byte	.LASF35
 827 0178 06       		.byte	0x6
 828 0179 9C       		.byte	0x9c
 829 017a DC000000 		.4byte	0xdc
 830 017e 04       		.byte	0x4
 831 017f 09       		.uleb128 0x9
 832 0180 72010000 		.4byte	.LASF36
 833 0184 06       		.byte	0x6
 834 0185 A1       		.byte	0xa1
 835 0186 DC000000 		.4byte	0xdc
 836 018a 05       		.byte	0x5
 837 018b 09       		.uleb128 0x9
 838 018c 55030000 		.4byte	.LASF37
 839 0190 06       		.byte	0x6
 840 0191 A6       		.byte	0xa6
 841 0192 DC000000 		.4byte	0xdc
 842 0196 06       		.byte	0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 47


 843 0197 09       		.uleb128 0x9
 844 0198 17030000 		.4byte	.LASF38
 845 019c 06       		.byte	0x6
 846 019d AB       		.byte	0xab
 847 019e DC000000 		.4byte	0xdc
 848 01a2 07       		.byte	0x7
 849 01a3 09       		.uleb128 0x9
 850 01a4 51000000 		.4byte	.LASF39
 851 01a8 06       		.byte	0x6
 852 01a9 B2       		.byte	0xb2
 853 01aa 0B010000 		.4byte	0x10b
 854 01ae 08       		.byte	0x8
 855 01af 09       		.uleb128 0x9
 856 01b0 8D000000 		.4byte	.LASF40
 857 01b4 06       		.byte	0x6
 858 01b5 BA       		.byte	0xba
 859 01b6 D4010000 		.4byte	0x1d4
 860 01ba 09       		.byte	0x9
 861 01bb 09       		.uleb128 0x9
 862 01bc 29020000 		.4byte	.LASF41
 863 01c0 06       		.byte	0x6
 864 01c1 C3       		.byte	0xc3
 865 01c2 E8000000 		.4byte	0xe8
 866 01c6 0A       		.byte	0xa
 867 01c7 09       		.uleb128 0x9
 868 01c8 A4010000 		.4byte	.LASF42
 869 01cc 06       		.byte	0x6
 870 01cd C8       		.byte	0xc8
 871 01ce DC000000 		.4byte	0xdc
 872 01d2 0C       		.byte	0xc
 873 01d3 00       		.byte	0
 874 01d4 0A       		.uleb128 0xa
 875 01d5 DC000000 		.4byte	0xdc
 876 01d9 E4010000 		.4byte	0x1e4
 877 01dd 0B       		.uleb128 0xb
 878 01de B4000000 		.4byte	0xb4
 879 01e2 00       		.byte	0
 880 01e3 00       		.byte	0
 881 01e4 04       		.uleb128 0x4
 882 01e5 18060000 		.4byte	.LASF43
 883 01e9 06       		.byte	0x6
 884 01ea C9       		.byte	0xc9
 885 01eb 53010000 		.4byte	0x153
 886 01ef 0C       		.uleb128 0xc
 887 01f0 0A       		.byte	0xa
 888 01f1 06       		.byte	0x6
 889 01f2 4A01     		.2byte	0x14a
 890 01f4 3A020000 		.4byte	0x23a
 891 01f8 0D       		.uleb128 0xd
 892 01f9 72617700 		.ascii	"raw\000"
 893 01fd 06       		.byte	0x6
 894 01fe 4F01     		.2byte	0x14f
 895 0200 3A020000 		.4byte	0x23a
 896 0204 00       		.byte	0
 897 0205 0E       		.uleb128 0xe
 898 0206 38000000 		.4byte	.LASF44
 899 020a 06       		.byte	0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 48


 900 020b 5401     		.2byte	0x154
 901 020d 3A020000 		.4byte	0x23a
 902 0211 02       		.byte	0x2
 903 0212 0E       		.uleb128 0xe
 904 0213 7B050000 		.4byte	.LASF45
 905 0217 06       		.byte	0x6
 906 0218 5A01     		.2byte	0x15a
 907 021a D4010000 		.4byte	0x1d4
 908 021e 04       		.byte	0x4
 909 021f 0E       		.uleb128 0xe
 910 0220 5C000000 		.4byte	.LASF46
 911 0224 06       		.byte	0x6
 912 0225 5F01     		.2byte	0x15f
 913 0227 00010000 		.4byte	0x100
 914 022b 06       		.byte	0x6
 915 022c 0E       		.uleb128 0xe
 916 022d FF020000 		.4byte	.LASF47
 917 0231 06       		.byte	0x6
 918 0232 6401     		.2byte	0x164
 919 0234 4A020000 		.4byte	0x24a
 920 0238 08       		.byte	0x8
 921 0239 00       		.byte	0
 922 023a 0A       		.uleb128 0xa
 923 023b E8000000 		.4byte	0xe8
 924 023f 4A020000 		.4byte	0x24a
 925 0243 0B       		.uleb128 0xb
 926 0244 B4000000 		.4byte	0xb4
 927 0248 00       		.byte	0
 928 0249 00       		.byte	0
 929 024a 0A       		.uleb128 0xa
 930 024b 0B010000 		.4byte	0x10b
 931 024f 5A020000 		.4byte	0x25a
 932 0253 0B       		.uleb128 0xb
 933 0254 B4000000 		.4byte	0xb4
 934 0258 00       		.byte	0
 935 0259 00       		.byte	0
 936 025a 05       		.uleb128 0x5
 937 025b 27040000 		.4byte	.LASF48
 938 025f 06       		.byte	0x6
 939 0260 6501     		.2byte	0x165
 940 0262 EF010000 		.4byte	0x1ef
 941 0266 0C       		.uleb128 0xc
 942 0267 1C       		.byte	0x1c
 943 0268 06       		.byte	0x6
 944 0269 4B02     		.2byte	0x24b
 945 026b E5020000 		.4byte	0x2e5
 946 026f 0E       		.uleb128 0xe
 947 0270 34060000 		.4byte	.LASF49
 948 0274 06       		.byte	0x6
 949 0275 5402     		.2byte	0x254
 950 0277 E5020000 		.4byte	0x2e5
 951 027b 00       		.byte	0
 952 027c 0E       		.uleb128 0xe
 953 027d 17050000 		.4byte	.LASF50
 954 0281 06       		.byte	0x6
 955 0282 5B02     		.2byte	0x25b
 956 0284 EC020000 		.4byte	0x2ec
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 49


 957 0288 04       		.byte	0x4
 958 0289 0E       		.uleb128 0xe
 959 028a C0050000 		.4byte	.LASF51
 960 028e 06       		.byte	0x6
 961 028f 6102     		.2byte	0x261
 962 0291 EE020000 		.4byte	0x2ee
 963 0295 08       		.byte	0x8
 964 0296 0E       		.uleb128 0xe
 965 0297 ED050000 		.4byte	.LASF52
 966 029b 06       		.byte	0x6
 967 029c 6602     		.2byte	0x266
 968 029e EC020000 		.4byte	0x2ec
 969 02a2 0C       		.byte	0xc
 970 02a3 0E       		.uleb128 0xe
 971 02a4 FE010000 		.4byte	.LASF53
 972 02a8 06       		.byte	0x6
 973 02a9 6D02     		.2byte	0x26d
 974 02ab F4020000 		.4byte	0x2f4
 975 02af 10       		.byte	0x10
 976 02b0 0E       		.uleb128 0xe
 977 02b1 BA030000 		.4byte	.LASF54
 978 02b5 06       		.byte	0x6
 979 02b6 7202     		.2byte	0x272
 980 02b8 F4000000 		.4byte	0xf4
 981 02bc 14       		.byte	0x14
 982 02bd 0E       		.uleb128 0xe
 983 02be 61000000 		.4byte	.LASF55
 984 02c2 06       		.byte	0x6
 985 02c3 7902     		.2byte	0x279
 986 02c5 E8000000 		.4byte	0xe8
 987 02c9 18       		.byte	0x18
 988 02ca 0E       		.uleb128 0xe
 989 02cb AC020000 		.4byte	.LASF56
 990 02cf 06       		.byte	0x6
 991 02d0 8402     		.2byte	0x284
 992 02d2 DC000000 		.4byte	0xdc
 993 02d6 1A       		.byte	0x1a
 994 02d7 0E       		.uleb128 0xe
 995 02d8 2B030000 		.4byte	.LASF57
 996 02dc 06       		.byte	0x6
 997 02dd 8C02     		.2byte	0x28c
 998 02df DC000000 		.4byte	0xdc
 999 02e3 1B       		.byte	0x1b
 1000 02e4 00       		.byte	0
 1001 02e5 0F       		.uleb128 0xf
 1002 02e6 04       		.byte	0x4
 1003 02e7 EB020000 		.4byte	0x2eb
 1004 02eb 10       		.uleb128 0x10
 1005 02ec 11       		.uleb128 0x11
 1006 02ed 04       		.byte	0x4
 1007 02ee 0F       		.uleb128 0xf
 1008 02ef 04       		.byte	0x4
 1009 02f0 5A020000 		.4byte	0x25a
 1010 02f4 0F       		.uleb128 0xf
 1011 02f5 04       		.byte	0x4
 1012 02f6 DC000000 		.4byte	0xdc
 1013 02fa 05       		.uleb128 0x5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 50


 1014 02fb BC000000 		.4byte	.LASF58
 1015 02ff 06       		.byte	0x6
 1016 0300 8D02     		.2byte	0x28d
 1017 0302 66020000 		.4byte	0x266
 1018 0306 12       		.uleb128 0x12
 1019 0307 1801     		.2byte	0x118
 1020 0309 06       		.byte	0x6
 1021 030a 9302     		.2byte	0x293
 1022 030c 1E030000 		.4byte	0x31e
 1023 0310 0E       		.uleb128 0xe
 1024 0311 FD050000 		.4byte	.LASF59
 1025 0315 06       		.byte	0x6
 1026 0316 9802     		.2byte	0x298
 1027 0318 1E030000 		.4byte	0x31e
 1028 031c 00       		.byte	0
 1029 031d 00       		.byte	0
 1030 031e 0A       		.uleb128 0xa
 1031 031f FA020000 		.4byte	0x2fa
 1032 0323 2E030000 		.4byte	0x32e
 1033 0327 0B       		.uleb128 0xb
 1034 0328 B4000000 		.4byte	0xb4
 1035 032c 09       		.byte	0x9
 1036 032d 00       		.byte	0
 1037 032e 05       		.uleb128 0x5
 1038 032f 00000000 		.4byte	.LASF60
 1039 0333 06       		.byte	0x6
 1040 0334 9902     		.2byte	0x299
 1041 0336 06030000 		.4byte	0x306
 1042 033a 13       		.uleb128 0x13
 1043 033b A8040000 		.4byte	.LASF93
 1044 033f 01       		.byte	0x1
 1045 0340 3F       		.byte	0x3f
 1046 0341 00000000 		.4byte	.LFB36
 1047 0345 02000000 		.4byte	.LFE36-.LFB36
 1048 0349 01       		.uleb128 0x1
 1049 034a 9C       		.byte	0x9c
 1050 034b 14       		.uleb128 0x14
 1051 034c 30020000 		.4byte	.LASF64
 1052 0350 01       		.byte	0x1
 1053 0351 2A02     		.2byte	0x22a
 1054 0353 00000000 		.4byte	.LFB45
 1055 0357 1E000000 		.4byte	.LFE45-.LFB45
 1056 035b 01       		.uleb128 0x1
 1057 035c 9C       		.byte	0x9c
 1058 035d 90030000 		.4byte	0x390
 1059 0361 15       		.uleb128 0x15
 1060 0362 41060000 		.4byte	.LASF61
 1061 0366 01       		.byte	0x1
 1062 0367 2A02     		.2byte	0x22a
 1063 0369 EE020000 		.4byte	0x2ee
 1064 036d 01       		.uleb128 0x1
 1065 036e 50       		.byte	0x50
 1066 036f 16       		.uleb128 0x16
 1067 0370 7B010000 		.4byte	.LASF62
 1068 0374 01       		.byte	0x1
 1069 0375 2A02     		.2byte	0x22a
 1070 0377 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 51


 1071 037b 00000000 		.4byte	.LLST0
 1072 037f 16       		.uleb128 0x16
 1073 0380 E7040000 		.4byte	.LASF63
 1074 0384 01       		.byte	0x1
 1075 0385 2A02     		.2byte	0x22a
 1076 0387 F4000000 		.4byte	0xf4
 1077 038b 21000000 		.4byte	.LLST1
 1078 038f 00       		.byte	0
 1079 0390 14       		.uleb128 0x14
 1080 0391 BE040000 		.4byte	.LASF65
 1081 0395 01       		.byte	0x1
 1082 0396 0F02     		.2byte	0x20f
 1083 0398 00000000 		.4byte	.LFB44
 1084 039c 1E000000 		.4byte	.LFE44-.LFB44
 1085 03a0 01       		.uleb128 0x1
 1086 03a1 9C       		.byte	0x9c
 1087 03a2 F3030000 		.4byte	0x3f3
 1088 03a6 16       		.uleb128 0x16
 1089 03a7 41060000 		.4byte	.LASF61
 1090 03ab 01       		.byte	0x1
 1091 03ac 0F02     		.2byte	0x20f
 1092 03ae EE020000 		.4byte	0x2ee
 1093 03b2 42000000 		.4byte	.LLST2
 1094 03b6 16       		.uleb128 0x16
 1095 03b7 7B010000 		.4byte	.LASF62
 1096 03bb 01       		.byte	0x1
 1097 03bc 0F02     		.2byte	0x20f
 1098 03be F4000000 		.4byte	0xf4
 1099 03c2 6E000000 		.4byte	.LLST3
 1100 03c6 17       		.uleb128 0x17
 1101 03c7 1B040000 		.4byte	.LASF69
 1102 03cb 01       		.byte	0x1
 1103 03cc 1102     		.2byte	0x211
 1104 03ce F4000000 		.4byte	0xf4
 1105 03d2 9A000000 		.4byte	.LLST4
 1106 03d6 18       		.uleb128 0x18
 1107 03d7 14000000 		.4byte	.LVL6
 1108 03db 4B030000 		.4byte	0x34b
 1109 03df 19       		.uleb128 0x19
 1110 03e0 01       		.uleb128 0x1
 1111 03e1 50       		.byte	0x50
 1112 03e2 02       		.uleb128 0x2
 1113 03e3 76       		.byte	0x76
 1114 03e4 00       		.sleb128 0
 1115 03e5 19       		.uleb128 0x19
 1116 03e6 01       		.uleb128 0x1
 1117 03e7 51       		.byte	0x51
 1118 03e8 02       		.uleb128 0x2
 1119 03e9 75       		.byte	0x75
 1120 03ea 00       		.sleb128 0
 1121 03eb 19       		.uleb128 0x19
 1122 03ec 01       		.uleb128 0x1
 1123 03ed 52       		.byte	0x52
 1124 03ee 02       		.uleb128 0x2
 1125 03ef 74       		.byte	0x74
 1126 03f0 00       		.sleb128 0
 1127 03f1 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 52


 1128 03f2 00       		.byte	0
 1129 03f3 14       		.uleb128 0x14
 1130 03f4 33030000 		.4byte	.LASF66
 1131 03f8 01       		.byte	0x1
 1132 03f9 F301     		.2byte	0x1f3
 1133 03fb 00000000 		.4byte	.LFB43
 1134 03ff 2C000000 		.4byte	.LFE43-.LFB43
 1135 0403 01       		.uleb128 0x1
 1136 0404 9C       		.byte	0x9c
 1137 0405 7B040000 		.4byte	0x47b
 1138 0409 16       		.uleb128 0x16
 1139 040a 4D050000 		.4byte	.LASF67
 1140 040e 01       		.byte	0x1
 1141 040f F301     		.2byte	0x1f3
 1142 0411 F4000000 		.4byte	0xf4
 1143 0415 DC000000 		.4byte	.LLST5
 1144 0419 16       		.uleb128 0x16
 1145 041a 3D000000 		.4byte	.LASF68
 1146 041e 01       		.byte	0x1
 1147 041f F301     		.2byte	0x1f3
 1148 0421 F4000000 		.4byte	0xf4
 1149 0425 FD000000 		.4byte	.LLST6
 1150 0429 17       		.uleb128 0x17
 1151 042a 41060000 		.4byte	.LASF61
 1152 042e 01       		.byte	0x1
 1153 042f F501     		.2byte	0x1f5
 1154 0431 EE020000 		.4byte	0x2ee
 1155 0435 1E010000 		.4byte	.LLST7
 1156 0439 1A       		.uleb128 0x1a
 1157 043a 7A030000 		.4byte	.LASF72
 1158 043e 01       		.byte	0x1
 1159 043f F601     		.2byte	0x1f6
 1160 0441 7B040000 		.4byte	0x47b
 1161 0445 18       		.uleb128 0x18
 1162 0446 24000000 		.4byte	.LVL18
 1163 044a 90030000 		.4byte	0x390
 1164 044e 19       		.uleb128 0x19
 1165 044f 01       		.uleb128 0x1
 1166 0450 50       		.byte	0x50
 1167 0451 0E       		.uleb128 0xe
 1168 0452 F3       		.byte	0xf3
 1169 0453 01       		.uleb128 0x1
 1170 0454 51       		.byte	0x51
 1171 0455 32       		.byte	0x32
 1172 0456 24       		.byte	0x24
 1173 0457 F3       		.byte	0xf3
 1174 0458 01       		.uleb128 0x1
 1175 0459 51       		.byte	0x51
 1176 045a 22       		.byte	0x22
 1177 045b 31       		.byte	0x31
 1178 045c 24       		.byte	0x24
 1179 045d 75       		.byte	0x75
 1180 045e 00       		.sleb128 0
 1181 045f 22       		.byte	0x22
 1182 0460 19       		.uleb128 0x19
 1183 0461 01       		.uleb128 0x1
 1184 0462 51       		.byte	0x51
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 53


 1185 0463 15       		.uleb128 0x15
 1186 0464 F3       		.byte	0xf3
 1187 0465 01       		.uleb128 0x1
 1188 0466 50       		.byte	0x50
 1189 0467 33       		.byte	0x33
 1190 0468 24       		.byte	0x24
 1191 0469 F3       		.byte	0xf3
 1192 046a 01       		.uleb128 0x1
 1193 046b 50       		.byte	0x50
 1194 046c 1C       		.byte	0x1c
 1195 046d 32       		.byte	0x32
 1196 046e 24       		.byte	0x24
 1197 046f 74       		.byte	0x74
 1198 0470 00       		.sleb128 0
 1199 0471 22       		.byte	0x22
 1200 0472 23       		.byte	0x23
 1201 0473 1A       		.uleb128 0x1a
 1202 0474 94       		.byte	0x94
 1203 0475 01       		.byte	0x1
 1204 0476 08       		.byte	0x8
 1205 0477 FF       		.byte	0xff
 1206 0478 1A       		.byte	0x1a
 1207 0479 00       		.byte	0
 1208 047a 00       		.byte	0
 1209 047b 0F       		.uleb128 0xf
 1210 047c 04       		.byte	0x4
 1211 047d 81040000 		.4byte	0x481
 1212 0481 1B       		.uleb128 0x1b
 1213 0482 FA020000 		.4byte	0x2fa
 1214 0486 14       		.uleb128 0x14
 1215 0487 CB050000 		.4byte	.LASF70
 1216 048b 01       		.byte	0x1
 1217 048c C701     		.2byte	0x1c7
 1218 048e 00000000 		.4byte	.LFB42
 1219 0492 28000000 		.4byte	.LFE42-.LFB42
 1220 0496 01       		.uleb128 0x1
 1221 0497 9C       		.byte	0x9c
 1222 0498 EF040000 		.4byte	0x4ef
 1223 049c 16       		.uleb128 0x16
 1224 049d 4D050000 		.4byte	.LASF67
 1225 04a1 01       		.byte	0x1
 1226 04a2 C701     		.2byte	0x1c7
 1227 04a4 F4000000 		.4byte	0xf4
 1228 04a8 61010000 		.4byte	.LLST8
 1229 04ac 17       		.uleb128 0x17
 1230 04ad 3D000000 		.4byte	.LASF68
 1231 04b1 01       		.byte	0x1
 1232 04b2 C901     		.2byte	0x1c9
 1233 04b4 F4000000 		.4byte	0xf4
 1234 04b8 8D010000 		.4byte	.LLST9
 1235 04bc 17       		.uleb128 0x17
 1236 04bd 09050000 		.4byte	.LASF71
 1237 04c1 01       		.byte	0x1
 1238 04c2 CA01     		.2byte	0x1ca
 1239 04c4 F4000000 		.4byte	0xf4
 1240 04c8 CE010000 		.4byte	.LLST10
 1241 04cc 1A       		.uleb128 0x1a
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 54


 1242 04cd 7A030000 		.4byte	.LASF72
 1243 04d1 01       		.byte	0x1
 1244 04d2 CC01     		.2byte	0x1cc
 1245 04d4 7B040000 		.4byte	0x47b
 1246 04d8 18       		.uleb128 0x18
 1247 04d9 1A000000 		.4byte	.LVL24
 1248 04dd F3030000 		.4byte	0x3f3
 1249 04e1 19       		.uleb128 0x19
 1250 04e2 01       		.uleb128 0x1
 1251 04e3 50       		.byte	0x50
 1252 04e4 02       		.uleb128 0x2
 1253 04e5 75       		.byte	0x75
 1254 04e6 00       		.sleb128 0
 1255 04e7 19       		.uleb128 0x19
 1256 04e8 01       		.uleb128 0x1
 1257 04e9 51       		.byte	0x51
 1258 04ea 02       		.uleb128 0x2
 1259 04eb 74       		.byte	0x74
 1260 04ec 00       		.sleb128 0
 1261 04ed 00       		.byte	0
 1262 04ee 00       		.byte	0
 1263 04ef 14       		.uleb128 0x14
 1264 04f0 6D000000 		.4byte	.LASF73
 1265 04f4 01       		.byte	0x1
 1266 04f5 A301     		.2byte	0x1a3
 1267 04f7 00000000 		.4byte	.LFB41
 1268 04fb 16000000 		.4byte	.LFE41-.LFB41
 1269 04ff 01       		.uleb128 0x1
 1270 0500 9C       		.byte	0x9c
 1271 0501 26050000 		.4byte	0x526
 1272 0505 17       		.uleb128 0x17
 1273 0506 4D050000 		.4byte	.LASF67
 1274 050a 01       		.byte	0x1
 1275 050b A501     		.2byte	0x1a5
 1276 050d F4000000 		.4byte	0xf4
 1277 0511 E1010000 		.4byte	.LLST11
 1278 0515 18       		.uleb128 0x18
 1279 0516 0C000000 		.4byte	.LVL31
 1280 051a 86040000 		.4byte	0x486
 1281 051e 19       		.uleb128 0x19
 1282 051f 01       		.uleb128 0x1
 1283 0520 50       		.byte	0x50
 1284 0521 02       		.uleb128 0x2
 1285 0522 74       		.byte	0x74
 1286 0523 00       		.sleb128 0
 1287 0524 00       		.byte	0
 1288 0525 00       		.byte	0
 1289 0526 1C       		.uleb128 0x1c
 1290 0527 55020000 		.4byte	.LASF78
 1291 052b 01       		.byte	0x1
 1292 052c A506     		.2byte	0x6a5
 1293 052e F4000000 		.4byte	0xf4
 1294 0532 00000000 		.4byte	.LFB46
 1295 0536 12000000 		.4byte	.LFE46-.LFB46
 1296 053a 01       		.uleb128 0x1
 1297 053b 9C       		.byte	0x9c
 1298 053c 8D050000 		.4byte	0x58d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 55


 1299 0540 16       		.uleb128 0x16
 1300 0541 9F000000 		.4byte	.LASF74
 1301 0545 01       		.byte	0x1
 1302 0546 A506     		.2byte	0x6a5
 1303 0548 F4000000 		.4byte	0xf4
 1304 054c 23020000 		.4byte	.LLST12
 1305 0550 16       		.uleb128 0x16
 1306 0551 99050000 		.4byte	.LASF75
 1307 0555 01       		.byte	0x1
 1308 0556 A506     		.2byte	0x6a5
 1309 0558 F4000000 		.4byte	0xf4
 1310 055c 44020000 		.4byte	.LLST13
 1311 0560 1D       		.uleb128 0x1d
 1312 0561 6E00     		.ascii	"n\000"
 1313 0563 01       		.byte	0x1
 1314 0564 A506     		.2byte	0x6a5
 1315 0566 F4000000 		.4byte	0xf4
 1316 056a 65020000 		.4byte	.LLST14
 1317 056e 16       		.uleb128 0x16
 1318 056f A6020000 		.4byte	.LASF76
 1319 0573 01       		.byte	0x1
 1320 0574 A506     		.2byte	0x6a5
 1321 0576 F4000000 		.4byte	0xf4
 1322 057a 86020000 		.4byte	.LLST15
 1323 057e 1E       		.uleb128 0x1e
 1324 057f 82010000 		.4byte	.LASF77
 1325 0583 01       		.byte	0x1
 1326 0584 A706     		.2byte	0x6a7
 1327 0586 F4000000 		.4byte	0xf4
 1328 058a 01       		.uleb128 0x1
 1329 058b 50       		.byte	0x50
 1330 058c 00       		.byte	0
 1331 058d 1F       		.uleb128 0x1f
 1332 058e EF040000 		.4byte	.LASF79
 1333 0592 01       		.byte	0x1
 1334 0593 FF       		.byte	0xff
 1335 0594 F4000000 		.4byte	0xf4
 1336 0598 00000000 		.4byte	.LFB40
 1337 059c 8E000000 		.4byte	.LFE40-.LFB40
 1338 05a0 01       		.uleb128 0x1
 1339 05a1 9C       		.byte	0x9c
 1340 05a2 68060000 		.4byte	0x668
 1341 05a6 16       		.uleb128 0x16
 1342 05a7 1C020000 		.4byte	.LASF80
 1343 05ab 01       		.byte	0x1
 1344 05ac 0001     		.2byte	0x100
 1345 05ae 68060000 		.4byte	0x668
 1346 05b2 A7020000 		.4byte	.LLST16
 1347 05b6 16       		.uleb128 0x16
 1348 05b7 41060000 		.4byte	.LASF61
 1349 05bb 01       		.byte	0x1
 1350 05bc 0101     		.2byte	0x101
 1351 05be EE020000 		.4byte	0x2ee
 1352 05c2 D3020000 		.4byte	.LLST17
 1353 05c6 16       		.uleb128 0x16
 1354 05c7 7B010000 		.4byte	.LASF62
 1355 05cb 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 56


 1356 05cc 0201     		.2byte	0x102
 1357 05ce F4000000 		.4byte	0xf4
 1358 05d2 FF020000 		.4byte	.LLST18
 1359 05d6 17       		.uleb128 0x17
 1360 05d7 6F050000 		.4byte	.LASF81
 1361 05db 01       		.byte	0x1
 1362 05dc 0401     		.2byte	0x104
 1363 05de F4000000 		.4byte	0xf4
 1364 05e2 2B030000 		.4byte	.LLST19
 1365 05e6 17       		.uleb128 0x17
 1366 05e7 D5000000 		.4byte	.LASF82
 1367 05eb 01       		.byte	0x1
 1368 05ec 0501     		.2byte	0x105
 1369 05ee F4000000 		.4byte	0xf4
 1370 05f2 56030000 		.4byte	.LLST20
 1371 05f6 17       		.uleb128 0x17
 1372 05f7 1B040000 		.4byte	.LASF69
 1373 05fb 01       		.byte	0x1
 1374 05fc 0601     		.2byte	0x106
 1375 05fe F4000000 		.4byte	0xf4
 1376 0602 8A030000 		.4byte	.LLST21
 1377 0606 17       		.uleb128 0x17
 1378 0607 23050000 		.4byte	.LASF83
 1379 060b 01       		.byte	0x1
 1380 060c 0701     		.2byte	0x107
 1381 060e F4000000 		.4byte	0xf4
 1382 0612 CC030000 		.4byte	.LLST22
 1383 0616 20       		.uleb128 0x20
 1384 0617 31000000 		.4byte	.LASF84
 1385 061b 01       		.byte	0x1
 1386 061c 0801     		.2byte	0x108
 1387 061e F4000000 		.4byte	0xf4
 1388 0622 00       		.byte	0
 1389 0623 17       		.uleb128 0x17
 1390 0624 9C010000 		.4byte	.LASF85
 1391 0628 01       		.byte	0x1
 1392 0629 0B01     		.2byte	0x10b
 1393 062b F4000000 		.4byte	0xf4
 1394 062f E0030000 		.4byte	.LLST23
 1395 0633 21       		.uleb128 0x21
 1396 0634 4E000000 		.4byte	.LVL50
 1397 0638 4B030000 		.4byte	0x34b
 1398 063c 53060000 		.4byte	0x653
 1399 0640 19       		.uleb128 0x19
 1400 0641 01       		.uleb128 0x1
 1401 0642 50       		.byte	0x50
 1402 0643 02       		.uleb128 0x2
 1403 0644 76       		.byte	0x76
 1404 0645 00       		.sleb128 0
 1405 0646 19       		.uleb128 0x19
 1406 0647 01       		.uleb128 0x1
 1407 0648 51       		.byte	0x51
 1408 0649 02       		.uleb128 0x2
 1409 064a 75       		.byte	0x75
 1410 064b 00       		.sleb128 0
 1411 064c 19       		.uleb128 0x19
 1412 064d 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 57


 1413 064e 52       		.byte	0x52
 1414 064f 02       		.uleb128 0x2
 1415 0650 74       		.byte	0x74
 1416 0651 00       		.sleb128 0
 1417 0652 00       		.byte	0
 1418 0653 18       		.uleb128 0x18
 1419 0654 72000000 		.4byte	.LVL54
 1420 0658 26050000 		.4byte	0x526
 1421 065c 19       		.uleb128 0x19
 1422 065d 01       		.uleb128 0x1
 1423 065e 52       		.byte	0x52
 1424 065f 01       		.uleb128 0x1
 1425 0660 31       		.byte	0x31
 1426 0661 19       		.uleb128 0x19
 1427 0662 01       		.uleb128 0x1
 1428 0663 53       		.byte	0x53
 1429 0664 01       		.uleb128 0x1
 1430 0665 38       		.byte	0x38
 1431 0666 00       		.byte	0
 1432 0667 00       		.byte	0
 1433 0668 0F       		.uleb128 0xf
 1434 0669 04       		.byte	0x4
 1435 066a E4010000 		.4byte	0x1e4
 1436 066e 1F       		.uleb128 0x1f
 1437 066f E0010000 		.4byte	.LASF86
 1438 0673 01       		.byte	0x1
 1439 0674 C8       		.byte	0xc8
 1440 0675 D0000000 		.4byte	0xd0
 1441 0679 00000000 		.4byte	.LFB39
 1442 067d 2C000000 		.4byte	.LFE39-.LFB39
 1443 0681 01       		.uleb128 0x1
 1444 0682 9C       		.byte	0x9c
 1445 0683 19070000 		.4byte	0x719
 1446 0687 22       		.uleb128 0x22
 1447 0688 4D050000 		.4byte	.LASF67
 1448 068c 01       		.byte	0x1
 1449 068d C8       		.byte	0xc8
 1450 068e F4000000 		.4byte	0xf4
 1451 0692 FE030000 		.4byte	.LLST24
 1452 0696 22       		.uleb128 0x22
 1453 0697 3D000000 		.4byte	.LASF68
 1454 069b 01       		.byte	0x1
 1455 069c C8       		.byte	0xc8
 1456 069d F4000000 		.4byte	0xf4
 1457 06a1 1F040000 		.4byte	.LLST25
 1458 06a5 23       		.uleb128 0x23
 1459 06a6 31000000 		.4byte	.LASF84
 1460 06aa 01       		.byte	0x1
 1461 06ab CA       		.byte	0xca
 1462 06ac F4000000 		.4byte	0xf4
 1463 06b0 40040000 		.4byte	.LLST26
 1464 06b4 23       		.uleb128 0x23
 1465 06b5 41060000 		.4byte	.LASF61
 1466 06b9 01       		.byte	0x1
 1467 06ba CC       		.byte	0xcc
 1468 06bb EE020000 		.4byte	0x2ee
 1469 06bf 5F040000 		.4byte	.LLST27
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 58


 1470 06c3 24       		.uleb128 0x24
 1471 06c4 7A030000 		.4byte	.LASF72
 1472 06c8 01       		.byte	0x1
 1473 06c9 CD       		.byte	0xcd
 1474 06ca 7B040000 		.4byte	0x47b
 1475 06ce 23       		.uleb128 0x23
 1476 06cf 1C020000 		.4byte	.LASF80
 1477 06d3 01       		.byte	0x1
 1478 06d4 CE       		.byte	0xce
 1479 06d5 68060000 		.4byte	0x668
 1480 06d9 A2040000 		.4byte	.LLST28
 1481 06dd 18       		.uleb128 0x18
 1482 06de 26000000 		.4byte	.LVL69
 1483 06e2 8D050000 		.4byte	0x58d
 1484 06e6 19       		.uleb128 0x19
 1485 06e7 01       		.uleb128 0x1
 1486 06e8 50       		.byte	0x50
 1487 06e9 02       		.uleb128 0x2
 1488 06ea 74       		.byte	0x74
 1489 06eb 00       		.sleb128 0
 1490 06ec 19       		.uleb128 0x19
 1491 06ed 01       		.uleb128 0x1
 1492 06ee 51       		.byte	0x51
 1493 06ef 0E       		.uleb128 0xe
 1494 06f0 F3       		.byte	0xf3
 1495 06f1 01       		.uleb128 0x1
 1496 06f2 51       		.byte	0x51
 1497 06f3 32       		.byte	0x32
 1498 06f4 24       		.byte	0x24
 1499 06f5 F3       		.byte	0xf3
 1500 06f6 01       		.uleb128 0x1
 1501 06f7 51       		.byte	0x51
 1502 06f8 22       		.byte	0x22
 1503 06f9 31       		.byte	0x31
 1504 06fa 24       		.byte	0x24
 1505 06fb 76       		.byte	0x76
 1506 06fc 00       		.sleb128 0
 1507 06fd 22       		.byte	0x22
 1508 06fe 19       		.uleb128 0x19
 1509 06ff 01       		.uleb128 0x1
 1510 0700 52       		.byte	0x52
 1511 0701 15       		.uleb128 0x15
 1512 0702 F3       		.byte	0xf3
 1513 0703 01       		.uleb128 0x1
 1514 0704 50       		.byte	0x50
 1515 0705 33       		.byte	0x33
 1516 0706 24       		.byte	0x24
 1517 0707 F3       		.byte	0xf3
 1518 0708 01       		.uleb128 0x1
 1519 0709 50       		.byte	0x50
 1520 070a 1C       		.byte	0x1c
 1521 070b 32       		.byte	0x32
 1522 070c 24       		.byte	0x24
 1523 070d 75       		.byte	0x75
 1524 070e 00       		.sleb128 0
 1525 070f 22       		.byte	0x22
 1526 0710 23       		.byte	0x23
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 59


 1527 0711 1A       		.uleb128 0x1a
 1528 0712 94       		.byte	0x94
 1529 0713 01       		.byte	0x1
 1530 0714 08       		.byte	0x8
 1531 0715 FF       		.byte	0xff
 1532 0716 1A       		.byte	0x1a
 1533 0717 00       		.byte	0
 1534 0718 00       		.byte	0
 1535 0719 1F       		.uleb128 0x1f
 1536 071a 3F040000 		.4byte	.LASF87
 1537 071e 01       		.byte	0x1
 1538 071f 8F       		.byte	0x8f
 1539 0720 D0000000 		.4byte	0xd0
 1540 0724 00000000 		.4byte	.LFB38
 1541 0728 30000000 		.4byte	.LFE38-.LFB38
 1542 072c 01       		.uleb128 0x1
 1543 072d 9C       		.byte	0x9c
 1544 072e 90070000 		.4byte	0x790
 1545 0732 22       		.uleb128 0x22
 1546 0733 4D050000 		.4byte	.LASF67
 1547 0737 01       		.byte	0x1
 1548 0738 8F       		.byte	0x8f
 1549 0739 F4000000 		.4byte	0xf4
 1550 073d CF040000 		.4byte	.LLST29
 1551 0741 23       		.uleb128 0x23
 1552 0742 3D000000 		.4byte	.LASF68
 1553 0746 01       		.byte	0x1
 1554 0747 91       		.byte	0x91
 1555 0748 F4000000 		.4byte	0xf4
 1556 074c FB040000 		.4byte	.LLST30
 1557 0750 23       		.uleb128 0x23
 1558 0751 09050000 		.4byte	.LASF71
 1559 0755 01       		.byte	0x1
 1560 0756 92       		.byte	0x92
 1561 0757 F4000000 		.4byte	0xf4
 1562 075b 3C050000 		.4byte	.LLST31
 1563 075f 24       		.uleb128 0x24
 1564 0760 7A030000 		.4byte	.LASF72
 1565 0764 01       		.byte	0x1
 1566 0765 94       		.byte	0x94
 1567 0766 7B040000 		.4byte	0x47b
 1568 076a 23       		.uleb128 0x23
 1569 076b 46000000 		.4byte	.LASF88
 1570 076f 01       		.byte	0x1
 1571 0770 95       		.byte	0x95
 1572 0771 D0000000 		.4byte	0xd0
 1573 0775 4F050000 		.4byte	.LLST32
 1574 0779 18       		.uleb128 0x18
 1575 077a 1C000000 		.4byte	.LVL77
 1576 077e 6E060000 		.4byte	0x66e
 1577 0782 19       		.uleb128 0x19
 1578 0783 01       		.uleb128 0x1
 1579 0784 50       		.byte	0x50
 1580 0785 02       		.uleb128 0x2
 1581 0786 76       		.byte	0x76
 1582 0787 00       		.sleb128 0
 1583 0788 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 60


 1584 0789 01       		.uleb128 0x1
 1585 078a 51       		.byte	0x51
 1586 078b 02       		.uleb128 0x2
 1587 078c 74       		.byte	0x74
 1588 078d 00       		.sleb128 0
 1589 078e 00       		.byte	0
 1590 078f 00       		.byte	0
 1591 0790 1F       		.uleb128 0x1f
 1592 0791 8C040000 		.4byte	.LASF89
 1593 0795 01       		.byte	0x1
 1594 0796 62       		.byte	0x62
 1595 0797 D0000000 		.4byte	0xd0
 1596 079b 00000000 		.4byte	.LFB37
 1597 079f 1C000000 		.4byte	.LFE37-.LFB37
 1598 07a3 01       		.uleb128 0x1
 1599 07a4 9C       		.byte	0x9c
 1600 07a5 D8070000 		.4byte	0x7d8
 1601 07a9 23       		.uleb128 0x23
 1602 07aa 4D050000 		.4byte	.LASF67
 1603 07ae 01       		.byte	0x1
 1604 07af 64       		.byte	0x64
 1605 07b0 F4000000 		.4byte	0xf4
 1606 07b4 79050000 		.4byte	.LLST33
 1607 07b8 23       		.uleb128 0x23
 1608 07b9 46000000 		.4byte	.LASF88
 1609 07bd 01       		.byte	0x1
 1610 07be 65       		.byte	0x65
 1611 07bf D0000000 		.4byte	0xd0
 1612 07c3 BB050000 		.4byte	.LLST34
 1613 07c7 18       		.uleb128 0x18
 1614 07c8 0E000000 		.4byte	.LVL86
 1615 07cc 19070000 		.4byte	0x719
 1616 07d0 19       		.uleb128 0x19
 1617 07d1 01       		.uleb128 0x1
 1618 07d2 50       		.byte	0x50
 1619 07d3 02       		.uleb128 0x2
 1620 07d4 74       		.byte	0x74
 1621 07d5 00       		.sleb128 0
 1622 07d6 00       		.byte	0
 1623 07d7 00       		.byte	0
 1624 07d8 25       		.uleb128 0x25
 1625 07d9 07060000 		.4byte	.LASF94
 1626 07dd 06       		.byte	0x6
 1627 07de 2704     		.2byte	0x427
 1628 07e0 E4070000 		.4byte	0x7e4
 1629 07e4 1B       		.uleb128 0x1b
 1630 07e5 2E030000 		.4byte	0x32e
 1631 07e9 00       		.byte	0
 1632              		.section	.debug_abbrev,"",%progbits
 1633              	.Ldebug_abbrev0:
 1634 0000 01       		.uleb128 0x1
 1635 0001 11       		.uleb128 0x11
 1636 0002 01       		.byte	0x1
 1637 0003 25       		.uleb128 0x25
 1638 0004 0E       		.uleb128 0xe
 1639 0005 13       		.uleb128 0x13
 1640 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 61


 1641 0007 03       		.uleb128 0x3
 1642 0008 0E       		.uleb128 0xe
 1643 0009 1B       		.uleb128 0x1b
 1644 000a 0E       		.uleb128 0xe
 1645 000b 55       		.uleb128 0x55
 1646 000c 17       		.uleb128 0x17
 1647 000d 11       		.uleb128 0x11
 1648 000e 01       		.uleb128 0x1
 1649 000f 10       		.uleb128 0x10
 1650 0010 17       		.uleb128 0x17
 1651 0011 00       		.byte	0
 1652 0012 00       		.byte	0
 1653 0013 02       		.uleb128 0x2
 1654 0014 24       		.uleb128 0x24
 1655 0015 00       		.byte	0
 1656 0016 0B       		.uleb128 0xb
 1657 0017 0B       		.uleb128 0xb
 1658 0018 3E       		.uleb128 0x3e
 1659 0019 0B       		.uleb128 0xb
 1660 001a 03       		.uleb128 0x3
 1661 001b 08       		.uleb128 0x8
 1662 001c 00       		.byte	0
 1663 001d 00       		.byte	0
 1664 001e 03       		.uleb128 0x3
 1665 001f 24       		.uleb128 0x24
 1666 0020 00       		.byte	0
 1667 0021 0B       		.uleb128 0xb
 1668 0022 0B       		.uleb128 0xb
 1669 0023 3E       		.uleb128 0x3e
 1670 0024 0B       		.uleb128 0xb
 1671 0025 03       		.uleb128 0x3
 1672 0026 0E       		.uleb128 0xe
 1673 0027 00       		.byte	0
 1674 0028 00       		.byte	0
 1675 0029 04       		.uleb128 0x4
 1676 002a 16       		.uleb128 0x16
 1677 002b 00       		.byte	0
 1678 002c 03       		.uleb128 0x3
 1679 002d 0E       		.uleb128 0xe
 1680 002e 3A       		.uleb128 0x3a
 1681 002f 0B       		.uleb128 0xb
 1682 0030 3B       		.uleb128 0x3b
 1683 0031 0B       		.uleb128 0xb
 1684 0032 49       		.uleb128 0x49
 1685 0033 13       		.uleb128 0x13
 1686 0034 00       		.byte	0
 1687 0035 00       		.byte	0
 1688 0036 05       		.uleb128 0x5
 1689 0037 16       		.uleb128 0x16
 1690 0038 00       		.byte	0
 1691 0039 03       		.uleb128 0x3
 1692 003a 0E       		.uleb128 0xe
 1693 003b 3A       		.uleb128 0x3a
 1694 003c 0B       		.uleb128 0xb
 1695 003d 3B       		.uleb128 0x3b
 1696 003e 05       		.uleb128 0x5
 1697 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 62


 1698 0040 13       		.uleb128 0x13
 1699 0041 00       		.byte	0
 1700 0042 00       		.byte	0
 1701 0043 06       		.uleb128 0x6
 1702 0044 04       		.uleb128 0x4
 1703 0045 01       		.byte	0x1
 1704 0046 0B       		.uleb128 0xb
 1705 0047 0B       		.uleb128 0xb
 1706 0048 49       		.uleb128 0x49
 1707 0049 13       		.uleb128 0x13
 1708 004a 3A       		.uleb128 0x3a
 1709 004b 0B       		.uleb128 0xb
 1710 004c 3B       		.uleb128 0x3b
 1711 004d 0B       		.uleb128 0xb
 1712 004e 01       		.uleb128 0x1
 1713 004f 13       		.uleb128 0x13
 1714 0050 00       		.byte	0
 1715 0051 00       		.byte	0
 1716 0052 07       		.uleb128 0x7
 1717 0053 28       		.uleb128 0x28
 1718 0054 00       		.byte	0
 1719 0055 03       		.uleb128 0x3
 1720 0056 0E       		.uleb128 0xe
 1721 0057 1C       		.uleb128 0x1c
 1722 0058 0B       		.uleb128 0xb
 1723 0059 00       		.byte	0
 1724 005a 00       		.byte	0
 1725 005b 08       		.uleb128 0x8
 1726 005c 13       		.uleb128 0x13
 1727 005d 01       		.byte	0x1
 1728 005e 0B       		.uleb128 0xb
 1729 005f 0B       		.uleb128 0xb
 1730 0060 3A       		.uleb128 0x3a
 1731 0061 0B       		.uleb128 0xb
 1732 0062 3B       		.uleb128 0x3b
 1733 0063 0B       		.uleb128 0xb
 1734 0064 01       		.uleb128 0x1
 1735 0065 13       		.uleb128 0x13
 1736 0066 00       		.byte	0
 1737 0067 00       		.byte	0
 1738 0068 09       		.uleb128 0x9
 1739 0069 0D       		.uleb128 0xd
 1740 006a 00       		.byte	0
 1741 006b 03       		.uleb128 0x3
 1742 006c 0E       		.uleb128 0xe
 1743 006d 3A       		.uleb128 0x3a
 1744 006e 0B       		.uleb128 0xb
 1745 006f 3B       		.uleb128 0x3b
 1746 0070 0B       		.uleb128 0xb
 1747 0071 49       		.uleb128 0x49
 1748 0072 13       		.uleb128 0x13
 1749 0073 38       		.uleb128 0x38
 1750 0074 0B       		.uleb128 0xb
 1751 0075 00       		.byte	0
 1752 0076 00       		.byte	0
 1753 0077 0A       		.uleb128 0xa
 1754 0078 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 63


 1755 0079 01       		.byte	0x1
 1756 007a 49       		.uleb128 0x49
 1757 007b 13       		.uleb128 0x13
 1758 007c 01       		.uleb128 0x1
 1759 007d 13       		.uleb128 0x13
 1760 007e 00       		.byte	0
 1761 007f 00       		.byte	0
 1762 0080 0B       		.uleb128 0xb
 1763 0081 21       		.uleb128 0x21
 1764 0082 00       		.byte	0
 1765 0083 49       		.uleb128 0x49
 1766 0084 13       		.uleb128 0x13
 1767 0085 2F       		.uleb128 0x2f
 1768 0086 0B       		.uleb128 0xb
 1769 0087 00       		.byte	0
 1770 0088 00       		.byte	0
 1771 0089 0C       		.uleb128 0xc
 1772 008a 13       		.uleb128 0x13
 1773 008b 01       		.byte	0x1
 1774 008c 0B       		.uleb128 0xb
 1775 008d 0B       		.uleb128 0xb
 1776 008e 3A       		.uleb128 0x3a
 1777 008f 0B       		.uleb128 0xb
 1778 0090 3B       		.uleb128 0x3b
 1779 0091 05       		.uleb128 0x5
 1780 0092 01       		.uleb128 0x1
 1781 0093 13       		.uleb128 0x13
 1782 0094 00       		.byte	0
 1783 0095 00       		.byte	0
 1784 0096 0D       		.uleb128 0xd
 1785 0097 0D       		.uleb128 0xd
 1786 0098 00       		.byte	0
 1787 0099 03       		.uleb128 0x3
 1788 009a 08       		.uleb128 0x8
 1789 009b 3A       		.uleb128 0x3a
 1790 009c 0B       		.uleb128 0xb
 1791 009d 3B       		.uleb128 0x3b
 1792 009e 05       		.uleb128 0x5
 1793 009f 49       		.uleb128 0x49
 1794 00a0 13       		.uleb128 0x13
 1795 00a1 38       		.uleb128 0x38
 1796 00a2 0B       		.uleb128 0xb
 1797 00a3 00       		.byte	0
 1798 00a4 00       		.byte	0
 1799 00a5 0E       		.uleb128 0xe
 1800 00a6 0D       		.uleb128 0xd
 1801 00a7 00       		.byte	0
 1802 00a8 03       		.uleb128 0x3
 1803 00a9 0E       		.uleb128 0xe
 1804 00aa 3A       		.uleb128 0x3a
 1805 00ab 0B       		.uleb128 0xb
 1806 00ac 3B       		.uleb128 0x3b
 1807 00ad 05       		.uleb128 0x5
 1808 00ae 49       		.uleb128 0x49
 1809 00af 13       		.uleb128 0x13
 1810 00b0 38       		.uleb128 0x38
 1811 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 64


 1812 00b2 00       		.byte	0
 1813 00b3 00       		.byte	0
 1814 00b4 0F       		.uleb128 0xf
 1815 00b5 0F       		.uleb128 0xf
 1816 00b6 00       		.byte	0
 1817 00b7 0B       		.uleb128 0xb
 1818 00b8 0B       		.uleb128 0xb
 1819 00b9 49       		.uleb128 0x49
 1820 00ba 13       		.uleb128 0x13
 1821 00bb 00       		.byte	0
 1822 00bc 00       		.byte	0
 1823 00bd 10       		.uleb128 0x10
 1824 00be 26       		.uleb128 0x26
 1825 00bf 00       		.byte	0
 1826 00c0 00       		.byte	0
 1827 00c1 00       		.byte	0
 1828 00c2 11       		.uleb128 0x11
 1829 00c3 0F       		.uleb128 0xf
 1830 00c4 00       		.byte	0
 1831 00c5 0B       		.uleb128 0xb
 1832 00c6 0B       		.uleb128 0xb
 1833 00c7 00       		.byte	0
 1834 00c8 00       		.byte	0
 1835 00c9 12       		.uleb128 0x12
 1836 00ca 13       		.uleb128 0x13
 1837 00cb 01       		.byte	0x1
 1838 00cc 0B       		.uleb128 0xb
 1839 00cd 05       		.uleb128 0x5
 1840 00ce 3A       		.uleb128 0x3a
 1841 00cf 0B       		.uleb128 0xb
 1842 00d0 3B       		.uleb128 0x3b
 1843 00d1 05       		.uleb128 0x5
 1844 00d2 01       		.uleb128 0x1
 1845 00d3 13       		.uleb128 0x13
 1846 00d4 00       		.byte	0
 1847 00d5 00       		.byte	0
 1848 00d6 13       		.uleb128 0x13
 1849 00d7 2E       		.uleb128 0x2e
 1850 00d8 00       		.byte	0
 1851 00d9 3F       		.uleb128 0x3f
 1852 00da 19       		.uleb128 0x19
 1853 00db 03       		.uleb128 0x3
 1854 00dc 0E       		.uleb128 0xe
 1855 00dd 3A       		.uleb128 0x3a
 1856 00de 0B       		.uleb128 0xb
 1857 00df 3B       		.uleb128 0x3b
 1858 00e0 0B       		.uleb128 0xb
 1859 00e1 27       		.uleb128 0x27
 1860 00e2 19       		.uleb128 0x19
 1861 00e3 11       		.uleb128 0x11
 1862 00e4 01       		.uleb128 0x1
 1863 00e5 12       		.uleb128 0x12
 1864 00e6 06       		.uleb128 0x6
 1865 00e7 40       		.uleb128 0x40
 1866 00e8 18       		.uleb128 0x18
 1867 00e9 9742     		.uleb128 0x2117
 1868 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 65


 1869 00ec 00       		.byte	0
 1870 00ed 00       		.byte	0
 1871 00ee 14       		.uleb128 0x14
 1872 00ef 2E       		.uleb128 0x2e
 1873 00f0 01       		.byte	0x1
 1874 00f1 3F       		.uleb128 0x3f
 1875 00f2 19       		.uleb128 0x19
 1876 00f3 03       		.uleb128 0x3
 1877 00f4 0E       		.uleb128 0xe
 1878 00f5 3A       		.uleb128 0x3a
 1879 00f6 0B       		.uleb128 0xb
 1880 00f7 3B       		.uleb128 0x3b
 1881 00f8 05       		.uleb128 0x5
 1882 00f9 27       		.uleb128 0x27
 1883 00fa 19       		.uleb128 0x19
 1884 00fb 11       		.uleb128 0x11
 1885 00fc 01       		.uleb128 0x1
 1886 00fd 12       		.uleb128 0x12
 1887 00fe 06       		.uleb128 0x6
 1888 00ff 40       		.uleb128 0x40
 1889 0100 18       		.uleb128 0x18
 1890 0101 9742     		.uleb128 0x2117
 1891 0103 19       		.uleb128 0x19
 1892 0104 01       		.uleb128 0x1
 1893 0105 13       		.uleb128 0x13
 1894 0106 00       		.byte	0
 1895 0107 00       		.byte	0
 1896 0108 15       		.uleb128 0x15
 1897 0109 05       		.uleb128 0x5
 1898 010a 00       		.byte	0
 1899 010b 03       		.uleb128 0x3
 1900 010c 0E       		.uleb128 0xe
 1901 010d 3A       		.uleb128 0x3a
 1902 010e 0B       		.uleb128 0xb
 1903 010f 3B       		.uleb128 0x3b
 1904 0110 05       		.uleb128 0x5
 1905 0111 49       		.uleb128 0x49
 1906 0112 13       		.uleb128 0x13
 1907 0113 02       		.uleb128 0x2
 1908 0114 18       		.uleb128 0x18
 1909 0115 00       		.byte	0
 1910 0116 00       		.byte	0
 1911 0117 16       		.uleb128 0x16
 1912 0118 05       		.uleb128 0x5
 1913 0119 00       		.byte	0
 1914 011a 03       		.uleb128 0x3
 1915 011b 0E       		.uleb128 0xe
 1916 011c 3A       		.uleb128 0x3a
 1917 011d 0B       		.uleb128 0xb
 1918 011e 3B       		.uleb128 0x3b
 1919 011f 05       		.uleb128 0x5
 1920 0120 49       		.uleb128 0x49
 1921 0121 13       		.uleb128 0x13
 1922 0122 02       		.uleb128 0x2
 1923 0123 17       		.uleb128 0x17
 1924 0124 00       		.byte	0
 1925 0125 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 66


 1926 0126 17       		.uleb128 0x17
 1927 0127 34       		.uleb128 0x34
 1928 0128 00       		.byte	0
 1929 0129 03       		.uleb128 0x3
 1930 012a 0E       		.uleb128 0xe
 1931 012b 3A       		.uleb128 0x3a
 1932 012c 0B       		.uleb128 0xb
 1933 012d 3B       		.uleb128 0x3b
 1934 012e 05       		.uleb128 0x5
 1935 012f 49       		.uleb128 0x49
 1936 0130 13       		.uleb128 0x13
 1937 0131 02       		.uleb128 0x2
 1938 0132 17       		.uleb128 0x17
 1939 0133 00       		.byte	0
 1940 0134 00       		.byte	0
 1941 0135 18       		.uleb128 0x18
 1942 0136 898201   		.uleb128 0x4109
 1943 0139 01       		.byte	0x1
 1944 013a 11       		.uleb128 0x11
 1945 013b 01       		.uleb128 0x1
 1946 013c 31       		.uleb128 0x31
 1947 013d 13       		.uleb128 0x13
 1948 013e 00       		.byte	0
 1949 013f 00       		.byte	0
 1950 0140 19       		.uleb128 0x19
 1951 0141 8A8201   		.uleb128 0x410a
 1952 0144 00       		.byte	0
 1953 0145 02       		.uleb128 0x2
 1954 0146 18       		.uleb128 0x18
 1955 0147 9142     		.uleb128 0x2111
 1956 0149 18       		.uleb128 0x18
 1957 014a 00       		.byte	0
 1958 014b 00       		.byte	0
 1959 014c 1A       		.uleb128 0x1a
 1960 014d 34       		.uleb128 0x34
 1961 014e 00       		.byte	0
 1962 014f 03       		.uleb128 0x3
 1963 0150 0E       		.uleb128 0xe
 1964 0151 3A       		.uleb128 0x3a
 1965 0152 0B       		.uleb128 0xb
 1966 0153 3B       		.uleb128 0x3b
 1967 0154 05       		.uleb128 0x5
 1968 0155 49       		.uleb128 0x49
 1969 0156 13       		.uleb128 0x13
 1970 0157 00       		.byte	0
 1971 0158 00       		.byte	0
 1972 0159 1B       		.uleb128 0x1b
 1973 015a 26       		.uleb128 0x26
 1974 015b 00       		.byte	0
 1975 015c 49       		.uleb128 0x49
 1976 015d 13       		.uleb128 0x13
 1977 015e 00       		.byte	0
 1978 015f 00       		.byte	0
 1979 0160 1C       		.uleb128 0x1c
 1980 0161 2E       		.uleb128 0x2e
 1981 0162 01       		.byte	0x1
 1982 0163 3F       		.uleb128 0x3f
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 67


 1983 0164 19       		.uleb128 0x19
 1984 0165 03       		.uleb128 0x3
 1985 0166 0E       		.uleb128 0xe
 1986 0167 3A       		.uleb128 0x3a
 1987 0168 0B       		.uleb128 0xb
 1988 0169 3B       		.uleb128 0x3b
 1989 016a 05       		.uleb128 0x5
 1990 016b 27       		.uleb128 0x27
 1991 016c 19       		.uleb128 0x19
 1992 016d 49       		.uleb128 0x49
 1993 016e 13       		.uleb128 0x13
 1994 016f 11       		.uleb128 0x11
 1995 0170 01       		.uleb128 0x1
 1996 0171 12       		.uleb128 0x12
 1997 0172 06       		.uleb128 0x6
 1998 0173 40       		.uleb128 0x40
 1999 0174 18       		.uleb128 0x18
 2000 0175 9742     		.uleb128 0x2117
 2001 0177 19       		.uleb128 0x19
 2002 0178 01       		.uleb128 0x1
 2003 0179 13       		.uleb128 0x13
 2004 017a 00       		.byte	0
 2005 017b 00       		.byte	0
 2006 017c 1D       		.uleb128 0x1d
 2007 017d 05       		.uleb128 0x5
 2008 017e 00       		.byte	0
 2009 017f 03       		.uleb128 0x3
 2010 0180 08       		.uleb128 0x8
 2011 0181 3A       		.uleb128 0x3a
 2012 0182 0B       		.uleb128 0xb
 2013 0183 3B       		.uleb128 0x3b
 2014 0184 05       		.uleb128 0x5
 2015 0185 49       		.uleb128 0x49
 2016 0186 13       		.uleb128 0x13
 2017 0187 02       		.uleb128 0x2
 2018 0188 17       		.uleb128 0x17
 2019 0189 00       		.byte	0
 2020 018a 00       		.byte	0
 2021 018b 1E       		.uleb128 0x1e
 2022 018c 34       		.uleb128 0x34
 2023 018d 00       		.byte	0
 2024 018e 03       		.uleb128 0x3
 2025 018f 0E       		.uleb128 0xe
 2026 0190 3A       		.uleb128 0x3a
 2027 0191 0B       		.uleb128 0xb
 2028 0192 3B       		.uleb128 0x3b
 2029 0193 05       		.uleb128 0x5
 2030 0194 49       		.uleb128 0x49
 2031 0195 13       		.uleb128 0x13
 2032 0196 02       		.uleb128 0x2
 2033 0197 18       		.uleb128 0x18
 2034 0198 00       		.byte	0
 2035 0199 00       		.byte	0
 2036 019a 1F       		.uleb128 0x1f
 2037 019b 2E       		.uleb128 0x2e
 2038 019c 01       		.byte	0x1
 2039 019d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 68


 2040 019e 19       		.uleb128 0x19
 2041 019f 03       		.uleb128 0x3
 2042 01a0 0E       		.uleb128 0xe
 2043 01a1 3A       		.uleb128 0x3a
 2044 01a2 0B       		.uleb128 0xb
 2045 01a3 3B       		.uleb128 0x3b
 2046 01a4 0B       		.uleb128 0xb
 2047 01a5 27       		.uleb128 0x27
 2048 01a6 19       		.uleb128 0x19
 2049 01a7 49       		.uleb128 0x49
 2050 01a8 13       		.uleb128 0x13
 2051 01a9 11       		.uleb128 0x11
 2052 01aa 01       		.uleb128 0x1
 2053 01ab 12       		.uleb128 0x12
 2054 01ac 06       		.uleb128 0x6
 2055 01ad 40       		.uleb128 0x40
 2056 01ae 18       		.uleb128 0x18
 2057 01af 9742     		.uleb128 0x2117
 2058 01b1 19       		.uleb128 0x19
 2059 01b2 01       		.uleb128 0x1
 2060 01b3 13       		.uleb128 0x13
 2061 01b4 00       		.byte	0
 2062 01b5 00       		.byte	0
 2063 01b6 20       		.uleb128 0x20
 2064 01b7 34       		.uleb128 0x34
 2065 01b8 00       		.byte	0
 2066 01b9 03       		.uleb128 0x3
 2067 01ba 0E       		.uleb128 0xe
 2068 01bb 3A       		.uleb128 0x3a
 2069 01bc 0B       		.uleb128 0xb
 2070 01bd 3B       		.uleb128 0x3b
 2071 01be 05       		.uleb128 0x5
 2072 01bf 49       		.uleb128 0x49
 2073 01c0 13       		.uleb128 0x13
 2074 01c1 1C       		.uleb128 0x1c
 2075 01c2 0B       		.uleb128 0xb
 2076 01c3 00       		.byte	0
 2077 01c4 00       		.byte	0
 2078 01c5 21       		.uleb128 0x21
 2079 01c6 898201   		.uleb128 0x4109
 2080 01c9 01       		.byte	0x1
 2081 01ca 11       		.uleb128 0x11
 2082 01cb 01       		.uleb128 0x1
 2083 01cc 31       		.uleb128 0x31
 2084 01cd 13       		.uleb128 0x13
 2085 01ce 01       		.uleb128 0x1
 2086 01cf 13       		.uleb128 0x13
 2087 01d0 00       		.byte	0
 2088 01d1 00       		.byte	0
 2089 01d2 22       		.uleb128 0x22
 2090 01d3 05       		.uleb128 0x5
 2091 01d4 00       		.byte	0
 2092 01d5 03       		.uleb128 0x3
 2093 01d6 0E       		.uleb128 0xe
 2094 01d7 3A       		.uleb128 0x3a
 2095 01d8 0B       		.uleb128 0xb
 2096 01d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 69


 2097 01da 0B       		.uleb128 0xb
 2098 01db 49       		.uleb128 0x49
 2099 01dc 13       		.uleb128 0x13
 2100 01dd 02       		.uleb128 0x2
 2101 01de 17       		.uleb128 0x17
 2102 01df 00       		.byte	0
 2103 01e0 00       		.byte	0
 2104 01e1 23       		.uleb128 0x23
 2105 01e2 34       		.uleb128 0x34
 2106 01e3 00       		.byte	0
 2107 01e4 03       		.uleb128 0x3
 2108 01e5 0E       		.uleb128 0xe
 2109 01e6 3A       		.uleb128 0x3a
 2110 01e7 0B       		.uleb128 0xb
 2111 01e8 3B       		.uleb128 0x3b
 2112 01e9 0B       		.uleb128 0xb
 2113 01ea 49       		.uleb128 0x49
 2114 01eb 13       		.uleb128 0x13
 2115 01ec 02       		.uleb128 0x2
 2116 01ed 17       		.uleb128 0x17
 2117 01ee 00       		.byte	0
 2118 01ef 00       		.byte	0
 2119 01f0 24       		.uleb128 0x24
 2120 01f1 34       		.uleb128 0x34
 2121 01f2 00       		.byte	0
 2122 01f3 03       		.uleb128 0x3
 2123 01f4 0E       		.uleb128 0xe
 2124 01f5 3A       		.uleb128 0x3a
 2125 01f6 0B       		.uleb128 0xb
 2126 01f7 3B       		.uleb128 0x3b
 2127 01f8 0B       		.uleb128 0xb
 2128 01f9 49       		.uleb128 0x49
 2129 01fa 13       		.uleb128 0x13
 2130 01fb 00       		.byte	0
 2131 01fc 00       		.byte	0
 2132 01fd 25       		.uleb128 0x25
 2133 01fe 34       		.uleb128 0x34
 2134 01ff 00       		.byte	0
 2135 0200 03       		.uleb128 0x3
 2136 0201 0E       		.uleb128 0xe
 2137 0202 3A       		.uleb128 0x3a
 2138 0203 0B       		.uleb128 0xb
 2139 0204 3B       		.uleb128 0x3b
 2140 0205 05       		.uleb128 0x5
 2141 0206 49       		.uleb128 0x49
 2142 0207 13       		.uleb128 0x13
 2143 0208 3F       		.uleb128 0x3f
 2144 0209 19       		.uleb128 0x19
 2145 020a 3C       		.uleb128 0x3c
 2146 020b 19       		.uleb128 0x19
 2147 020c 00       		.byte	0
 2148 020d 00       		.byte	0
 2149 020e 00       		.byte	0
 2150              		.section	.debug_loc,"",%progbits
 2151              	.Ldebug_loc0:
 2152              	.LLST0:
 2153 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 70


 2154 0004 04000000 		.4byte	.LVL1
 2155 0008 0100     		.2byte	0x1
 2156 000a 51       		.byte	0x51
 2157 000b 04000000 		.4byte	.LVL1
 2158 000f 1E000000 		.4byte	.LFE45
 2159 0013 0400     		.2byte	0x4
 2160 0015 F3       		.byte	0xf3
 2161 0016 01       		.uleb128 0x1
 2162 0017 51       		.byte	0x51
 2163 0018 9F       		.byte	0x9f
 2164 0019 00000000 		.4byte	0
 2165 001d 00000000 		.4byte	0
 2166              	.LLST1:
 2167 0021 00000000 		.4byte	.LVL0
 2168 0025 18000000 		.4byte	.LVL2
 2169 0029 0100     		.2byte	0x1
 2170 002b 52       		.byte	0x52
 2171 002c 18000000 		.4byte	.LVL2
 2172 0030 1E000000 		.4byte	.LFE45
 2173 0034 0400     		.2byte	0x4
 2174 0036 F3       		.byte	0xf3
 2175 0037 01       		.uleb128 0x1
 2176 0038 52       		.byte	0x52
 2177 0039 9F       		.byte	0x9f
 2178 003a 00000000 		.4byte	0
 2179 003e 00000000 		.4byte	0
 2180              	.LLST2:
 2181 0042 00000000 		.4byte	.LVL3
 2182 0046 0A000000 		.4byte	.LVL5
 2183 004a 0100     		.2byte	0x1
 2184 004c 50       		.byte	0x50
 2185 004d 0A000000 		.4byte	.LVL5
 2186 0051 1C000000 		.4byte	.LVL11
 2187 0055 0100     		.2byte	0x1
 2188 0057 56       		.byte	0x56
 2189 0058 1C000000 		.4byte	.LVL11
 2190 005c 1E000000 		.4byte	.LFE44
 2191 0060 0400     		.2byte	0x4
 2192 0062 F3       		.byte	0xf3
 2193 0063 01       		.uleb128 0x1
 2194 0064 50       		.byte	0x50
 2195 0065 9F       		.byte	0x9f
 2196 0066 00000000 		.4byte	0
 2197 006a 00000000 		.4byte	0
 2198              	.LLST3:
 2199 006e 00000000 		.4byte	.LVL3
 2200 0072 0A000000 		.4byte	.LVL5
 2201 0076 0100     		.2byte	0x1
 2202 0078 51       		.byte	0x51
 2203 0079 0A000000 		.4byte	.LVL5
 2204 007d 1C000000 		.4byte	.LVL10
 2205 0081 0100     		.2byte	0x1
 2206 0083 55       		.byte	0x55
 2207 0084 1C000000 		.4byte	.LVL10
 2208 0088 1E000000 		.4byte	.LFE44
 2209 008c 0400     		.2byte	0x4
 2210 008e F3       		.byte	0xf3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 71


 2211 008f 01       		.uleb128 0x1
 2212 0090 51       		.byte	0x51
 2213 0091 9F       		.byte	0x9f
 2214 0092 00000000 		.4byte	0
 2215 0096 00000000 		.4byte	0
 2216              	.LLST4:
 2217 009a 06000000 		.4byte	.LVL4
 2218 009e 0A000000 		.4byte	.LVL5
 2219 00a2 0200     		.2byte	0x2
 2220 00a4 31       		.byte	0x31
 2221 00a5 9F       		.byte	0x9f
 2222 00a6 0A000000 		.4byte	.LVL5
 2223 00aa 16000000 		.4byte	.LVL7
 2224 00ae 0100     		.2byte	0x1
 2225 00b0 54       		.byte	0x54
 2226 00b1 16000000 		.4byte	.LVL7
 2227 00b5 18000000 		.4byte	.LVL8
 2228 00b9 0100     		.2byte	0x1
 2229 00bb 53       		.byte	0x53
 2230 00bc 18000000 		.4byte	.LVL8
 2231 00c0 1C000000 		.4byte	.LVL9
 2232 00c4 0100     		.2byte	0x1
 2233 00c6 54       		.byte	0x54
 2234 00c7 1C000000 		.4byte	.LVL9
 2235 00cb 1E000000 		.4byte	.LFE44
 2236 00cf 0300     		.2byte	0x3
 2237 00d1 73       		.byte	0x73
 2238 00d2 7F       		.sleb128 -1
 2239 00d3 9F       		.byte	0x9f
 2240 00d4 00000000 		.4byte	0
 2241 00d8 00000000 		.4byte	0
 2242              	.LLST5:
 2243 00dc 00000000 		.4byte	.LVL12
 2244 00e0 20000000 		.4byte	.LVL17
 2245 00e4 0100     		.2byte	0x1
 2246 00e6 50       		.byte	0x50
 2247 00e7 20000000 		.4byte	.LVL17
 2248 00eb 2C000000 		.4byte	.LFE43
 2249 00ef 0400     		.2byte	0x4
 2250 00f1 F3       		.byte	0xf3
 2251 00f2 01       		.uleb128 0x1
 2252 00f3 50       		.byte	0x50
 2253 00f4 9F       		.byte	0x9f
 2254 00f5 00000000 		.4byte	0
 2255 00f9 00000000 		.4byte	0
 2256              	.LLST6:
 2257 00fd 00000000 		.4byte	.LVL12
 2258 0101 12000000 		.4byte	.LVL15
 2259 0105 0100     		.2byte	0x1
 2260 0107 51       		.byte	0x51
 2261 0108 12000000 		.4byte	.LVL15
 2262 010c 2C000000 		.4byte	.LFE43
 2263 0110 0400     		.2byte	0x4
 2264 0112 F3       		.byte	0xf3
 2265 0113 01       		.uleb128 0x1
 2266 0114 51       		.byte	0x51
 2267 0115 9F       		.byte	0x9f
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 72


 2268 0116 00000000 		.4byte	0
 2269 011a 00000000 		.4byte	0
 2270              	.LLST7:
 2271 011e 02000000 		.4byte	.LVL13
 2272 0122 0E000000 		.4byte	.LVL14
 2273 0126 0200     		.2byte	0x2
 2274 0128 30       		.byte	0x30
 2275 0129 9F       		.byte	0x9f
 2276 012a 0E000000 		.4byte	.LVL14
 2277 012e 16000000 		.4byte	.LVL16
 2278 0132 0100     		.2byte	0x1
 2279 0134 55       		.byte	0x55
 2280 0135 16000000 		.4byte	.LVL16
 2281 0139 23000000 		.4byte	.LVL18-1
 2282 013d 0100     		.2byte	0x1
 2283 013f 52       		.byte	0x52
 2284 0140 23000000 		.4byte	.LVL18-1
 2285 0144 24000000 		.4byte	.LVL19
 2286 0148 0F00     		.2byte	0xf
 2287 014a F3       		.byte	0xf3
 2288 014b 01       		.uleb128 0x1
 2289 014c 51       		.byte	0x51
 2290 014d 32       		.byte	0x32
 2291 014e 24       		.byte	0x24
 2292 014f F3       		.byte	0xf3
 2293 0150 01       		.uleb128 0x1
 2294 0151 51       		.byte	0x51
 2295 0152 22       		.byte	0x22
 2296 0153 31       		.byte	0x31
 2297 0154 24       		.byte	0x24
 2298 0155 75       		.byte	0x75
 2299 0156 00       		.sleb128 0
 2300 0157 22       		.byte	0x22
 2301 0158 9F       		.byte	0x9f
 2302 0159 00000000 		.4byte	0
 2303 015d 00000000 		.4byte	0
 2304              	.LLST8:
 2305 0161 00000000 		.4byte	.LVL20
 2306 0165 12000000 		.4byte	.LVL23
 2307 0169 0100     		.2byte	0x1
 2308 016b 50       		.byte	0x50
 2309 016c 12000000 		.4byte	.LVL23
 2310 0170 22000000 		.4byte	.LVL28
 2311 0174 0100     		.2byte	0x1
 2312 0176 55       		.byte	0x55
 2313 0177 22000000 		.4byte	.LVL28
 2314 017b 28000000 		.4byte	.LFE42
 2315 017f 0400     		.2byte	0x4
 2316 0181 F3       		.byte	0xf3
 2317 0182 01       		.uleb128 0x1
 2318 0183 50       		.byte	0x50
 2319 0184 9F       		.byte	0x9f
 2320 0185 00000000 		.4byte	0
 2321 0189 00000000 		.4byte	0
 2322              	.LLST9:
 2323 018d 10000000 		.4byte	.LVL22
 2324 0191 12000000 		.4byte	.LVL23
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 73


 2325 0195 0100     		.2byte	0x1
 2326 0197 53       		.byte	0x53
 2327 0198 12000000 		.4byte	.LVL23
 2328 019c 1C000000 		.4byte	.LVL25
 2329 01a0 0100     		.2byte	0x1
 2330 01a2 54       		.byte	0x54
 2331 01a3 1C000000 		.4byte	.LVL25
 2332 01a7 1E000000 		.4byte	.LVL26
 2333 01ab 0100     		.2byte	0x1
 2334 01ad 53       		.byte	0x53
 2335 01ae 1E000000 		.4byte	.LVL26
 2336 01b2 22000000 		.4byte	.LVL27
 2337 01b6 0100     		.2byte	0x1
 2338 01b8 54       		.byte	0x54
 2339 01b9 22000000 		.4byte	.LVL27
 2340 01bd 28000000 		.4byte	.LFE42
 2341 01c1 0300     		.2byte	0x3
 2342 01c3 73       		.byte	0x73
 2343 01c4 7F       		.sleb128 -1
 2344 01c5 9F       		.byte	0x9f
 2345 01c6 00000000 		.4byte	0
 2346 01ca 00000000 		.4byte	0
 2347              	.LLST10:
 2348 01ce 10000000 		.4byte	.LVL22
 2349 01d2 12000000 		.4byte	.LVL23
 2350 01d6 0100     		.2byte	0x1
 2351 01d8 53       		.byte	0x53
 2352 01d9 00000000 		.4byte	0
 2353 01dd 00000000 		.4byte	0
 2354              	.LLST11:
 2355 01e1 02000000 		.4byte	.LVL29
 2356 01e5 06000000 		.4byte	.LVL30
 2357 01e9 0200     		.2byte	0x2
 2358 01eb 3A       		.byte	0x3a
 2359 01ec 9F       		.byte	0x9f
 2360 01ed 06000000 		.4byte	.LVL30
 2361 01f1 0E000000 		.4byte	.LVL32
 2362 01f5 0100     		.2byte	0x1
 2363 01f7 54       		.byte	0x54
 2364 01f8 0E000000 		.4byte	.LVL32
 2365 01fc 10000000 		.4byte	.LVL33
 2366 0200 0100     		.2byte	0x1
 2367 0202 53       		.byte	0x53
 2368 0203 10000000 		.4byte	.LVL33
 2369 0207 14000000 		.4byte	.LVL34
 2370 020b 0100     		.2byte	0x1
 2371 020d 54       		.byte	0x54
 2372 020e 14000000 		.4byte	.LVL34
 2373 0212 16000000 		.4byte	.LFE41
 2374 0216 0300     		.2byte	0x3
 2375 0218 73       		.byte	0x73
 2376 0219 7F       		.sleb128 -1
 2377 021a 9F       		.byte	0x9f
 2378 021b 00000000 		.4byte	0
 2379 021f 00000000 		.4byte	0
 2380              	.LLST12:
 2381 0223 00000000 		.4byte	.LVL35
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 74


 2382 0227 02000000 		.4byte	.LVL36
 2383 022b 0100     		.2byte	0x1
 2384 022d 50       		.byte	0x50
 2385 022e 02000000 		.4byte	.LVL36
 2386 0232 12000000 		.4byte	.LFE46
 2387 0236 0400     		.2byte	0x4
 2388 0238 F3       		.byte	0xf3
 2389 0239 01       		.uleb128 0x1
 2390 023a 50       		.byte	0x50
 2391 023b 9F       		.byte	0x9f
 2392 023c 00000000 		.4byte	0
 2393 0240 00000000 		.4byte	0
 2394              	.LLST13:
 2395 0244 00000000 		.4byte	.LVL35
 2396 0248 0C000000 		.4byte	.LVL39
 2397 024c 0100     		.2byte	0x1
 2398 024e 51       		.byte	0x51
 2399 024f 0C000000 		.4byte	.LVL39
 2400 0253 12000000 		.4byte	.LFE46
 2401 0257 0400     		.2byte	0x4
 2402 0259 F3       		.byte	0xf3
 2403 025a 01       		.uleb128 0x1
 2404 025b 51       		.byte	0x51
 2405 025c 9F       		.byte	0x9f
 2406 025d 00000000 		.4byte	0
 2407 0261 00000000 		.4byte	0
 2408              	.LLST14:
 2409 0265 00000000 		.4byte	.LVL35
 2410 0269 0A000000 		.4byte	.LVL38
 2411 026d 0100     		.2byte	0x1
 2412 026f 52       		.byte	0x52
 2413 0270 0A000000 		.4byte	.LVL38
 2414 0274 12000000 		.4byte	.LFE46
 2415 0278 0400     		.2byte	0x4
 2416 027a F3       		.byte	0xf3
 2417 027b 01       		.uleb128 0x1
 2418 027c 52       		.byte	0x52
 2419 027d 9F       		.byte	0x9f
 2420 027e 00000000 		.4byte	0
 2421 0282 00000000 		.4byte	0
 2422              	.LLST15:
 2423 0286 00000000 		.4byte	.LVL35
 2424 028a 06000000 		.4byte	.LVL37
 2425 028e 0100     		.2byte	0x1
 2426 0290 53       		.byte	0x53
 2427 0291 06000000 		.4byte	.LVL37
 2428 0295 12000000 		.4byte	.LFE46
 2429 0299 0400     		.2byte	0x4
 2430 029b F3       		.byte	0xf3
 2431 029c 01       		.uleb128 0x1
 2432 029d 53       		.byte	0x53
 2433 029e 9F       		.byte	0x9f
 2434 029f 00000000 		.4byte	0
 2435 02a3 00000000 		.4byte	0
 2436              	.LLST16:
 2437 02a7 00000000 		.4byte	.LVL41
 2438 02ab 10000000 		.4byte	.LVL43
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 75


 2439 02af 0100     		.2byte	0x1
 2440 02b1 50       		.byte	0x50
 2441 02b2 10000000 		.4byte	.LVL43
 2442 02b6 88000000 		.4byte	.LVL61
 2443 02ba 0100     		.2byte	0x1
 2444 02bc 57       		.byte	0x57
 2445 02bd 88000000 		.4byte	.LVL61
 2446 02c1 8E000000 		.4byte	.LFE40
 2447 02c5 0400     		.2byte	0x4
 2448 02c7 F3       		.byte	0xf3
 2449 02c8 01       		.uleb128 0x1
 2450 02c9 50       		.byte	0x50
 2451 02ca 9F       		.byte	0x9f
 2452 02cb 00000000 		.4byte	0
 2453 02cf 00000000 		.4byte	0
 2454              	.LLST17:
 2455 02d3 00000000 		.4byte	.LVL41
 2456 02d7 10000000 		.4byte	.LVL43
 2457 02db 0100     		.2byte	0x1
 2458 02dd 51       		.byte	0x51
 2459 02de 10000000 		.4byte	.LVL43
 2460 02e2 88000000 		.4byte	.LVL60
 2461 02e6 0100     		.2byte	0x1
 2462 02e8 56       		.byte	0x56
 2463 02e9 88000000 		.4byte	.LVL60
 2464 02ed 8E000000 		.4byte	.LFE40
 2465 02f1 0400     		.2byte	0x4
 2466 02f3 F3       		.byte	0xf3
 2467 02f4 01       		.uleb128 0x1
 2468 02f5 51       		.byte	0x51
 2469 02f6 9F       		.byte	0x9f
 2470 02f7 00000000 		.4byte	0
 2471 02fb 00000000 		.4byte	0
 2472              	.LLST18:
 2473 02ff 00000000 		.4byte	.LVL41
 2474 0303 10000000 		.4byte	.LVL43
 2475 0307 0100     		.2byte	0x1
 2476 0309 52       		.byte	0x52
 2477 030a 10000000 		.4byte	.LVL43
 2478 030e 88000000 		.4byte	.LVL59
 2479 0312 0100     		.2byte	0x1
 2480 0314 55       		.byte	0x55
 2481 0315 88000000 		.4byte	.LVL59
 2482 0319 8E000000 		.4byte	.LFE40
 2483 031d 0400     		.2byte	0x4
 2484 031f F3       		.byte	0xf3
 2485 0320 01       		.uleb128 0x1
 2486 0321 52       		.byte	0x52
 2487 0322 9F       		.byte	0x9f
 2488 0323 00000000 		.4byte	0
 2489 0327 00000000 		.4byte	0
 2490              	.LLST19:
 2491 032b 20000000 		.4byte	.LVL44
 2492 032f 2A000000 		.4byte	.LVL46
 2493 0333 0200     		.2byte	0x2
 2494 0335 31       		.byte	0x31
 2495 0336 9F       		.byte	0x9f
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 76


 2496 0337 2E000000 		.4byte	.LVL47
 2497 033b 30000000 		.4byte	.LVL48
 2498 033f 0200     		.2byte	0x2
 2499 0341 30       		.byte	0x30
 2500 0342 9F       		.byte	0x9f
 2501 0343 30000000 		.4byte	.LVL48
 2502 0347 36000000 		.4byte	.LVL49
 2503 034b 0100     		.2byte	0x1
 2504 034d 53       		.byte	0x53
 2505 034e 00000000 		.4byte	0
 2506 0352 00000000 		.4byte	0
 2507              	.LLST20:
 2508 0356 20000000 		.4byte	.LVL44
 2509 035a 22000000 		.4byte	.LVL45
 2510 035e 0100     		.2byte	0x1
 2511 0360 53       		.byte	0x53
 2512 0361 22000000 		.4byte	.LVL45
 2513 0365 2A000000 		.4byte	.LVL46
 2514 0369 0100     		.2byte	0x1
 2515 036b 58       		.byte	0x58
 2516 036c 2E000000 		.4byte	.LVL47
 2517 0370 30000000 		.4byte	.LVL48
 2518 0374 0100     		.2byte	0x1
 2519 0376 53       		.byte	0x53
 2520 0377 30000000 		.4byte	.LVL48
 2521 037b 66000000 		.4byte	.LVL52
 2522 037f 0100     		.2byte	0x1
 2523 0381 58       		.byte	0x58
 2524 0382 00000000 		.4byte	0
 2525 0386 00000000 		.4byte	0
 2526              	.LLST21:
 2527 038a 0C000000 		.4byte	.LVL42
 2528 038e 10000000 		.4byte	.LVL43
 2529 0392 0200     		.2byte	0x2
 2530 0394 31       		.byte	0x31
 2531 0395 9F       		.byte	0x9f
 2532 0396 10000000 		.4byte	.LVL43
 2533 039a 80000000 		.4byte	.LVL56
 2534 039e 0100     		.2byte	0x1
 2535 03a0 54       		.byte	0x54
 2536 03a1 80000000 		.4byte	.LVL56
 2537 03a5 82000000 		.4byte	.LVL57
 2538 03a9 0100     		.2byte	0x1
 2539 03ab 53       		.byte	0x53
 2540 03ac 82000000 		.4byte	.LVL57
 2541 03b0 88000000 		.4byte	.LVL58
 2542 03b4 0100     		.2byte	0x1
 2543 03b6 54       		.byte	0x54
 2544 03b7 88000000 		.4byte	.LVL58
 2545 03bb 8E000000 		.4byte	.LFE40
 2546 03bf 0300     		.2byte	0x3
 2547 03c1 73       		.byte	0x73
 2548 03c2 7F       		.sleb128 -1
 2549 03c3 9F       		.byte	0x9f
 2550 03c4 00000000 		.4byte	0
 2551 03c8 00000000 		.4byte	0
 2552              	.LLST22:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 77


 2553 03cc 6A000000 		.4byte	.LVL53
 2554 03d0 7E000000 		.4byte	.LVL55
 2555 03d4 0200     		.2byte	0x2
 2556 03d6 31       		.byte	0x31
 2557 03d7 9F       		.byte	0x9f
 2558 03d8 00000000 		.4byte	0
 2559 03dc 00000000 		.4byte	0
 2560              	.LLST23:
 2561 03e0 62000000 		.4byte	.LVL51
 2562 03e4 71000000 		.4byte	.LVL54-1
 2563 03e8 0100     		.2byte	0x1
 2564 03ea 51       		.byte	0x51
 2565 03eb 72000000 		.4byte	.LVL54
 2566 03ef 7E000000 		.4byte	.LVL55
 2567 03f3 0100     		.2byte	0x1
 2568 03f5 50       		.byte	0x50
 2569 03f6 00000000 		.4byte	0
 2570 03fa 00000000 		.4byte	0
 2571              	.LLST24:
 2572 03fe 00000000 		.4byte	.LVL62
 2573 0402 22000000 		.4byte	.LVL68
 2574 0406 0100     		.2byte	0x1
 2575 0408 50       		.byte	0x50
 2576 0409 22000000 		.4byte	.LVL68
 2577 040d 2C000000 		.4byte	.LFE39
 2578 0411 0400     		.2byte	0x4
 2579 0413 F3       		.byte	0xf3
 2580 0414 01       		.uleb128 0x1
 2581 0415 50       		.byte	0x50
 2582 0416 9F       		.byte	0x9f
 2583 0417 00000000 		.4byte	0
 2584 041b 00000000 		.4byte	0
 2585              	.LLST25:
 2586 041f 00000000 		.4byte	.LVL62
 2587 0423 16000000 		.4byte	.LVL66
 2588 0427 0100     		.2byte	0x1
 2589 0429 51       		.byte	0x51
 2590 042a 16000000 		.4byte	.LVL66
 2591 042e 2C000000 		.4byte	.LFE39
 2592 0432 0400     		.2byte	0x4
 2593 0434 F3       		.byte	0xf3
 2594 0435 01       		.uleb128 0x1
 2595 0436 51       		.byte	0x51
 2596 0437 9F       		.byte	0x9f
 2597 0438 00000000 		.4byte	0
 2598 043c 00000000 		.4byte	0
 2599              	.LLST26:
 2600 0440 02000000 		.4byte	.LVL63
 2601 0444 26000000 		.4byte	.LVL69
 2602 0448 0200     		.2byte	0x2
 2603 044a 30       		.byte	0x30
 2604 044b 9F       		.byte	0x9f
 2605 044c 26000000 		.4byte	.LVL69
 2606 0450 2C000000 		.4byte	.LFE39
 2607 0454 0100     		.2byte	0x1
 2608 0456 50       		.byte	0x50
 2609 0457 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 78


 2610 045b 00000000 		.4byte	0
 2611              	.LLST27:
 2612 045f 02000000 		.4byte	.LVL63
 2613 0463 10000000 		.4byte	.LVL65
 2614 0467 0200     		.2byte	0x2
 2615 0469 30       		.byte	0x30
 2616 046a 9F       		.byte	0x9f
 2617 046b 10000000 		.4byte	.LVL65
 2618 046f 18000000 		.4byte	.LVL67
 2619 0473 0100     		.2byte	0x1
 2620 0475 56       		.byte	0x56
 2621 0476 18000000 		.4byte	.LVL67
 2622 047a 25000000 		.4byte	.LVL69-1
 2623 047e 0100     		.2byte	0x1
 2624 0480 51       		.byte	0x51
 2625 0481 25000000 		.4byte	.LVL69-1
 2626 0485 26000000 		.4byte	.LVL72
 2627 0489 0F00     		.2byte	0xf
 2628 048b F3       		.byte	0xf3
 2629 048c 01       		.uleb128 0x1
 2630 048d 51       		.byte	0x51
 2631 048e 32       		.byte	0x32
 2632 048f 24       		.byte	0x24
 2633 0490 F3       		.byte	0xf3
 2634 0491 01       		.uleb128 0x1
 2635 0492 51       		.byte	0x51
 2636 0493 22       		.byte	0x22
 2637 0494 31       		.byte	0x31
 2638 0495 24       		.byte	0x24
 2639 0496 76       		.byte	0x76
 2640 0497 00       		.sleb128 0
 2641 0498 22       		.byte	0x22
 2642 0499 9F       		.byte	0x9f
 2643 049a 00000000 		.4byte	0
 2644 049e 00000000 		.4byte	0
 2645              	.LLST28:
 2646 04a2 0E000000 		.4byte	.LVL64
 2647 04a6 26000000 		.4byte	.LVL70
 2648 04aa 0100     		.2byte	0x1
 2649 04ac 54       		.byte	0x54
 2650 04ad 26000000 		.4byte	.LVL70
 2651 04b1 26000000 		.4byte	.LVL71
 2652 04b5 1000     		.2byte	0x10
 2653 04b7 F3       		.byte	0xf3
 2654 04b8 01       		.uleb128 0x1
 2655 04b9 50       		.byte	0x50
 2656 04ba 33       		.byte	0x33
 2657 04bb 24       		.byte	0x24
 2658 04bc F3       		.byte	0xf3
 2659 04bd 01       		.uleb128 0x1
 2660 04be 50       		.byte	0x50
 2661 04bf 1C       		.byte	0x1c
 2662 04c0 32       		.byte	0x32
 2663 04c1 24       		.byte	0x24
 2664 04c2 75       		.byte	0x75
 2665 04c3 00       		.sleb128 0
 2666 04c4 22       		.byte	0x22
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 79


 2667 04c5 23       		.byte	0x23
 2668 04c6 04       		.uleb128 0x4
 2669 04c7 00000000 		.4byte	0
 2670 04cb 00000000 		.4byte	0
 2671              	.LLST29:
 2672 04cf 00000000 		.4byte	.LVL73
 2673 04d3 14000000 		.4byte	.LVL76
 2674 04d7 0100     		.2byte	0x1
 2675 04d9 50       		.byte	0x50
 2676 04da 14000000 		.4byte	.LVL76
 2677 04de 28000000 		.4byte	.LVL83
 2678 04e2 0100     		.2byte	0x1
 2679 04e4 56       		.byte	0x56
 2680 04e5 28000000 		.4byte	.LVL83
 2681 04e9 30000000 		.4byte	.LFE38
 2682 04ed 0400     		.2byte	0x4
 2683 04ef F3       		.byte	0xf3
 2684 04f0 01       		.uleb128 0x1
 2685 04f1 50       		.byte	0x50
 2686 04f2 9F       		.byte	0x9f
 2687 04f3 00000000 		.4byte	0
 2688 04f7 00000000 		.4byte	0
 2689              	.LLST30:
 2690 04fb 10000000 		.4byte	.LVL75
 2691 04ff 14000000 		.4byte	.LVL76
 2692 0503 0100     		.2byte	0x1
 2693 0505 53       		.byte	0x53
 2694 0506 14000000 		.4byte	.LVL76
 2695 050a 20000000 		.4byte	.LVL79
 2696 050e 0100     		.2byte	0x1
 2697 0510 54       		.byte	0x54
 2698 0511 20000000 		.4byte	.LVL79
 2699 0515 22000000 		.4byte	.LVL80
 2700 0519 0100     		.2byte	0x1
 2701 051b 53       		.byte	0x53
 2702 051c 22000000 		.4byte	.LVL80
 2703 0520 28000000 		.4byte	.LVL81
 2704 0524 0100     		.2byte	0x1
 2705 0526 54       		.byte	0x54
 2706 0527 28000000 		.4byte	.LVL81
 2707 052b 30000000 		.4byte	.LFE38
 2708 052f 0300     		.2byte	0x3
 2709 0531 73       		.byte	0x73
 2710 0532 7F       		.sleb128 -1
 2711 0533 9F       		.byte	0x9f
 2712 0534 00000000 		.4byte	0
 2713 0538 00000000 		.4byte	0
 2714              	.LLST31:
 2715 053c 10000000 		.4byte	.LVL75
 2716 0540 14000000 		.4byte	.LVL76
 2717 0544 0100     		.2byte	0x1
 2718 0546 53       		.byte	0x53
 2719 0547 00000000 		.4byte	0
 2720 054b 00000000 		.4byte	0
 2721              	.LLST32:
 2722 054f 04000000 		.4byte	.LVL74
 2723 0553 14000000 		.4byte	.LVL76
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 80


 2724 0557 0200     		.2byte	0x2
 2725 0559 30       		.byte	0x30
 2726 055a 9F       		.byte	0x9f
 2727 055b 14000000 		.4byte	.LVL76
 2728 055f 28000000 		.4byte	.LVL82
 2729 0563 0100     		.2byte	0x1
 2730 0565 55       		.byte	0x55
 2731 0566 28000000 		.4byte	.LVL82
 2732 056a 30000000 		.4byte	.LFE38
 2733 056e 0100     		.2byte	0x1
 2734 0570 50       		.byte	0x50
 2735 0571 00000000 		.4byte	0
 2736 0575 00000000 		.4byte	0
 2737              	.LLST33:
 2738 0579 02000000 		.4byte	.LVL84
 2739 057d 08000000 		.4byte	.LVL85
 2740 0581 0200     		.2byte	0x2
 2741 0583 3A       		.byte	0x3a
 2742 0584 9F       		.byte	0x9f
 2743 0585 08000000 		.4byte	.LVL85
 2744 0589 12000000 		.4byte	.LVL88
 2745 058d 0100     		.2byte	0x1
 2746 058f 54       		.byte	0x54
 2747 0590 12000000 		.4byte	.LVL88
 2748 0594 14000000 		.4byte	.LVL89
 2749 0598 0100     		.2byte	0x1
 2750 059a 53       		.byte	0x53
 2751 059b 14000000 		.4byte	.LVL89
 2752 059f 1A000000 		.4byte	.LVL90
 2753 05a3 0100     		.2byte	0x1
 2754 05a5 54       		.byte	0x54
 2755 05a6 1A000000 		.4byte	.LVL90
 2756 05aa 1C000000 		.4byte	.LFE37
 2757 05ae 0300     		.2byte	0x3
 2758 05b0 73       		.byte	0x73
 2759 05b1 7F       		.sleb128 -1
 2760 05b2 9F       		.byte	0x9f
 2761 05b3 00000000 		.4byte	0
 2762 05b7 00000000 		.4byte	0
 2763              	.LLST34:
 2764 05bb 02000000 		.4byte	.LVL84
 2765 05bf 08000000 		.4byte	.LVL85
 2766 05c3 0200     		.2byte	0x2
 2767 05c5 30       		.byte	0x30
 2768 05c6 9F       		.byte	0x9f
 2769 05c7 08000000 		.4byte	.LVL85
 2770 05cb 1A000000 		.4byte	.LVL91
 2771 05cf 0100     		.2byte	0x1
 2772 05d1 55       		.byte	0x55
 2773 05d2 1A000000 		.4byte	.LVL91
 2774 05d6 1C000000 		.4byte	.LFE37
 2775 05da 0100     		.2byte	0x1
 2776 05dc 50       		.byte	0x50
 2777 05dd 00000000 		.4byte	0
 2778 05e1 00000000 		.4byte	0
 2779              		.section	.debug_aranges,"",%progbits
 2780 0000 6C000000 		.4byte	0x6c
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 81


 2781 0004 0200     		.2byte	0x2
 2782 0006 00000000 		.4byte	.Ldebug_info0
 2783 000a 04       		.byte	0x4
 2784 000b 00       		.byte	0
 2785 000c 0000     		.2byte	0
 2786 000e 0000     		.2byte	0
 2787 0010 00000000 		.4byte	.LFB36
 2788 0014 02000000 		.4byte	.LFE36-.LFB36
 2789 0018 00000000 		.4byte	.LFB45
 2790 001c 1E000000 		.4byte	.LFE45-.LFB45
 2791 0020 00000000 		.4byte	.LFB44
 2792 0024 1E000000 		.4byte	.LFE44-.LFB44
 2793 0028 00000000 		.4byte	.LFB43
 2794 002c 2C000000 		.4byte	.LFE43-.LFB43
 2795 0030 00000000 		.4byte	.LFB42
 2796 0034 28000000 		.4byte	.LFE42-.LFB42
 2797 0038 00000000 		.4byte	.LFB41
 2798 003c 16000000 		.4byte	.LFE41-.LFB41
 2799 0040 00000000 		.4byte	.LFB46
 2800 0044 12000000 		.4byte	.LFE46-.LFB46
 2801 0048 00000000 		.4byte	.LFB40
 2802 004c 8E000000 		.4byte	.LFE40-.LFB40
 2803 0050 00000000 		.4byte	.LFB39
 2804 0054 2C000000 		.4byte	.LFE39-.LFB39
 2805 0058 00000000 		.4byte	.LFB38
 2806 005c 30000000 		.4byte	.LFE38-.LFB38
 2807 0060 00000000 		.4byte	.LFB37
 2808 0064 1C000000 		.4byte	.LFE37-.LFB37
 2809 0068 00000000 		.4byte	0
 2810 006c 00000000 		.4byte	0
 2811              		.section	.debug_ranges,"",%progbits
 2812              	.Ldebug_ranges0:
 2813 0000 00000000 		.4byte	.LFB36
 2814 0004 02000000 		.4byte	.LFE36
 2815 0008 00000000 		.4byte	.LFB45
 2816 000c 1E000000 		.4byte	.LFE45
 2817 0010 00000000 		.4byte	.LFB44
 2818 0014 1E000000 		.4byte	.LFE44
 2819 0018 00000000 		.4byte	.LFB43
 2820 001c 2C000000 		.4byte	.LFE43
 2821 0020 00000000 		.4byte	.LFB42
 2822 0024 28000000 		.4byte	.LFE42
 2823 0028 00000000 		.4byte	.LFB41
 2824 002c 16000000 		.4byte	.LFE41
 2825 0030 00000000 		.4byte	.LFB46
 2826 0034 12000000 		.4byte	.LFE46
 2827 0038 00000000 		.4byte	.LFB40
 2828 003c 8E000000 		.4byte	.LFE40
 2829 0040 00000000 		.4byte	.LFB39
 2830 0044 2C000000 		.4byte	.LFE39
 2831 0048 00000000 		.4byte	.LFB38
 2832 004c 30000000 		.4byte	.LFE38
 2833 0050 00000000 		.4byte	.LFB37
 2834 0054 1C000000 		.4byte	.LFE37
 2835 0058 00000000 		.4byte	0
 2836 005c 00000000 		.4byte	0
 2837              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 82


 2838              	.Ldebug_line0:
 2839 0000 CD020000 		.section	.debug_str,"MS",%progbits,1
 2839      02009C01 
 2839      00000201 
 2839      FB0E0D00 
 2839      01010101 
 2840              	.LASF60:
 2841 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2841      656E7365 
 2841      5F464C41 
 2841      53485F53 
 2841      54525543 
 2842              	.LASF25:
 2843 0016 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2843      656E7365 
 2843      5F4C4F57 
 2843      5F42534C 
 2843      4E5F5253 
 2844              	.LASF84:
 2845 0031 72657375 		.ascii	"result\000"
 2845      6C7400
 2846              	.LASF44:
 2847 0038 62736C6E 		.ascii	"bsln\000"
 2847      00
 2848              	.LASF68:
 2849 003d 73656E73 		.ascii	"sensorId\000"
 2849      6F724964 
 2849      00
 2850              	.LASF88:
 2851 0046 62736C6E 		.ascii	"bslnStatus\000"
 2851      53746174 
 2851      757300
 2852              	.LASF39:
 2853 0051 6C6F7742 		.ascii	"lowBslnRst\000"
 2853      736C6E52 
 2853      737400
 2854              	.LASF46:
 2855 005c 64696666 		.ascii	"diff\000"
 2855      00
 2856              	.LASF55:
 2857 0061 746F7461 		.ascii	"totalNumSns\000"
 2857      6C4E756D 
 2857      536E7300 
 2858              	.LASF73:
 2859 006d 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2859      656E7365 
 2859      5F496E69 
 2859      7469616C 
 2859      697A6541 
 2860              	.LASF40:
 2861 008d 69646163 		.ascii	"idacMod\000"
 2861      4D6F6400 
 2862              	.LASF5:
 2863 0095 73686F72 		.ascii	"short int\000"
 2863      7420696E 
 2863      7400
 2864              	.LASF74:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 83


 2865 009f 696E7075 		.ascii	"input\000"
 2865      7400
 2866              	.LASF30:
 2867 00a5 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2867      656E7365 
 2867      5F57445F 
 2867      544F5543 
 2867      48504144 
 2868              	.LASF58:
 2869 00bc 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2869      656E7365 
 2869      5F464C41 
 2869      53485F57 
 2869      445F5354 
 2870              	.LASF82:
 2871 00d5 64696666 		.ascii	"difference\000"
 2871      6572656E 
 2871      636500
 2872              	.LASF90:
 2873 00e0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2873      43313120 
 2873      352E342E 
 2873      31203230 
 2873      31363036 
 2874 0113 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2874      20726576 
 2874      6973696F 
 2874      6E203233 
 2874      37373135 
 2875 0146 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2875      67202D66 
 2875      66756E63 
 2875      74696F6E 
 2875      2D736563 
 2876              	.LASF36:
 2877 0172 6E4E6F69 		.ascii	"nNoiseTh\000"
 2877      73655468 
 2877      00
 2878              	.LASF62:
 2879 017b 77645479 		.ascii	"wdType\000"
 2879      706500
 2880              	.LASF77:
 2881 0182 66696C74 		.ascii	"filteredOutput\000"
 2881      65726564 
 2881      4F757470 
 2881      757400
 2882              	.LASF10:
 2883 0191 5F5F7569 		.ascii	"__uint32_t\000"
 2883      6E743332 
 2883      5F7400
 2884              	.LASF85:
 2885 019c 68697374 		.ascii	"history\000"
 2885      6F727900 
 2886              	.LASF42:
 2887 01a4 736E7343 		.ascii	"snsClkSource\000"
 2887      6C6B536F 
 2887      75726365 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 84


 2887      00
 2888              	.LASF7:
 2889 01b1 5F5F7569 		.ascii	"__uint16_t\000"
 2889      6E743136 
 2889      5F7400
 2890              	.LASF26:
 2891 01bc 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2891      656E7365 
 2891      5F57445F 
 2891      42555454 
 2891      4F4E5F45 
 2892              	.LASF35:
 2893 01d1 6E6F6973 		.ascii	"noiseTh\000"
 2893      65546800 
 2894              	.LASF22:
 2895 01d9 75696E74 		.ascii	"uint16\000"
 2895      313600
 2896              	.LASF86:
 2897 01e0 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2897      656E7365 
 2897      5F557064 
 2897      61746553 
 2897      656E736F 
 2898              	.LASF53:
 2899 01fe 70747232 		.ascii	"ptr2DebounceArr\000"
 2899      4465626F 
 2899      756E6365 
 2899      41727200 
 2900              	.LASF13:
 2901 020e 75696E74 		.ascii	"uint8_t\000"
 2901      385F7400 
 2902              	.LASF21:
 2903 0216 75696E74 		.ascii	"uint8\000"
 2903      3800
 2904              	.LASF80:
 2905 021c 70747257 		.ascii	"ptrWidgetRam\000"
 2905      69646765 
 2905      7452616D 
 2905      00
 2906              	.LASF41:
 2907 0229 736E7343 		.ascii	"snsClk\000"
 2907      6C6B00
 2908              	.LASF64:
 2909 0230 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2909      656E7365 
 2909      5F467449 
 2909      6E697469 
 2909      616C697A 
 2910              	.LASF78:
 2911 0255 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2911      656E7365 
 2911      5F467449 
 2911      49523173 
 2911      744F7264 
 2912              	.LASF31:
 2913 026c 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2913      656E7365 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 85


 2913      5F57445F 
 2913      50524F58 
 2913      494D4954 
 2914              	.LASF18:
 2915 0284 666C6F61 		.ascii	"float\000"
 2915      7400
 2916              	.LASF1:
 2917 028a 6C6F6E67 		.ascii	"long long int\000"
 2917      206C6F6E 
 2917      6720696E 
 2917      7400
 2918              	.LASF17:
 2919 0298 63686172 		.ascii	"char\000"
 2919      00
 2920              	.LASF9:
 2921 029d 6C6F6E67 		.ascii	"long int\000"
 2921      20696E74 
 2921      00
 2922              	.LASF76:
 2923 02a6 73686966 		.ascii	"shift\000"
 2923      7400
 2924              	.LASF56:
 2925 02ac 77646774 		.ascii	"wdgtType\000"
 2925      54797065 
 2925      00
 2926              	.LASF91:
 2927 02b5 47656E65 		.ascii	"Generated_Source\\PSoC6\\CapSense_Filter.c\000"
 2927      72617465 
 2927      645F536F 
 2927      75726365 
 2927      5C50536F 
 2928              	.LASF16:
 2929 02de 73697A65 		.ascii	"sizetype\000"
 2929      74797065 
 2929      00
 2930              	.LASF24:
 2931 02e7 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2931      656E7365 
 2931      5F544852 
 2931      4553484F 
 2931      4C445F54 
 2932              	.LASF47:
 2933 02ff 6E656742 		.ascii	"negBslnRstCnt\000"
 2933      736C6E52 
 2933      7374436E 
 2933      7400
 2934              	.LASF6:
 2935 030d 5F5F7569 		.ascii	"__uint8_t\000"
 2935      6E74385F 
 2935      7400
 2936              	.LASF38:
 2937 0317 6F6E4465 		.ascii	"onDebounce\000"
 2937      626F756E 
 2937      636500
 2938              	.LASF34:
 2939 0322 66696E67 		.ascii	"fingerTh\000"
 2939      65725468 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 86


 2939      00
 2940              	.LASF57:
 2941 032b 6E756D43 		.ascii	"numCols\000"
 2941      6F6C7300 
 2942              	.LASF66:
 2943 0333 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2943      656E7365 
 2943      5F496E69 
 2943      7469616C 
 2943      697A6553 
 2944              	.LASF37:
 2945 0355 68797374 		.ascii	"hysteresis\000"
 2945      65726573 
 2945      697300
 2946              	.LASF2:
 2947 0360 6C6F6E67 		.ascii	"long double\000"
 2947      20646F75 
 2947      626C6500 
 2948              	.LASF4:
 2949 036c 756E7369 		.ascii	"unsigned char\000"
 2949      676E6564 
 2949      20636861 
 2949      7200
 2950              	.LASF72:
 2951 037a 70747257 		.ascii	"ptrWidget\000"
 2951      69646765 
 2951      7400
 2952              	.LASF20:
 2953 0384 63795F73 		.ascii	"cy_status\000"
 2953      74617475 
 2953      7300
 2954              	.LASF3:
 2955 038e 7369676E 		.ascii	"signed char\000"
 2955      65642063 
 2955      68617200 
 2956              	.LASF12:
 2957 039a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2957      206C6F6E 
 2957      6720756E 
 2957      7369676E 
 2957      65642069 
 2958              	.LASF15:
 2959 03b1 75696E74 		.ascii	"uint32_t\000"
 2959      33325F74 
 2959      00
 2960              	.LASF54:
 2961 03ba 73746174 		.ascii	"staticConfig\000"
 2961      6963436F 
 2961      6E666967 
 2961      00
 2962              	.LASF92:
 2963 03c7 433A5C55 		.ascii	"C:\\Users\\User\\Desktop\\SmartBottle_v0p1\\SmartBo"
 2963      73657273 
 2963      5C557365 
 2963      725C4465 
 2963      736B746F 
 2964 03f5 74746C65 		.ascii	"ttle_v0p1.cydsn\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 87


 2964      5F763070 
 2964      312E6379 
 2964      64736E00 
 2965              	.LASF0:
 2966 0405 756E7369 		.ascii	"unsigned int\000"
 2966      676E6564 
 2966      20696E74 
 2966      00
 2967              	.LASF14:
 2968 0412 75696E74 		.ascii	"uint16_t\000"
 2968      31365F74 
 2968      00
 2969              	.LASF69:
 2970 041b 66726571 		.ascii	"freqChannel\000"
 2970      4368616E 
 2970      6E656C00 
 2971              	.LASF48:
 2972 0427 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2972      656E7365 
 2972      5F52414D 
 2972      5F534E53 
 2972      5F535452 
 2973              	.LASF87:
 2974 043f 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2974      656E7365 
 2974      5F557064 
 2974      61746557 
 2974      69646765 
 2975              	.LASF27:
 2976 045d 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2976      656E7365 
 2976      5F57445F 
 2976      4C494E45 
 2976      41525F53 
 2977              	.LASF8:
 2978 0479 73686F72 		.ascii	"short unsigned int\000"
 2978      7420756E 
 2978      7369676E 
 2978      65642069 
 2978      6E7400
 2979              	.LASF89:
 2980 048c 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2980      656E7365 
 2980      5F557064 
 2980      61746541 
 2980      6C6C4261 
 2981              	.LASF93:
 2982 04a8 43617053 		.ascii	"CapSense_FtInitialize\000"
 2982      656E7365 
 2982      5F467449 
 2982      6E697469 
 2982      616C697A 
 2983              	.LASF65:
 2984 04be 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2984      656E7365 
 2984      5F467449 
 2984      6E697469 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 88


 2984      616C697A 
 2985              	.LASF33:
 2986 04dc 7265736F 		.ascii	"resolution\000"
 2986      6C757469 
 2986      6F6E00
 2987              	.LASF63:
 2988 04e7 6368616E 		.ascii	"channel\000"
 2988      6E656C00 
 2989              	.LASF79:
 2990 04ef 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2990      656E7365 
 2990      5F467455 
 2990      70646174 
 2990      65426173 
 2991              	.LASF71:
 2992 0509 73656E73 		.ascii	"sensorsNumber\000"
 2992      6F72734E 
 2992      756D6265 
 2992      7200
 2993              	.LASF50:
 2994 0517 70747232 		.ascii	"ptr2WdgtRam\000"
 2994      57646774 
 2994      52616D00 
 2995              	.LASF83:
 2996 0523 62617365 		.ascii	"baselineCoeff\000"
 2996      6C696E65 
 2996      436F6566 
 2996      6600
 2997              	.LASF28:
 2998 0531 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2998      656E7365 
 2998      5F57445F 
 2998      52414449 
 2998      414C5F53 
 2999              	.LASF67:
 3000 054d 77696467 		.ascii	"widgetId\000"
 3000      65744964 
 3000      00
 3001              	.LASF23:
 3002 0556 75696E74 		.ascii	"uint32\000"
 3002      333200
 3003              	.LASF11:
 3004 055d 6C6F6E67 		.ascii	"long unsigned int\000"
 3004      20756E73 
 3004      69676E65 
 3004      6420696E 
 3004      7400
 3005              	.LASF81:
 3006 056f 7369676E 		.ascii	"sign\000"
 3006      00
 3007              	.LASF19:
 3008 0574 646F7562 		.ascii	"double\000"
 3008      6C6500
 3009              	.LASF45:
 3010 057b 62736C6E 		.ascii	"bslnExt\000"
 3010      45787400 
 3011              	.LASF32:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccusbPpA.s 			page 89


 3012 0583 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 3012      656E7365 
 3012      5F57445F 
 3012      54595045 
 3012      5F454E55 
 3013              	.LASF75:
 3014 0599 70726576 		.ascii	"prevOutput\000"
 3014      4F757470 
 3014      757400
 3015              	.LASF29:
 3016 05a4 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 3016      656E7365 
 3016      5F57445F 
 3016      4D415452 
 3016      49585F42 
 3017              	.LASF51:
 3018 05c0 70747232 		.ascii	"ptr2SnsRam\000"
 3018      536E7352 
 3018      616D00
 3019              	.LASF70:
 3020 05cb 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 3020      656E7365 
 3020      5F496E69 
 3020      7469616C 
 3020      697A6557 
 3021              	.LASF52:
 3022 05ed 70747232 		.ascii	"ptr2FltrHistory\000"
 3022      466C7472 
 3022      48697374 
 3022      6F727900 
 3023              	.LASF59:
 3024 05fd 77646774 		.ascii	"wdgtArray\000"
 3024      41727261 
 3024      7900
 3025              	.LASF94:
 3026 0607 43617053 		.ascii	"CapSense_dsFlash\000"
 3026      656E7365 
 3026      5F647346 
 3026      6C617368 
 3026      00
 3027              	.LASF43:
 3028 0618 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 3028      656E7365 
 3028      5F52414D 
 3028      5F57445F 
 3028      42415345 
 3029              	.LASF49:
 3030 0634 70747232 		.ascii	"ptr2SnsFlash\000"
 3030      536E7346 
 3030      6C617368 
 3030      00
 3031              	.LASF61:
 3032 0641 70747253 		.ascii	"ptrSensor\000"
 3032      656E736F 
 3032      7200
 3033              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
